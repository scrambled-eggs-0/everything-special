"use strict";(self.webpackChunkomniserver=self.webpackChunkomniserver||[]).push([[494],{494:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _shared_shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(763);\n\r\n_shared_shared_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A.playYoutubeVideo = (link, {width/*=640*/, height/*=360*/, visible=true, loop=true, startTime=0, endTime=-1/*-1 = endTime end of video*/, volume=-1,/*-1 volume = default*/ autoplay=true, showPlayerUI=false, interactable=false, onReadyFn=()=>{}, onPlayFn=()=>{}, onPauseFn=()=>{}, onEndFn=()=>{}}) => {\r\n    let videoId = link.split(\'?v=\')[1];\r\n\r\n    let div = document.createElement(\'div\');\r\n    div.id = \'yt\' + Math.random();\r\n    document.body.appendChild(div);\r\n    \r\n    let params = {\r\n        enablejsapi: 1,\r\n        fs: showPlayerUI === true ? 1 : 0,\r\n        controls: showPlayerUI === true ? 1 : 0,\r\n        autoplay: autoplay === true ? 1 : 0,\r\n    }\r\n    if(loop === true){\r\n        params.playlist = videoId;\r\n        params.loop = 1;\r\n    }\r\n    if(startTime !== 0){\r\n        params.start = startTime;\r\n    }\r\n    if(endTime > 0){\r\n        params.end = endTime;\r\n    }\r\n    const onStateChange = (e) => {\r\n        if(e.data === YT.PlayerState.PLAYING) onPlayFn();\r\n        else if(e.data === YT.PlayerState.PAUSED) onPauseFn();\r\n        else if(e.data === YT.PlayerState.ENDED) onEndFn();\r\n        // CUED and BUFFERING also exist\r\n    }\r\n    const onReady = (e) => {\r\n        if(volume !== -1){\r\n            if(volume === 0){\r\n                player.mute();\r\n                return;\r\n            }\r\n            else if(player.isMuted()) {\r\n                player.unMute()\r\n            }\r\n            volume = Math.max(0, Math.min(1,Math.round(volume*100)));\r\n            e.target.setVolume(volume);\r\n        }\r\n        onReadyFn();\r\n        if(autoplay === true) player.playVideo();\r\n    }\r\n    let player = new YT.Player(div.id, {\r\n        height: visible === true ? height.toString() : \'0\',\r\n        width: visible === true ? width.toString() : \'0\',\r\n        videoId,\r\n        playerVars: params,\r\n        fs: showPlayerUI === true ? 1 : 0, \r\n        events: {\r\n            onReady,\r\n            onStateChange,\r\n        }\r\n    });\r\n    const iframe = document.getElementById(div.id);\r\n    if(visible === false){\r\n        iframe.frameborder = "0";\r\n        iframe.setAttribute("frameBorder", "0");\r\n        iframe.width = 0;\r\n        iframe.height = 0;\r\n        iframe.allow = "autoplay";\r\n        iframe.security = "restricted";\r\n    }\r\n    iframe.style.position = \'fixed\';\r\n    iframe.style.zIndex = interactable === true ? 999 : -1;\r\n    return {\r\n        player,\r\n        iframe,\r\n        play: player.playVideo,\r\n        pause: player.pauseVideo,\r\n        setVolume: (v) => {\r\n            v = Math.min(1,Math.max(0,Math.round(v*100)));\r\n            if(v === 0){\r\n                player.mute();\r\n                return;\r\n            } else if(player.isMuted()) {\r\n                player.unMute();\r\n            } \r\n            player.setVolume(v);\r\n        },\r\n        getVolume: (v) => {return v / 100},\r\n        setDimensions: player.setSize,// w,h\r\n        setPlaybackRate: (r) => {\r\n            const rates = player.getAvailablePlaybackRates();\r\n            let closestRate = -1;\r\n            let closestDist = Infinity;\r\n            let dist;\r\n            for(let i = 0; i < rates.length; i++){\r\n                dist = Math.abs(rates[i] - r);\r\n                if(dist < closestDist){\r\n                    closestDist = dist;\r\n                    closestRate = rates[i];\r\n                }\r\n            }\r\n            // this is only a suggestion, player might not have a rate other than 1 or might not actually change\r\n            player.setPlaybackRate(closestRate);\r\n        }\r\n    }\r\n}\r\n\r\n_shared_shared_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A.removeYoutubeVideo = (player) => {\r\n    player.remove();\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDk0LmpzIiwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb21uaXNlcnZlci8uL2VYY2xpZW50L2V4dHJhcy95b3V0dWJlLmpzP2U0MjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNoYXJlZCBmcm9tICcuLi8uLi9zaGFyZWQvc2hhcmVkLmpzJztcclxuc2hhcmVkLnBsYXlZb3V0dWJlVmlkZW8gPSAobGluaywge3dpZHRoLyo9NjQwKi8sIGhlaWdodC8qPTM2MCovLCB2aXNpYmxlPXRydWUsIGxvb3A9dHJ1ZSwgc3RhcnRUaW1lPTAsIGVuZFRpbWU9LTEvKi0xID0gZW5kVGltZSBlbmQgb2YgdmlkZW8qLywgdm9sdW1lPS0xLC8qLTEgdm9sdW1lID0gZGVmYXVsdCovIGF1dG9wbGF5PXRydWUsIHNob3dQbGF5ZXJVST1mYWxzZSwgaW50ZXJhY3RhYmxlPWZhbHNlLCBvblJlYWR5Rm49KCk9Pnt9LCBvblBsYXlGbj0oKT0+e30sIG9uUGF1c2VGbj0oKT0+e30sIG9uRW5kRm49KCk9Pnt9fSkgPT4ge1xyXG4gICAgbGV0IHZpZGVvSWQgPSBsaW5rLnNwbGl0KCc/dj0nKVsxXTtcclxuXHJcbiAgICBsZXQgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBkaXYuaWQgPSAneXQnICsgTWF0aC5yYW5kb20oKTtcclxuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZGl2KTtcclxuICAgIFxyXG4gICAgbGV0IHBhcmFtcyA9IHtcclxuICAgICAgICBlbmFibGVqc2FwaTogMSxcclxuICAgICAgICBmczogc2hvd1BsYXllclVJID09PSB0cnVlID8gMSA6IDAsXHJcbiAgICAgICAgY29udHJvbHM6IHNob3dQbGF5ZXJVSSA9PT0gdHJ1ZSA/IDEgOiAwLFxyXG4gICAgICAgIGF1dG9wbGF5OiBhdXRvcGxheSA9PT0gdHJ1ZSA/IDEgOiAwLFxyXG4gICAgfVxyXG4gICAgaWYobG9vcCA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgcGFyYW1zLnBsYXlsaXN0ID0gdmlkZW9JZDtcclxuICAgICAgICBwYXJhbXMubG9vcCA9IDE7XHJcbiAgICB9XHJcbiAgICBpZihzdGFydFRpbWUgIT09IDApe1xyXG4gICAgICAgIHBhcmFtcy5zdGFydCA9IHN0YXJ0VGltZTtcclxuICAgIH1cclxuICAgIGlmKGVuZFRpbWUgPiAwKXtcclxuICAgICAgICBwYXJhbXMuZW5kID0gZW5kVGltZTtcclxuICAgIH1cclxuICAgIGNvbnN0IG9uU3RhdGVDaGFuZ2UgPSAoZSkgPT4ge1xyXG4gICAgICAgIGlmKGUuZGF0YSA9PT0gWVQuUGxheWVyU3RhdGUuUExBWUlORykgb25QbGF5Rm4oKTtcclxuICAgICAgICBlbHNlIGlmKGUuZGF0YSA9PT0gWVQuUGxheWVyU3RhdGUuUEFVU0VEKSBvblBhdXNlRm4oKTtcclxuICAgICAgICBlbHNlIGlmKGUuZGF0YSA9PT0gWVQuUGxheWVyU3RhdGUuRU5ERUQpIG9uRW5kRm4oKTtcclxuICAgICAgICAvLyBDVUVEIGFuZCBCVUZGRVJJTkcgYWxzbyBleGlzdFxyXG4gICAgfVxyXG4gICAgY29uc3Qgb25SZWFkeSA9IChlKSA9PiB7XHJcbiAgICAgICAgaWYodm9sdW1lICE9PSAtMSl7XHJcbiAgICAgICAgICAgIGlmKHZvbHVtZSA9PT0gMCl7XHJcbiAgICAgICAgICAgICAgICBwbGF5ZXIubXV0ZSgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYocGxheWVyLmlzTXV0ZWQoKSkge1xyXG4gICAgICAgICAgICAgICAgcGxheWVyLnVuTXV0ZSgpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdm9sdW1lID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMSxNYXRoLnJvdW5kKHZvbHVtZSoxMDApKSk7XHJcbiAgICAgICAgICAgIGUudGFyZ2V0LnNldFZvbHVtZSh2b2x1bWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBvblJlYWR5Rm4oKTtcclxuICAgICAgICBpZihhdXRvcGxheSA9PT0gdHJ1ZSkgcGxheWVyLnBsYXlWaWRlbygpO1xyXG4gICAgfVxyXG4gICAgbGV0IHBsYXllciA9IG5ldyBZVC5QbGF5ZXIoZGl2LmlkLCB7XHJcbiAgICAgICAgaGVpZ2h0OiB2aXNpYmxlID09PSB0cnVlID8gaGVpZ2h0LnRvU3RyaW5nKCkgOiAnMCcsXHJcbiAgICAgICAgd2lkdGg6IHZpc2libGUgPT09IHRydWUgPyB3aWR0aC50b1N0cmluZygpIDogJzAnLFxyXG4gICAgICAgIHZpZGVvSWQsXHJcbiAgICAgICAgcGxheWVyVmFyczogcGFyYW1zLFxyXG4gICAgICAgIGZzOiBzaG93UGxheWVyVUkgPT09IHRydWUgPyAxIDogMCwgXHJcbiAgICAgICAgZXZlbnRzOiB7XHJcbiAgICAgICAgICAgIG9uUmVhZHksXHJcbiAgICAgICAgICAgIG9uU3RhdGVDaGFuZ2UsXHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICBjb25zdCBpZnJhbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkaXYuaWQpO1xyXG4gICAgaWYodmlzaWJsZSA9PT0gZmFsc2Upe1xyXG4gICAgICAgIGlmcmFtZS5mcmFtZWJvcmRlciA9IFwiMFwiO1xyXG4gICAgICAgIGlmcmFtZS5zZXRBdHRyaWJ1dGUoXCJmcmFtZUJvcmRlclwiLCBcIjBcIik7XHJcbiAgICAgICAgaWZyYW1lLndpZHRoID0gMDtcclxuICAgICAgICBpZnJhbWUuaGVpZ2h0ID0gMDtcclxuICAgICAgICBpZnJhbWUuYWxsb3cgPSBcImF1dG9wbGF5XCI7XHJcbiAgICAgICAgaWZyYW1lLnNlY3VyaXR5ID0gXCJyZXN0cmljdGVkXCI7XHJcbiAgICB9XHJcbiAgICBpZnJhbWUuc3R5bGUucG9zaXRpb24gPSAnZml4ZWQnO1xyXG4gICAgaWZyYW1lLnN0eWxlLnpJbmRleCA9IGludGVyYWN0YWJsZSA9PT0gdHJ1ZSA/IDk5OSA6IC0xO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBwbGF5ZXIsXHJcbiAgICAgICAgaWZyYW1lLFxyXG4gICAgICAgIHBsYXk6IHBsYXllci5wbGF5VmlkZW8sXHJcbiAgICAgICAgcGF1c2U6IHBsYXllci5wYXVzZVZpZGVvLFxyXG4gICAgICAgIHNldFZvbHVtZTogKHYpID0+IHtcclxuICAgICAgICAgICAgdiA9IE1hdGgubWluKDEsTWF0aC5tYXgoMCxNYXRoLnJvdW5kKHYqMTAwKSkpO1xyXG4gICAgICAgICAgICBpZih2ID09PSAwKXtcclxuICAgICAgICAgICAgICAgIHBsYXllci5tdXRlKCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZihwbGF5ZXIuaXNNdXRlZCgpKSB7XHJcbiAgICAgICAgICAgICAgICBwbGF5ZXIudW5NdXRlKCk7XHJcbiAgICAgICAgICAgIH0gXHJcbiAgICAgICAgICAgIHBsYXllci5zZXRWb2x1bWUodik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBnZXRWb2x1bWU6ICh2KSA9PiB7cmV0dXJuIHYgLyAxMDB9LFxyXG4gICAgICAgIHNldERpbWVuc2lvbnM6IHBsYXllci5zZXRTaXplLC8vIHcsaFxyXG4gICAgICAgIHNldFBsYXliYWNrUmF0ZTogKHIpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgcmF0ZXMgPSBwbGF5ZXIuZ2V0QXZhaWxhYmxlUGxheWJhY2tSYXRlcygpO1xyXG4gICAgICAgICAgICBsZXQgY2xvc2VzdFJhdGUgPSAtMTtcclxuICAgICAgICAgICAgbGV0IGNsb3Nlc3REaXN0ID0gSW5maW5pdHk7XHJcbiAgICAgICAgICAgIGxldCBkaXN0O1xyXG4gICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgcmF0ZXMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgZGlzdCA9IE1hdGguYWJzKHJhdGVzW2ldIC0gcik7XHJcbiAgICAgICAgICAgICAgICBpZihkaXN0IDwgY2xvc2VzdERpc3Qpe1xyXG4gICAgICAgICAgICAgICAgICAgIGNsb3Nlc3REaXN0ID0gZGlzdDtcclxuICAgICAgICAgICAgICAgICAgICBjbG9zZXN0UmF0ZSA9IHJhdGVzW2ldO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIHRoaXMgaXMgb25seSBhIHN1Z2dlc3Rpb24sIHBsYXllciBtaWdodCBub3QgaGF2ZSBhIHJhdGUgb3RoZXIgdGhhbiAxIG9yIG1pZ2h0IG5vdCBhY3R1YWxseSBjaGFuZ2VcclxuICAgICAgICAgICAgcGxheWVyLnNldFBsYXliYWNrUmF0ZShjbG9zZXN0UmF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5zaGFyZWQucmVtb3ZlWW91dHViZVZpZGVvID0gKHBsYXllcikgPT4ge1xyXG4gICAgcGxheWVyLnJlbW92ZSgpO1xyXG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///494\n')}}]);