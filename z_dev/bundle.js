(()=>{"use strict";var __webpack_modules__={674:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n___CSS_LOADER_EXPORT___.push([module.id, "@import url(https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap);"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    background-color: rgb(5,5,5);\r\n    font-size: 16px;\r\n    overflow: hidden;\r\n    font-family: \'Inter\', sans-serif;\r\n}\r\n\r\n.hidden {\r\n    display: none !important;\r\n}\r\n\r\n/*for comparing to eX and gamefeel. Not permanent*/\r\ncanvas, .gui {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    /* filter: saturate(75%);  */\r\n}\r\n\r\n.text-layer {\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 1600px;\r\n\theight: 900px;\r\n\tfilter: none !important;\r\n\tbackground: transparent;\r\n\toverflow: hidden;\r\n}\r\n\r\n.chatDiv {\r\n    z-index: 100;\r\n}\r\n\r\n.chat {\r\n    position: absolute;\r\n    left: 0px;\r\n    top: 250px;\r\n    width: 374px;\r\n    height: 30px;\r\n    transform-origin: center center;\r\n    border: none;\r\n    outline: none;\r\n    color: white;\r\n    font-size: 1rem;\r\n    padding: 5px;\r\n    caret-color: white;\r\n    /*background: rgba(129, 129, 129, 0.082);*/\r\n    background: linear-gradient(to right, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0));\r\n    font-family: \'Inter-Thick\', Inter;\r\n}\r\n\r\n.chat-message {\r\n    color: white;\r\n    font-size: 1.05rem;\r\n    background: transparent;\r\n    padding: 1px;\r\n\r\n    overflow-wrap: break-word;\r\n    width: 100%;\r\n}\r\n.system-message {\r\n    color: #c4c4c4;\r\n    font-size: 1rem;\r\n    background: transparent;\r\n    padding: 1px;\r\n    overflow-wrap: break-word; /*this doesnt work somehow*/\r\n    width: 100%;\r\n}\r\n\r\n.fade-out {\r\n    animation: fade-out 0.3s linear;\r\n}\r\n\r\n.fade-in {\r\n    animation: fade-in 0.3s linear;\r\n}\r\n\r\n@keyframes fade-out {\r\n    0% {\r\n        opacity: 1;\r\n    }\r\n    100% {\r\n        opacity: 0;\r\n    }\r\n}\r\n\r\n/*peaceful*/\r\n.difficulty-0 {\r\n    color: #6cd95b;\r\n}\r\n/*moderate*/\r\n.difficulty-1 {\r\n    color: #58ccb3;\r\n}\r\n/*difficult*/\r\n.difficulty-2 {\r\n    color: #0a77bf;\r\n}\r\n/*hardcore*/\r\n.difficulty-3 {\r\n    color: #3528e0;\r\n}\r\n/*exhausting*/\r\n.difficulty-4 {\r\n    color: #8248d4;\r\n}\r\n/*relentless*/\r\n.difficulty-5 {\r\n    color: #e32d8b;\r\n}\r\n/*agonizing*/\r\n@keyframes agonizingColor {\r\n    0% {\r\n        background-color: #ff0000;\r\n    }\r\n}\r\n.difficulty-6 {\r\n    color: #ff5736;\r\n    animation-name: agonizingColor;\r\n    animation-duration: 3s;\r\n    animation-iteration-count: infinite;\r\n}\r\n/*terrorizing*/\r\n@keyframes terrorizingColor {\r\n    0% {\r\n        background-color: #ff0000;\r\n    }\r\n}\r\n.difficulty-7 {\r\n    color: #fc3a3a;\r\n    animation-name: terrorizingColor;\r\n    animation-duration: 2s;\r\n    animation-iteration-count: infinite;\r\n}\r\n@keyframes cataclysmicColor {\r\n    0% {\r\n        background-color: #ff0000;\r\n    }\r\n}\r\n/*cataclysmic*/\r\n.difficulty-8 {\r\n    color: #c95d5d;\r\n    animation-name: cataclysmicColor;\r\n    animation-duration: 1s;\r\n    animation-iteration-count: infinite;\r\n}\r\n\r\n.mention {\r\n    /*color: #a84040;*/\r\n    background-image: linear-gradient(\r\n        90deg,\r\n        rgba(255, 0, 0, 0.3),\r\n        rgba(255, 0, 0, 0)\r\n    );\r\n    animation-name: terrorizingColor;\r\n    animation-duration: 0.4s;\r\n    animation-iteration-count: 1;\r\n}\r\n\r\n.chat::placeholder {\r\n    color: white;\r\n    opacity: 1;\r\n}\r\n\r\n.leaderboard-div {\r\n    position: fixed;\r\n    left: calc(100% - 299px);\r\n    transition: left 0.2s linear, opacity 0.2s linear;\r\n    opacity: 1;\r\n    top: -1px;\r\n    width: 300px;\r\n    height: 100vh;\r\n    background: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.4));\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    padding: 0px;\r\n    color: white;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n    user-select: none;\r\n    font-family: \'Inter-Thick\', Inter;\r\n}\r\n\r\n.hide {\r\n    left: 1600px !important;\r\n    opacity: 0;\r\n}\r\n\r\n.leaderboard-div::-webkit-scrollbar {\r\n    width: 10px;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    border-radius: 2px;\r\n}\r\n\r\n.leaderboard-div::-webkit-scrollbar-thumb {\r\n    background-color: rgba(255, 255, 255, 0.3);\r\n    border-radius: 2px;\r\n}\r\n\r\n.rainbow {\r\n    animation: colorRotate 4s linear 0s infinite;\r\n}\r\n\r\n@keyframes colorRotate {\r\n    0% {\r\n        color: hsl(180, 100%, 50%);\r\n    }\r\n    50% {\r\n        color: hsl(216, 100%, 50%);\r\n    }\r\n    100% {\r\n        color: hsl(180, 100%, 50%);\r\n    }\r\n}\r\n\r\n.guest {\r\n    opacity: 0.8;\r\n}\r\n\r\n.chat-div::-webkit-scrollbar {\r\n    width: 10px;\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.chat-div::-webkit-scrollbar-thumb {\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n}\r\n\r\n.chat-div {\r\n    position: absolute;\r\n    left: -1px;\r\n    top: -1px;\r\n    width: 375px;\r\n    height: 251px;\r\n    filter: none !important;\r\n    background: rgba(141, 141, 141, 0.205);\r\n    background: linear-gradient(to right, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0));\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n    padding: 2px;\r\n    overflow-x: hidden;\r\n    /* \tword-break: break-all; */\r\n    font-family: Inter-Thick, Inter;\r\n\r\n    transition: all 0.1s linear, padding 0.1s linear;\r\n    /*\r\n    /*background-image: url(https://i1.sndcdn.com/artworks-Uii8SMJvNPxy8ePA-romBoQ-t500x500.jpg);*/\r\n    /*    opacity: 0.7; */\r\n}\r\n\r\n.lb-group {\r\n    /* background: rgba(255, 255, 255, 0.1); */\r\n    /*background: rgb(55, 55, 55);*/\r\n    background: transparent;\r\n    padding: 5px;\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    margin: 0px;\r\n    /*min-width: 150px;*/\r\n    width: 300px;\r\n}\r\n\r\n\r\n.lb-name {\r\n    /* color: rgb(47, 250, 213); */\r\n    /* filter: saturate(150%); */\r\n    font-size: 1rem;\r\n}\r\n\r\n.lb-players {\r\n    margin: 5px;\r\n    font-size: 0.9rem;\r\n    /* background: rgba(255, 255, 255, 0.12); */\r\n    /* background: rgba(77, 77, 77, 0.7); */\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: center;\r\n    flex-direction: column;\r\n}\r\n\r\n.lb-players div {\r\n    margin: 1.5px;\r\n\tcursor: pointer;\r\n\tbackground: transparent;\r\n\tpadding: 0px;\r\n\ttransition: all 0.1s linear, padding 0.1s linear;\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n}\r\n.lb-players div:hover {\r\n\tbackground: rgba(255, 255, 255, 0.3);\r\n\tpadding: 6px;\r\n}\r\n\r\n.hideLB {\r\n    left: 100% !important;\r\n    opacity: 0;\r\n}\r\n\r\n.hideChat {\r\n    left: -175px !important;\r\n    opacity: 0; \r\n}`, "",{"version":3,"sources":["webpack://./eXclient/style.css"],"names":[],"mappings":"AAEA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,4BAA4B;IAC5B,eAAe;IACf,gBAAgB;IAChB,gCAAgC;AACpC;;AAEA;IACI,wBAAwB;AAC5B;;AAEA,kDAAkD;AAClD;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,4BAA4B;AAChC;;AAEA;CACC,kBAAkB;CAClB,OAAO;CACP,MAAM;CACN,aAAa;CACb,aAAa;CACb,uBAAuB;CACvB,uBAAuB;CACvB,gBAAgB;AACjB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,+BAA+B;IAC/B,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,eAAe;IACf,YAAY;IACZ,kBAAkB;IAClB,0CAA0C;IAC1C,2EAA2E;IAC3E,iCAAiC;AACrC;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,uBAAuB;IACvB,YAAY;;IAEZ,yBAAyB;IACzB,WAAW;AACf;AACA;IACI,cAAc;IACd,eAAe;IACf,uBAAuB;IACvB,YAAY;IACZ,yBAAyB,EAAE,2BAA2B;IACtD,WAAW;AACf;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI;QACI,UAAU;IACd;IACA;QACI,UAAU;IACd;AACJ;;AAEA,WAAW;AACX;IACI,cAAc;AAClB;AACA,WAAW;AACX;IACI,cAAc;AAClB;AACA,YAAY;AACZ;IACI,cAAc;AAClB;AACA,WAAW;AACX;IACI,cAAc;AAClB;AACA,aAAa;AACb;IACI,cAAc;AAClB;AACA,aAAa;AACb;IACI,cAAc;AAClB;AACA,YAAY;AACZ;IACI;QACI,yBAAyB;IAC7B;AACJ;AACA;IACI,cAAc;IACd,8BAA8B;IAC9B,sBAAsB;IACtB,mCAAmC;AACvC;AACA,cAAc;AACd;IACI;QACI,yBAAyB;IAC7B;AACJ;AACA;IACI,cAAc;IACd,gCAAgC;IAChC,sBAAsB;IACtB,mCAAmC;AACvC;AACA;IACI;QACI,yBAAyB;IAC7B;AACJ;AACA,cAAc;AACd;IACI,cAAc;IACd,gCAAgC;IAChC,sBAAsB;IACtB,mCAAmC;AACvC;;AAEA;IACI,kBAAkB;IAClB;;;;KAIC;IACD,gCAAgC;IAChC,wBAAwB;IACxB,4BAA4B;AAChC;;AAEA;IACI,YAAY;IACZ,UAAU;AACd;;AAEA;IACI,eAAe;IACf,wBAAwB;IACxB,iDAAiD;IACjD,UAAU;IACV,SAAS;IACT,YAAY;IACZ,aAAa;IACb,2EAA2E;IAC3E,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,iBAAiB;IACjB,iCAAiC;AACrC;;AAEA;IACI,uBAAuB;IACvB,UAAU;AACd;;AAEA;IACI,WAAW;IACX,0CAA0C;IAC1C,kBAAkB;AACtB;;AAEA;IACI,0CAA0C;IAC1C,kBAAkB;AACtB;;AAEA;IACI,4CAA4C;AAChD;;AAEA;IACI;QACI,0BAA0B;IAC9B;IACA;QACI,0BAA0B;IAC9B;IACA;QACI,0BAA0B;IAC9B;AACJ;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,oCAAoC;AACxC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,SAAS;IACT,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,sCAAsC;IACtC,2EAA2E;IAC3E,aAAa;IACb,2BAA2B;IAC3B,uBAAuB;IACvB,sBAAsB;IACtB,gBAAgB;IAChB,YAAY;IACZ,kBAAkB;IAClB,4BAA4B;IAC5B,+BAA+B;;IAE/B,gDAAgD;IAChD;kGAC8F;IAC9F,qBAAqB;AACzB;;AAEA;IACI,0CAA0C;IAC1C,+BAA+B;IAC/B,uBAAuB;IACvB,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,sBAAsB;IACtB,WAAW;IACX,oBAAoB;IACpB,YAAY;AAChB;;;AAGA;IACI,8BAA8B;IAC9B,4BAA4B;IAC5B,eAAe;AACnB;;AAEA;IACI,WAAW;IACX,iBAAiB;IACjB,2CAA2C;IAC3C,uCAAuC;IACvC,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;CAChB,eAAe;CACf,uBAAuB;CACvB,YAAY;CACZ,gDAAgD;CAChD,WAAW;CACX,aAAa;CACb,uBAAuB;CACvB,mBAAmB;AACpB;AACA;CACC,oCAAoC;CACpC,YAAY;AACb;;AAEA;IACI,qBAAqB;IACrB,UAAU;AACd;;AAEA;IACI,uBAAuB;IACvB,UAAU;AACd","sourcesContent":["@import url(\'https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap\');\\r\\n\\r\\n* {\\r\\n    box-sizing: border-box;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    background-color: rgb(5,5,5);\\r\\n    font-size: 16px;\\r\\n    overflow: hidden;\\r\\n    font-family: \'Inter\', sans-serif;\\r\\n}\\r\\n\\r\\n.hidden {\\r\\n    display: none !important;\\r\\n}\\r\\n\\r\\n/*for comparing to eX and gamefeel. Not permanent*/\\r\\ncanvas, .gui {\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    /* filter: saturate(75%);  */\\r\\n}\\r\\n\\r\\n.text-layer {\\r\\n\\tposition: absolute;\\r\\n\\tleft: 0;\\r\\n\\ttop: 0;\\r\\n\\twidth: 1600px;\\r\\n\\theight: 900px;\\r\\n\\tfilter: none !important;\\r\\n\\tbackground: transparent;\\r\\n\\toverflow: hidden;\\r\\n}\\r\\n\\r\\n.chatDiv {\\r\\n    z-index: 100;\\r\\n}\\r\\n\\r\\n.chat {\\r\\n    position: absolute;\\r\\n    left: 0px;\\r\\n    top: 250px;\\r\\n    width: 374px;\\r\\n    height: 30px;\\r\\n    transform-origin: center center;\\r\\n    border: none;\\r\\n    outline: none;\\r\\n    color: white;\\r\\n    font-size: 1rem;\\r\\n    padding: 5px;\\r\\n    caret-color: white;\\r\\n    /*background: rgba(129, 129, 129, 0.082);*/\\r\\n    background: linear-gradient(to right, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0));\\r\\n    font-family: \'Inter-Thick\', Inter;\\r\\n}\\r\\n\\r\\n.chat-message {\\r\\n    color: white;\\r\\n    font-size: 1.05rem;\\r\\n    background: transparent;\\r\\n    padding: 1px;\\r\\n\\r\\n    overflow-wrap: break-word;\\r\\n    width: 100%;\\r\\n}\\r\\n.system-message {\\r\\n    color: #c4c4c4;\\r\\n    font-size: 1rem;\\r\\n    background: transparent;\\r\\n    padding: 1px;\\r\\n    overflow-wrap: break-word; /*this doesnt work somehow*/\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.fade-out {\\r\\n    animation: fade-out 0.3s linear;\\r\\n}\\r\\n\\r\\n.fade-in {\\r\\n    animation: fade-in 0.3s linear;\\r\\n}\\r\\n\\r\\n@keyframes fade-out {\\r\\n    0% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    100% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n/*peaceful*/\\r\\n.difficulty-0 {\\r\\n    color: #6cd95b;\\r\\n}\\r\\n/*moderate*/\\r\\n.difficulty-1 {\\r\\n    color: #58ccb3;\\r\\n}\\r\\n/*difficult*/\\r\\n.difficulty-2 {\\r\\n    color: #0a77bf;\\r\\n}\\r\\n/*hardcore*/\\r\\n.difficulty-3 {\\r\\n    color: #3528e0;\\r\\n}\\r\\n/*exhausting*/\\r\\n.difficulty-4 {\\r\\n    color: #8248d4;\\r\\n}\\r\\n/*relentless*/\\r\\n.difficulty-5 {\\r\\n    color: #e32d8b;\\r\\n}\\r\\n/*agonizing*/\\r\\n@keyframes agonizingColor {\\r\\n    0% {\\r\\n        background-color: #ff0000;\\r\\n    }\\r\\n}\\r\\n.difficulty-6 {\\r\\n    color: #ff5736;\\r\\n    animation-name: agonizingColor;\\r\\n    animation-duration: 3s;\\r\\n    animation-iteration-count: infinite;\\r\\n}\\r\\n/*terrorizing*/\\r\\n@keyframes terrorizingColor {\\r\\n    0% {\\r\\n        background-color: #ff0000;\\r\\n    }\\r\\n}\\r\\n.difficulty-7 {\\r\\n    color: #fc3a3a;\\r\\n    animation-name: terrorizingColor;\\r\\n    animation-duration: 2s;\\r\\n    animation-iteration-count: infinite;\\r\\n}\\r\\n@keyframes cataclysmicColor {\\r\\n    0% {\\r\\n        background-color: #ff0000;\\r\\n    }\\r\\n}\\r\\n/*cataclysmic*/\\r\\n.difficulty-8 {\\r\\n    color: #c95d5d;\\r\\n    animation-name: cataclysmicColor;\\r\\n    animation-duration: 1s;\\r\\n    animation-iteration-count: infinite;\\r\\n}\\r\\n\\r\\n.mention {\\r\\n    /*color: #a84040;*/\\r\\n    background-image: linear-gradient(\\r\\n        90deg,\\r\\n        rgba(255, 0, 0, 0.3),\\r\\n        rgba(255, 0, 0, 0)\\r\\n    );\\r\\n    animation-name: terrorizingColor;\\r\\n    animation-duration: 0.4s;\\r\\n    animation-iteration-count: 1;\\r\\n}\\r\\n\\r\\n.chat::placeholder {\\r\\n    color: white;\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.leaderboard-div {\\r\\n    position: fixed;\\r\\n    left: calc(100% - 299px);\\r\\n    transition: left 0.2s linear, opacity 0.2s linear;\\r\\n    opacity: 1;\\r\\n    top: -1px;\\r\\n    width: 300px;\\r\\n    height: 100vh;\\r\\n    background: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.4));\\r\\n    display: flex;\\r\\n    justify-content: start;\\r\\n    align-items: center;\\r\\n    flex-direction: column;\\r\\n    padding: 0px;\\r\\n    color: white;\\r\\n    overflow-y: auto;\\r\\n    overflow-x: hidden;\\r\\n    user-select: none;\\r\\n    font-family: \'Inter-Thick\', Inter;\\r\\n}\\r\\n\\r\\n.hide {\\r\\n    left: 1600px !important;\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n.leaderboard-div::-webkit-scrollbar {\\r\\n    width: 10px;\\r\\n    background-color: rgba(255, 255, 255, 0.1);\\r\\n    border-radius: 2px;\\r\\n}\\r\\n\\r\\n.leaderboard-div::-webkit-scrollbar-thumb {\\r\\n    background-color: rgba(255, 255, 255, 0.3);\\r\\n    border-radius: 2px;\\r\\n}\\r\\n\\r\\n.rainbow {\\r\\n    animation: colorRotate 4s linear 0s infinite;\\r\\n}\\r\\n\\r\\n@keyframes colorRotate {\\r\\n    0% {\\r\\n        color: hsl(180, 100%, 50%);\\r\\n    }\\r\\n    50% {\\r\\n        color: hsl(216, 100%, 50%);\\r\\n    }\\r\\n    100% {\\r\\n        color: hsl(180, 100%, 50%);\\r\\n    }\\r\\n}\\r\\n\\r\\n.guest {\\r\\n    opacity: 0.8;\\r\\n}\\r\\n\\r\\n.chat-div::-webkit-scrollbar {\\r\\n    width: 10px;\\r\\n    background-color: rgba(0, 0, 0, 0.4);\\r\\n}\\r\\n\\r\\n.chat-div::-webkit-scrollbar-thumb {\\r\\n    background-color: rgba(0, 0, 0, 0.8);\\r\\n}\\r\\n\\r\\n.chat-div {\\r\\n    position: absolute;\\r\\n    left: -1px;\\r\\n    top: -1px;\\r\\n    width: 375px;\\r\\n    height: 251px;\\r\\n    filter: none !important;\\r\\n    background: rgba(141, 141, 141, 0.205);\\r\\n    background: linear-gradient(to right, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0));\\r\\n    display: flex;\\r\\n    justify-content: flex-start;\\r\\n    align-items: flex-start;\\r\\n    flex-direction: column;\\r\\n    overflow-y: auto;\\r\\n    padding: 2px;\\r\\n    overflow-x: hidden;\\r\\n    /* \\tword-break: break-all; */\\r\\n    font-family: Inter-Thick, Inter;\\r\\n\\r\\n    transition: all 0.1s linear, padding 0.1s linear;\\r\\n    /*\\r\\n    /*background-image: url(https://i1.sndcdn.com/artworks-Uii8SMJvNPxy8ePA-romBoQ-t500x500.jpg);*/\\r\\n    /*    opacity: 0.7; */\\r\\n}\\r\\n\\r\\n.lb-group {\\r\\n    /* background: rgba(255, 255, 255, 0.1); */\\r\\n    /*background: rgb(55, 55, 55);*/\\r\\n    background: transparent;\\r\\n    padding: 5px;\\r\\n    display: flex;\\r\\n    justify-content: start;\\r\\n    align-items: center;\\r\\n    flex-direction: column;\\r\\n    margin: 0px;\\r\\n    /*min-width: 150px;*/\\r\\n    width: 300px;\\r\\n}\\r\\n\\r\\n\\r\\n.lb-name {\\r\\n    /* color: rgb(47, 250, 213); */\\r\\n    /* filter: saturate(150%); */\\r\\n    font-size: 1rem;\\r\\n}\\r\\n\\r\\n.lb-players {\\r\\n    margin: 5px;\\r\\n    font-size: 0.9rem;\\r\\n    /* background: rgba(255, 255, 255, 0.12); */\\r\\n    /* background: rgba(77, 77, 77, 0.7); */\\r\\n    display: flex;\\r\\n    justify-content: start;\\r\\n    align-items: center;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.lb-players div {\\r\\n    margin: 1.5px;\\r\\n\\tcursor: pointer;\\r\\n\\tbackground: transparent;\\r\\n\\tpadding: 0px;\\r\\n\\ttransition: all 0.1s linear, padding 0.1s linear;\\r\\n\\twidth: 100%;\\r\\n\\tdisplay: flex;\\r\\n\\tjustify-content: center;\\r\\n\\talign-items: center;\\r\\n}\\r\\n.lb-players div:hover {\\r\\n\\tbackground: rgba(255, 255, 255, 0.3);\\r\\n\\tpadding: 6px;\\r\\n}\\r\\n\\r\\n.hideLB {\\r\\n    left: 100% !important;\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n.hideChat {\\r\\n    left: -175px !important;\\r\\n    opacity: 0; \\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///674\n')},314:module=>{eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += "}";\n      }\n      if (item[2]) {\n        content += "}";\n      }\n      if (item[4]) {\n        content += "}";\n      }\n      return content;\n    }).join("");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb21uaXNlcnZlci8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanM/MjRmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///314\n')},354:module=>{eval('\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === "function") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    return [content].concat([sourceMapping]).join("\\n");\n  }\n  return [content].join("\\n");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb21uaXNlcnZlci8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzP2FmMTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///354\n')},72:module=>{eval('\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb21uaXNlcnZlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcz8yZGJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///72\n')},659:module=>{eval('\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU5LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb21uaXNlcnZlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanM/YjIxNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///659\n')},540:module=>{eval('\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb21uaXNlcnZlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcz9kZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///540\n')},56:(module,__unused_webpack_exports,__webpack_require__)=>{eval('\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbW5pc2VydmVyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzP2RkY2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///56\n')},825:module=>{eval('\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n  var needLayer = typeof obj.layer !== "undefined";\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += "}";\n  }\n  if (obj.media) {\n    css += "}";\n  }\n  if (obj.supports) {\n    css += "}";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === "undefined") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODI1LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb21uaXNlcnZlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzP2U0NzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///825\n')},113:module=>{eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbW5pc2VydmVyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanM/MWRkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///113\n")},982:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ renderTimerFn)\n/* harmony export */ });\n/* harmony import */ var _shared_shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(763);\n\r\n\r\nlet lastMapPath;\r\nlet checkpoints = [];\r\nlet cpTimer = -1;\r\nlet cpDisplay = '';\r\nlet lastT = Infinity, lastTxt = 0;\r\n\r\nfunction renderTimerFn() {\r\n    ctx.font = `${50 + (cpTimer < 0 ? 0 : smootherStep(cpTimer / 30) * 20)}px monospace`;\r\n    ctx.textAlign = 'middle';\r\n    ctx.textBaseline = 'top';\r\n\r\n    ctx.globalAlpha = 0.95;\r\n\r\n    const t = (window.frames - _shared_shared_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A.mapEntryTime) / 60;\r\n    let txt;\r\n\r\n    if((_shared_shared_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A.mapPath === '/maps/winroom' || _shared_shared_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A.won === true) && lastTxt !== undefined){\r\n        txt = lastTxt;\r\n    }\r\n    else if(cpTimer >= 0){\r\n        cpTimer--;\r\n        txt = toRenderTime(cpDisplay);\r\n    }\r\n    else txt = toRenderTime(t);\r\n\r\n    if(lastT < t) lastTxt = txt;\r\n    lastT = t;\r\n\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'top';\r\n\r\n    const dimensions = ctx.measureText(txt);\r\n    const w = dimensions.actualBoundingBoxRight + dimensions.actualBoundingBoxLeft + 60;\r\n    const h = dimensions.actualBoundingBoxDescent + dimensions.actualBoundingBoxAscent + 50;\r\n    const hOffset = (dimensions.actualBoundingBoxDescent - dimensions.actualBoundingBoxAscent) / 2;\r\n\r\n    // let mapName = shared.mapPath.split('/');\r\n    // let mapDifficulty = Math.floor(shared.mapDifficulties[mapName[mapName.length-1]] ?? 0);\r\n\r\n    const col = _shared_shared_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A.colors.background//shared.difficultyImageColors[mapDifficulty];\r\n\r\n    const colInt = parseInt(col.slice(1), 16);\r\n\r\n    const r = (colInt >> 16) & 255;\r\n    const g = (colInt >> 8) & 255;\r\n    const b = colInt & 255;\r\n\r\n    ctx.translate(canvas.w/2, 15 + h/2 - hOffset);\r\n    ctx.scale(w/h, 1);\r\n\r\n    const grd = ctx.createRadialGradient(0, 0, 0, 0, 0, h/2);\r\n\r\n    grd.addColorStop(0, `rgba(${r},${g},${b},0.5)`);\r\n    grd.addColorStop(1, `rgba(${r},${g},${b},0)`);\r\n\r\n    ctx.fillStyle = grd;\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, h/2, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.closePath();\r\n    ctx.scale(h/w, 1);\r\n    ctx.translate(-canvas.w/2, -(15 + h/2 - hOffset));\r\n\r\n    if(cpTimer > 0) {\r\n        if(cpTimer < 3) ctx.fillStyle = _shared_shared_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A.blendColor('#ffff00','#ffffff',smootherStep(1 - cpTimer/3));\r\n        else ctx.fillStyle = '#ffff00';\r\n    } else ctx.fillStyle = 'white';\r\n    ctx.fillText(txt, canvas.w/2, 15);\r\n\r\n    if(lastMapPath !== _shared_shared_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A.mapPath){\r\n        lastMapPath = _shared_shared_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A.mapPath;\r\n        checkpoints.length = 0;\r\n        for(let i = 0; i < _shared_shared_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A.obstacles.length; i++){\r\n            if(_shared_shared_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A.obstacles[i].checkpointOffsetX === undefined) continue;\r\n            checkpoints.push(_shared_shared_js__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .A.obstacles[i]);\r\n        }\r\n    }\r\n\r\n    for(let i = 0; i < checkpoints.length; i++){\r\n        if(checkpoints[i].checkpointCollected === true){\r\n            checkpoints.splice(i,1);\r\n            cpDisplay = t;\r\n            cpTimer = 30;\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nconst toRenderTime = (t) => {\r\n    let ms = ((~~(t*100))%100).toString();\r\n    let seconds = (~~(t%60)).toString();\r\n    if(ms.length === 1) ms = '0' + ms;\r\n\r\n    if(seconds.length === 1) seconds = '0' + seconds;\r\n    const minutes = (~~((t / 60)%60)).toString();\r\n\r\n    let displayTime = `${minutes}:${seconds}.${ms}`;\r\n\r\n    if(t > 3600) {\r\n        if(minutes.length === 1) minutes = '0' + minutes;\r\n        const hours = (~~(t / 3600)).toString();\r\n        displayTime = `${hours}:${minutes}:${seconds}.${ms}`;\r\n    }\r\n    return displayTime;\r\n}\r\n\r\nfunction smootherStep(t){\r\n    return t * t * t * (t * (t * 6. - 15.) + 10.);\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTgyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbW5pc2VydmVyLy4vZVhjbGllbnQvZXh0cmFzL3RpbWVyLmpzPzcwZGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNoYXJlZCBmcm9tICcuLi8uLi9zaGFyZWQvc2hhcmVkLmpzJztcclxuXHJcbmxldCBsYXN0TWFwUGF0aDtcclxubGV0IGNoZWNrcG9pbnRzID0gW107XHJcbmxldCBjcFRpbWVyID0gLTE7XHJcbmxldCBjcERpc3BsYXkgPSAnJztcclxubGV0IGxhc3RUID0gSW5maW5pdHksIGxhc3RUeHQgPSAwO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVuZGVyVGltZXJGbigpIHtcclxuICAgIGN0eC5mb250ID0gYCR7NTAgKyAoY3BUaW1lciA8IDAgPyAwIDogc21vb3RoZXJTdGVwKGNwVGltZXIgLyAzMCkgKiAyMCl9cHggbW9ub3NwYWNlYDtcclxuICAgIGN0eC50ZXh0QWxpZ24gPSAnbWlkZGxlJztcclxuICAgIGN0eC50ZXh0QmFzZWxpbmUgPSAndG9wJztcclxuXHJcbiAgICBjdHguZ2xvYmFsQWxwaGEgPSAwLjk1O1xyXG5cclxuICAgIGNvbnN0IHQgPSAod2luZG93LmZyYW1lcyAtIHNoYXJlZC5tYXBFbnRyeVRpbWUpIC8gNjA7XHJcbiAgICBsZXQgdHh0O1xyXG5cclxuICAgIGlmKChzaGFyZWQubWFwUGF0aCA9PT0gJy9tYXBzL3dpbnJvb20nIHx8IHNoYXJlZC53b24gPT09IHRydWUpICYmIGxhc3RUeHQgIT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgdHh0ID0gbGFzdFR4dDtcclxuICAgIH1cclxuICAgIGVsc2UgaWYoY3BUaW1lciA+PSAwKXtcclxuICAgICAgICBjcFRpbWVyLS07XHJcbiAgICAgICAgdHh0ID0gdG9SZW5kZXJUaW1lKGNwRGlzcGxheSk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHR4dCA9IHRvUmVuZGVyVGltZSh0KTtcclxuXHJcbiAgICBpZihsYXN0VCA8IHQpIGxhc3RUeHQgPSB0eHQ7XHJcbiAgICBsYXN0VCA9IHQ7XHJcblxyXG4gICAgY3R4LnRleHRBbGlnbiA9ICdjZW50ZXInO1xyXG4gICAgY3R4LnRleHRCYXNlbGluZSA9ICd0b3AnO1xyXG5cclxuICAgIGNvbnN0IGRpbWVuc2lvbnMgPSBjdHgubWVhc3VyZVRleHQodHh0KTtcclxuICAgIGNvbnN0IHcgPSBkaW1lbnNpb25zLmFjdHVhbEJvdW5kaW5nQm94UmlnaHQgKyBkaW1lbnNpb25zLmFjdHVhbEJvdW5kaW5nQm94TGVmdCArIDYwO1xyXG4gICAgY29uc3QgaCA9IGRpbWVuc2lvbnMuYWN0dWFsQm91bmRpbmdCb3hEZXNjZW50ICsgZGltZW5zaW9ucy5hY3R1YWxCb3VuZGluZ0JveEFzY2VudCArIDUwO1xyXG4gICAgY29uc3QgaE9mZnNldCA9IChkaW1lbnNpb25zLmFjdHVhbEJvdW5kaW5nQm94RGVzY2VudCAtIGRpbWVuc2lvbnMuYWN0dWFsQm91bmRpbmdCb3hBc2NlbnQpIC8gMjtcclxuXHJcbiAgICAvLyBsZXQgbWFwTmFtZSA9IHNoYXJlZC5tYXBQYXRoLnNwbGl0KCcvJyk7XHJcbiAgICAvLyBsZXQgbWFwRGlmZmljdWx0eSA9IE1hdGguZmxvb3Ioc2hhcmVkLm1hcERpZmZpY3VsdGllc1ttYXBOYW1lW21hcE5hbWUubGVuZ3RoLTFdXSA/PyAwKTtcclxuXHJcbiAgICBjb25zdCBjb2wgPSBzaGFyZWQuY29sb3JzLmJhY2tncm91bmQvL3NoYXJlZC5kaWZmaWN1bHR5SW1hZ2VDb2xvcnNbbWFwRGlmZmljdWx0eV07XHJcblxyXG4gICAgY29uc3QgY29sSW50ID0gcGFyc2VJbnQoY29sLnNsaWNlKDEpLCAxNik7XHJcblxyXG4gICAgY29uc3QgciA9IChjb2xJbnQgPj4gMTYpICYgMjU1O1xyXG4gICAgY29uc3QgZyA9IChjb2xJbnQgPj4gOCkgJiAyNTU7XHJcbiAgICBjb25zdCBiID0gY29sSW50ICYgMjU1O1xyXG5cclxuICAgIGN0eC50cmFuc2xhdGUoY2FudmFzLncvMiwgMTUgKyBoLzIgLSBoT2Zmc2V0KTtcclxuICAgIGN0eC5zY2FsZSh3L2gsIDEpO1xyXG5cclxuICAgIGNvbnN0IGdyZCA9IGN0eC5jcmVhdGVSYWRpYWxHcmFkaWVudCgwLCAwLCAwLCAwLCAwLCBoLzIpO1xyXG5cclxuICAgIGdyZC5hZGRDb2xvclN0b3AoMCwgYHJnYmEoJHtyfSwke2d9LCR7Yn0sMC41KWApO1xyXG4gICAgZ3JkLmFkZENvbG9yU3RvcCgxLCBgcmdiYSgke3J9LCR7Z30sJHtifSwwKWApO1xyXG5cclxuICAgIGN0eC5maWxsU3R5bGUgPSBncmQ7XHJcblxyXG4gICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgY3R4LmFyYygwLCAwLCBoLzIsIDAsIE1hdGguUEkgKiAyKTtcclxuICAgIGN0eC5maWxsKCk7XHJcbiAgICBjdHguY2xvc2VQYXRoKCk7XHJcbiAgICBjdHguc2NhbGUoaC93LCAxKTtcclxuICAgIGN0eC50cmFuc2xhdGUoLWNhbnZhcy53LzIsIC0oMTUgKyBoLzIgLSBoT2Zmc2V0KSk7XHJcblxyXG4gICAgaWYoY3BUaW1lciA+IDApIHtcclxuICAgICAgICBpZihjcFRpbWVyIDwgMykgY3R4LmZpbGxTdHlsZSA9IHNoYXJlZC5ibGVuZENvbG9yKCcjZmZmZjAwJywnI2ZmZmZmZicsc21vb3RoZXJTdGVwKDEgLSBjcFRpbWVyLzMpKTtcclxuICAgICAgICBlbHNlIGN0eC5maWxsU3R5bGUgPSAnI2ZmZmYwMCc7XHJcbiAgICB9IGVsc2UgY3R4LmZpbGxTdHlsZSA9ICd3aGl0ZSc7XHJcbiAgICBjdHguZmlsbFRleHQodHh0LCBjYW52YXMudy8yLCAxNSk7XHJcblxyXG4gICAgaWYobGFzdE1hcFBhdGggIT09IHNoYXJlZC5tYXBQYXRoKXtcclxuICAgICAgICBsYXN0TWFwUGF0aCA9IHNoYXJlZC5tYXBQYXRoO1xyXG4gICAgICAgIGNoZWNrcG9pbnRzLmxlbmd0aCA9IDA7XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IHNoYXJlZC5vYnN0YWNsZXMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICBpZihzaGFyZWQub2JzdGFjbGVzW2ldLmNoZWNrcG9pbnRPZmZzZXRYID09PSB1bmRlZmluZWQpIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICBjaGVja3BvaW50cy5wdXNoKHNoYXJlZC5vYnN0YWNsZXNbaV0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgY2hlY2twb2ludHMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgIGlmKGNoZWNrcG9pbnRzW2ldLmNoZWNrcG9pbnRDb2xsZWN0ZWQgPT09IHRydWUpe1xyXG4gICAgICAgICAgICBjaGVja3BvaW50cy5zcGxpY2UoaSwxKTtcclxuICAgICAgICAgICAgY3BEaXNwbGF5ID0gdDtcclxuICAgICAgICAgICAgY3BUaW1lciA9IDMwO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmNvbnN0IHRvUmVuZGVyVGltZSA9ICh0KSA9PiB7XHJcbiAgICBsZXQgbXMgPSAoKH5+KHQqMTAwKSklMTAwKS50b1N0cmluZygpO1xyXG4gICAgbGV0IHNlY29uZHMgPSAofn4odCU2MCkpLnRvU3RyaW5nKCk7XHJcbiAgICBpZihtcy5sZW5ndGggPT09IDEpIG1zID0gJzAnICsgbXM7XHJcblxyXG4gICAgaWYoc2Vjb25kcy5sZW5ndGggPT09IDEpIHNlY29uZHMgPSAnMCcgKyBzZWNvbmRzO1xyXG4gICAgY29uc3QgbWludXRlcyA9ICh+figodCAvIDYwKSU2MCkpLnRvU3RyaW5nKCk7XHJcblxyXG4gICAgbGV0IGRpc3BsYXlUaW1lID0gYCR7bWludXRlc306JHtzZWNvbmRzfS4ke21zfWA7XHJcblxyXG4gICAgaWYodCA+IDM2MDApIHtcclxuICAgICAgICBpZihtaW51dGVzLmxlbmd0aCA9PT0gMSkgbWludXRlcyA9ICcwJyArIG1pbnV0ZXM7XHJcbiAgICAgICAgY29uc3QgaG91cnMgPSAofn4odCAvIDM2MDApKS50b1N0cmluZygpO1xyXG4gICAgICAgIGRpc3BsYXlUaW1lID0gYCR7aG91cnN9OiR7bWludXRlc306JHtzZWNvbmRzfS4ke21zfWA7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZGlzcGxheVRpbWU7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNtb290aGVyU3RlcCh0KXtcclxuICAgIHJldHVybiB0ICogdCAqIHQgKiAodCAqICh0ICogNi4gLSAxNS4pICsgMTAuKTtcclxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///982\n")},608:(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval("\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(72);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(825);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(659);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(56);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(540);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(113);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./eXclient/style.css\nvar style = __webpack_require__(674);\n;// ./eXclient/style.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\noptions.insert = insertBySelector_default().bind(null, \"head\");\noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(style/* default */.A, options);\n\n\n\n\n       /* harmony default export */ const eXclient_style = (style/* default */.A && style/* default */.A.locals ? style/* default */.A.locals : undefined);\n\n// EXTERNAL MODULE: ./shared/shared.js\nvar shared = __webpack_require__(763);\n// EXTERNAL MODULE: ./eXclient/extras/timer.js\nvar timer = __webpack_require__(982);\n;// ./eXclient/render.js\n\r\n\r\nlet render_canvas = window.canvas = document.getElementById('canvas');\r\nlet render_ctx = window.ctx = render_canvas.getContext('2d');\r\n\r\nconst camera = shared/* default */.A.camera = {\r\n    x: 0, y: 0, scale: 1,\r\n    numControlledBy: 0,\r\n    angle: 0,\r\n    /*3d*/\r\n    z: 1,\r\n    basis1: [1, 0, 0],\r\n    basis2: [0, 1, 0],\r\n    normal: [0, 0, 1]\r\n}\r\n\r\nshared/* default */.A.defaultColors = {\r\n    tile: '#1f2229',// the stroke and outside of arena\r\n    background: '#323645',// the fillcolor\r\n    vignette: {\r\n        inner: {size:0.1,r:0,g:0,b:0,opacity:0},\r\n        outer: {size:0.6,r:0,g:0,b:0,opacity:1},\r\n        innerInterp: {size:0.1,r:0,g:0,b:0,opacity:0},\r\n        outerInterp: {size:0.6,r:0,g:0,b:0,opacity:1},\r\n        holeFunctions: []\r\n    }\r\n}\r\n\r\nshared/* default */.A.colors = {\r\n    tile: shared/* default */.A.defaultColors.tile,\r\n    background: shared/* default */.A.defaultColors.background,\r\n    vignette: {\r\n        inner: {size:0.1,r:0,g:0,b:0,opacity:0},\r\n        outer: {size:0.6,r:0,g:0,b:0,opacity:1},\r\n        innerInterp: {size:0.1,r:0,g:0,b:0,opacity:0},\r\n        outerInterp: {size:0.6,r:0,g:0,b:0,opacity:1},\r\n        holeFunctions: []\r\n    }\r\n}\r\n\r\nshared/* default */.A.selfId = undefined;\r\nshared/* default */.A.tileSize = 100;\r\nshared/* default */.A.renderDebug = false;\r\nshared/* default */.A.distortionsActive = false;\r\nshared/* default */.A.skullImgLoaded = false;\r\nshared/* default */.A.skullImg = undefined;\r\nshared/* default */.A.renderTimer = false;\r\nconst fullscreen = {\r\n    ratio: 9 / 16,\r\n    zoom: 1800,\r\n}\r\n// const width = 1600;\r\n// const height = 900;\r\n\r\n// shared.tileImage = undefined;\r\n// shared.tileImageColors = {\r\n//     tile: '', background: ''\r\n// }\r\n\r\n// function generateTileImage({tile, background}) {\r\n//     const canv = document.createElement('canvas');\r\n//     const w = canvas.w + ctx.lineWidth + shared.tileSize;\r\n//     const h = canvas.h + ctx.lineWidth + shared.tileSize;\r\n    \r\n//     const cx = canv.getContext('2d');\r\n//     canv.width = w;\r\n//     canv.height = h;\r\n//     cx.imageSmoothingEnabled = false;\r\n\r\n//     // tile background\r\n//     cx.globalAlpha = 0.75;\r\n//     cx.strokeStyle = tile;\r\n//     cx.fillStyle = background;\r\n\r\n//     cx.lineWidth = 3;\r\n//     for (let x = -camera.x%shared.tileSize; x < canvas.w + ctx.lineWidth + shared.tileSize; x += shared.tileSize) {\r\n//         ctx.beginPath();\r\n//         ctx.moveTo(x, 0);\r\n//         ctx.lineTo(x, canvas.h);\r\n//         ctx.stroke();\r\n//         ctx.closePath();\r\n//     }\r\n\r\n//     for (let y = -camera.y%shared.tileSize; y < canvas.h + ctx.lineWidth + shared.tileSize; y += shared.tileSize) {\r\n//         ctx.beginPath();\r\n//         ctx.moveTo(0, y);\r\n//         ctx.lineTo(canvas.w, y);\r\n//         ctx.stroke();\r\n//         ctx.closePath();//\r\n//     }\r\n\r\n//     cx.globalAlpha = 1;\r\n//     return canv;\r\n// }\r\n\r\n// let tileImg;\r\n// function createTileImg(scale, thicc) {\r\n//     const shared.tileSize = 100;\r\n//     // const size =\r\n//     //     Math.round(Math.max(canvas.width, canvas.height) / shared.tileSize) *\r\n//     //         shared.tileSize +\r\n//     //     200;\r\n//     const canv = document.createElement('canvas');\r\n//     if(scale < 0.1){\r\n//         return canv;\r\n//     }\r\n    \r\n//     const w = canvas.width/scale + shared.tileSize;\r\n//     const h = canvas.height/scale + shared.tileSize;\r\n    \r\n//     const cx = canv.getContext('2d');\r\n//     canv.width = w//size / scale;\r\n//     canv.height = h//size / scale;\r\n//     cx.imageSmoothingEnabled = false;\r\n\r\n//     // tile background\r\n//     cx.globalAlpha = 0.75;\r\n//     cx.strokeStyle = colors.tile//colors.background;\r\n//     cx.lineWidth = thicc ? 4 : 2;\r\n//     for (let y = 0; y <= h; y += shared.tileSize) {\r\n//         for (let x = 0; x <= w; x += shared.tileSize) {\r\n//             cx.strokeRect(x, y, shared.tileSize, shared.tileSize);\r\n//         }\r\n//     }\r\n//     cx.globalAlpha = 1;\r\n//     return canv;\r\n// }\r\n\r\nlet opaqIndex, len, lastX, lastY, lastR, lastPlayerRadius, diagonalStartOffset, diagonalDist, overRenderTiles = false, lastGA, j = false, lastNLDX = 0, lastNLDY = 0, cullingMinX=0, cullingMaxX=0, cullingMinY=0, cullingMaxY=0, canvSum=0;\r\nshared/* default */.A.render = (os=shared/* default */.A.obstacles, cols=shared/* default */.A.colors, players=shared/* default */.A.players) => {\r\n    overRenderTiles = false;\r\n    if(shared/* default */.A.selfId !== undefined){\r\n        const me = players[shared/* default */.A.selfId];\r\n\r\n        if(camera.numControlledBy === 0){\r\n            camera.x = me.pos.x;\r\n            camera.y = me.pos.y;\r\n            camera.angle = 0;\r\n            if(me.ship === true){\r\n                camera.angle = Math.PI/2+me.shipAngle;\r\n                overRenderTiles = true;\r\n            }\r\n        }\r\n\r\n        if(camera.angle !== 0){\r\n            render_ctx.translate(render_canvas.w/2, render_canvas.h/2);\r\n            render_ctx.rotate(-camera.angle);\r\n            render_ctx.translate(-render_canvas.w/2, -render_canvas.h/2);\r\n        }\r\n    }\r\n\r\n    // tile background\r\n    // ctx.strokeStyle = cols.tile;\r\n    // ctx.fillStyle = cols.background;\r\n\r\n    // if(tileImg === undefined){\r\n    //     tileImg = createTileImg(1);\r\n    // }\r\n\r\n    // const img = tileImg;\r\n    //ctx.translate(pos.x , pos.y + (gridOffset.y % 50));\r\n    // ctx.drawImage(img, (canvas.w/2-camera.x)%shared.tileSize, (canvas.h/2-camera.y)%shared.tileSize);\r\n    \r\n\r\n    if(overRenderTiles === true){\r\n        render_ctx.fillStyle = cols.tile;\r\n\r\n        canvSum = (render_canvas.w + render_canvas.h)/2;\r\n        render_ctx.fillRect(-canvSum,-canvSum,4*canvSum, 4*canvSum);\r\n\r\n        cullingMinX = camera.x-canvSum;\r\n        cullingMaxX = camera.x+canvSum;\r\n        cullingMinY = camera.y-canvSum;\r\n        cullingMaxY = camera.y+canvSum;\r\n\r\n        render_ctx.fillStyle = cols.background;\r\n        // add 1 to all dimensions so that we don't get gap artifacts on the edge of the arena\r\n        render_ctx.fillRect(-(camera.x-render_canvas.w/2)+1, -(camera.y-render_canvas.h/2)+1, shared/* default */.A.mapDimensions.x-2, shared/* default */.A.mapDimensions.y-2);\r\n\r\n        render_ctx.globalAlpha = 0.75;\r\n        render_ctx.lineWidth = 4.8;\r\n        render_ctx.strokeStyle = cols.tile;\r\n\r\n        // accounting for rotation and such\r\n        diagonalDist = Math.sqrt(render_canvas.w ** 2 + render_canvas.h ** 2);\r\n        diagonalStartOffset = (diagonalDist/2) % shared/* default */.A.tileSize - shared/* default */.A.tileSize - diagonalDist / 2;\r\n        for (let x = (render_canvas.w/2-camera.x)%shared/* default */.A.tileSize + diagonalStartOffset; x < diagonalDist + render_ctx.lineWidth + shared/* default */.A.tileSize; x += shared/* default */.A.tileSize) {\r\n            render_ctx.beginPath();\r\n            render_ctx.moveTo(x, diagonalStartOffset);\r\n            render_ctx.lineTo(x, render_canvas.h - diagonalStartOffset);\r\n            render_ctx.stroke();\r\n            render_ctx.closePath();\r\n        }\r\n    \r\n        for (let y = (render_canvas.h/2-camera.y)%shared/* default */.A.tileSize + diagonalStartOffset; y < diagonalDist + render_ctx.lineWidth + shared/* default */.A.tileSize; y += shared/* default */.A.tileSize) {\r\n            render_ctx.beginPath();\r\n            render_ctx.moveTo(diagonalStartOffset, y);\r\n            render_ctx.lineTo(render_canvas.w - diagonalStartOffset, y);\r\n            render_ctx.stroke();\r\n            render_ctx.closePath();\r\n        }\r\n    } else {\r\n        render_ctx.fillStyle = cols.tile;\r\n        render_ctx.fillRect(0,0,render_canvas.w, render_canvas.h);\r\n\r\n        cullingMinX = camera.x-render_canvas.w/2;\r\n        cullingMaxX = camera.x+render_canvas.w/2;\r\n        cullingMinY = camera.y-render_canvas.h/2;\r\n        cullingMaxY = camera.y+render_canvas.h/2;\r\n\r\n        render_ctx.fillStyle = cols.background;\r\n        // add 1 to all dimensions so that we don't get gap artifacts on the edge of the arena\r\n        render_ctx.fillRect(-(camera.x-render_canvas.w/2)+1, -(camera.y-render_canvas.h/2)+1, shared/* default */.A.mapDimensions.x-2, shared/* default */.A.mapDimensions.y-2);\r\n\r\n        render_ctx.globalAlpha = 0.75;\r\n        render_ctx.lineWidth = 4.8;\r\n        render_ctx.strokeStyle = cols.tile;\r\n\r\n        for (let x = (render_canvas.w/2-camera.x)%shared/* default */.A.tileSize; x < render_canvas.w + render_ctx.lineWidth + shared/* default */.A.tileSize; x += shared/* default */.A.tileSize) {\r\n            render_ctx.beginPath();\r\n            render_ctx.moveTo(x, 0);\r\n            render_ctx.lineTo(x, render_canvas.h);\r\n            render_ctx.stroke();\r\n            render_ctx.closePath();\r\n        }\r\n    \r\n        for (let y = (render_canvas.h/2-camera.y)%shared/* default */.A.tileSize; y < render_canvas.h + render_ctx.lineWidth + shared/* default */.A.tileSize; y += shared/* default */.A.tileSize) {\r\n            render_ctx.beginPath();\r\n            render_ctx.moveTo(0, y);\r\n            render_ctx.lineTo(render_canvas.w, y);\r\n            render_ctx.stroke();\r\n            render_ctx.closePath();\r\n        }\r\n    }\r\n\r\n    render_ctx.globalAlpha = 1;\r\n\r\n    // TODO: test if it's faster to draw tiles or image\r\n    // if(shared.tileImageColors.tile !== shared.colors.tile || shared.tileImageColors.background !== shared.colors.background){\r\n    //     // TODO: optimize even further with just generating lines and using clearRect and having another canvas in the background with the solid bg color fill\r\n    //     shared.tileImage = generateTileImage(shared.colors);\r\n    // }\r\n\r\n    // ctx.drawImage(shared.tileImage, -camera.x % shared.tileSize, -camera.y % shared.tileSize);\r\n    render_ctx.translate(-(camera.x-render_canvas.w/2), -(camera.y-render_canvas.h/2));\r\n\r\n    // render obstacles\r\n    renderObstacles(os, cols);\r\n\r\n    // render players\r\n    for(let i = 0; i < players.length; i++){\r\n        const player = players[i];\r\n        if(player === undefined) continue;\r\n        if(player.cr !== undefined) {player.cr(player); continue;}\r\n        render_ctx.fillStyle = player.dead === true ? 'red' : 'black';\r\n\r\n        lastR = player.sat.r;\r\n        player.sat.r = Math.abs(player.renderRadius);\r\n\r\n        lastX = player.pos.x;\r\n        lastY = player.pos.y;\r\n        if(i !== shared/* default */.A.selfId){\r\n            player.pos.x = player.interpX;\r\n            player.pos.y = player.interpY;\r\n        }\r\n        \r\n        render_ctx.beginPath();\r\n        player.renderShape(player);\r\n        \r\n        if(player.renderRadius >= 0) render_ctx.fill();\r\n        else {\r\n            // negative radius\r\n            const diameter = 2 * Math.PI * Math.abs(player.dead === true ? player.sat.r : lastPlayerRadius);\r\n            const timesAround = Math.max(3, Math.floor(diameter / 42));\r\n            lastNLDX = lastNLDX * 0.96 + 2/7*diameter/timesAround * 0.04;\r\n            lastNLDY = lastNLDY * 0.96 + 5/7*diameter/timesAround * 0.04;\r\n            render_ctx.setLineDash([lastNLDX, lastNLDY]);\r\n            render_ctx.lineDashOffset = (-shared/* default */.A.frames / 1.56) % diameter;\r\n            render_ctx.strokeStyle = render_ctx.fillStyle;\r\n            render_ctx.lineWidth = 8;\r\n            render_ctx.lineCap = 'round';\r\n            render_ctx.stroke();\r\n            render_ctx.setLineDash([]);\r\n        }\r\n        if(player.god === true) {render_ctx.strokeStyle = 'purple'; render_ctx.lineWidth = 10; render_ctx.stroke(); }\r\n        if (player.ship === true) {\r\n            render_ctx.strokeStyle = '#0033ed';\r\n            render_ctx.lineWidth = 10;\r\n            render_ctx.lineCap = 'round';\r\n            render_ctx.moveTo(player.pos.x,player.pos.y);\r\n            render_ctx.lineTo(player.pos.x + Math.cos(player.shipAngle) * player.sat.r, player.pos.y + Math.sin(player.shipAngle) * player.sat.r);\r\n            render_ctx.stroke();\r\n        }\r\n        if(player.grapple === true){\r\n            render_ctx.beginPath();\r\n            render_ctx.strokeStyle = '#969696';\r\n            render_ctx.globalAlpha = 0.75;\r\n            render_ctx.lineWidth = 12;\r\n            render_ctx.arc(player.pos.x, player.pos.y, Math.abs(player.renderRadius) / 2, 0, Math.PI * 2);\r\n\r\n            if(player.grappleX === -1 && player.id === shared/* default */.A.selfId && shared/* default */.A.input.action1 === true){\r\n                render_ctx.strokeStyle = 'white';\r\n                render_ctx.stroke();\r\n                render_ctx.closePath();\r\n\r\n                // failed grapple - big circle\r\n                render_ctx.beginPath();\r\n                render_ctx.globalAlpha = 0.2;\r\n                render_ctx.arc(player.pos.x, player.pos.y, player.grappleRange, 0, Math.PI * 2);\r\n                render_ctx.stroke();\r\n                render_ctx.closePath();\r\n            } else if(player.grappleX !== -1){\r\n                render_ctx.strokeStyle = 'white';\r\n                render_ctx.stroke();\r\n                render_ctx.closePath();\r\n\r\n                // successful grapple - line to grap pt\r\n                render_ctx.beginPath();\r\n                render_ctx.moveTo(player.pos.x, player.pos.y);\r\n                render_ctx.lineTo(player.grappleX, player.grappleY);\r\n                render_ctx.stroke();\r\n                render_ctx.closePath();\r\n\r\n                // and circle at the point\r\n                render_ctx.lineWidth = 10;\r\n                render_ctx.beginPath();\r\n                render_ctx.arc(player.grappleX, player.grappleY, 10, 0, Math.PI * 2);\r\n                render_ctx.stroke();\r\n                render_ctx.closePath();\r\n            } else {\r\n                render_ctx.stroke();\r\n                render_ctx.closePath();\r\n            }\r\n            render_ctx.globalAlpha = 1;\r\n        }\r\n        if(player.deathTimer === true){\r\n            render_ctx.fillStyle = 'red';\r\n            render_ctx.font = '60px Inter';\r\n            render_ctx.textAlign = 'center';\r\n            render_ctx.textBaseline = 'middle';\r\n            render_ctx.shadowBlur = 2;\r\n            render_ctx.shadowColor = 'red';\r\n            render_ctx.fillText(~~(player.deathTime / 60), player.pos.x, player.pos.y);\r\n            render_ctx.shadowBlur = 0;\r\n        }\r\n        render_ctx.closePath();\r\n\r\n        render_ctx.fillStyle = 'white';\r\n        render_ctx.font = `${15 * ((Math.abs(player.renderRadius) + 0.5) / 25)}px Inter`;\r\n        render_ctx.textAlign = 'center';\r\n        render_ctx.textBaseline = 'middle';\r\n        render_ctx.fillText(\r\n            player.name,\r\n            player.pos.x,\r\n            player.pos.y + player.renderRadius * 4/3 + 3\r\n        );\r\n\r\n        player.pos.x = lastX;\r\n        player.pos.y = lastY;\r\n        player.sat.r = lastR;\r\n    }\r\n\r\n    // debug\r\n    if(shared/* default */.A.renderDebug === true){\r\n        render_ctx.fillStyle = 'red';\r\n        render_ctx.strokeStyle = 'red';\r\n        render_ctx.lineWidth = 2;\r\n        for(let i = 0; i < os.length; i++){\r\n            if(os[i].topLeft.x > cullingMaxX || os[i].topLeft.x + os[i].dimensions.x < cullingMinX || os[i].topLeft.y > cullingMaxY || os[i].topLeft.y + os[i].dimensions.y < cullingMinY) continue;\r\n            render_ctx.beginPath();\r\n            render_ctx.arc(os[i].pos.x, os[i].pos.y, 10, 0, Math.PI * 2);\r\n            render_ctx.fill();\r\n            render_ctx.closePath();\r\n            render_ctx.strokeRect(os[i].topLeft.x, os[i].topLeft.y, os[i].dimensions.x, os[i].dimensions.y);\r\n        }\r\n\r\n        render_ctx.fillStyle = 'white';\r\n        render_ctx.textAlign = 'center';\r\n        render_ctx.textBaseline = 'middle';\r\n\r\n        for(let i = 0; i < players.length; i++){\r\n            const player = players[i];\r\n            if(player === undefined) continue;\r\n            render_ctx.font = `${1.2 * 15 * ((Math.abs(player.renderRadius) + 0.5) / 25)}px Inter`;\r\n            render_ctx.fillText(\r\n                `(${Math.round(player.pos.x/50)*50},${Math.round(player.pos.y/50)*50})`,\r\n                player.pos.x,\r\n                player.pos.y - player.renderRadius * 4/3 - 3 * 1.5\r\n            );\r\n        }\r\n    }\r\n\r\n    render_ctx.translate(camera.x-render_canvas.w/2, camera.y-render_canvas.h/2);\r\n\r\n    if(camera.angle !== 0){\r\n        render_ctx.translate(render_canvas.w/2, render_canvas.h/2);\r\n        render_ctx.rotate(camera.angle);\r\n        render_ctx.translate(-render_canvas.w/2, -render_canvas.h/2);\r\n    }\r\n\r\n    // vignette\r\n    const v = shared/* default */.A.colors.vignette;\r\n    render_ctx.beginPath();\r\n    const grd = render_ctx.createRadialGradient(\r\n        render_canvas.w / 2,\r\n        render_canvas.h / 2,\r\n        (Math.max(render_canvas.w,render_canvas.h) * v.innerInterp.size),\r\n        render_canvas.w / 2,\r\n        render_canvas.h / 2,\r\n        (Math.max(render_canvas.w,render_canvas.h) * v.outerInterp.size)\r\n    );\r\n\r\n    grd.addColorStop(\r\n        0,\r\n        `rgba(${v.innerInterp.r},${v.innerInterp.g},${v.innerInterp.b},${v.innerInterp.opacity})`\r\n    );\r\n    grd.addColorStop(\r\n        1,\r\n        `rgba(${v.outerInterp.r},${v.outerInterp.g},${v.outerInterp.b},${v.outerInterp.opacity})`\r\n    );\r\n    render_ctx.fillStyle = grd;\r\n    render_ctx.rect(0,0,render_canvas.w,render_canvas.h);\r\n    if(v.holeFunctions.length !== 0){\r\n        if(shared/* default */.A.selfId !== undefined){\r\n            const me = players[shared/* default */.A.selfId];\r\n            if(me.ship === true){\r\n                render_ctx.translate(render_canvas.w/2, render_canvas.h/2);\r\n                render_ctx.rotate(-me.shipAngle-Math.PI/2);\r\n                render_ctx.translate(-render_canvas.w/2, -render_canvas.h/2);\r\n            }\r\n        }\r\n        render_ctx.translate(render_canvas.w/2-camera.x, render_canvas.h/2-camera.y);\r\n        for(let i = 0; i < v.holeFunctions.length; i++){\r\n            v.holeFunctions[i]();\r\n        }\r\n        render_ctx.translate(camera.x-render_canvas.w/2, camera.y-render_canvas.h/2);\r\n        if(shared/* default */.A.selfId !== undefined){\r\n            const me = players[shared/* default */.A.selfId];\r\n            if(me.ship === true){\r\n                render_ctx.translate(render_canvas.w/2, render_canvas.h/2);\r\n                render_ctx.rotate(me.shipAngle+Math.PI/2);\r\n                render_ctx.translate(-render_canvas.w/2, -render_canvas.h/2);\r\n            }\r\n        }\r\n    }\r\n    render_ctx.fill('evenodd');\r\n    render_ctx.closePath();\r\n\r\n    shared/* default */.A.colors.vignette.inner = {size:0.1,r:0,g:0,b:0,opacity:0};\r\n    shared/* default */.A.colors.vignette.outer = {size:0.6,r:0,g:0,b:0,opacity:1};\r\n    shared/* default */.A.colors.vignette.holeFunctions.length=0;\r\n    // shared.colors = {\r\n    //     tile: shared.defaultColors.tile,\r\n    //     background: shared.defaultColors.background,\r\n    //     vignette: {\r\n    //         inner: {size:0.1,r:0,g:0,b:0,opacity:0},\r\n    //         outer: {size:0.6,r:0,g:0,b:0,opacity:1},\r\n    //         innerInterp: {size:0.1,r:0,g:0,b:0,opacity:0},\r\n    //         outerInterp: {size:0.6,r:0,g:0,b:0,opacity:1}\r\n    //     }\r\n    // }\r\n\r\n    if(shared/* default */.A.disconnected === true){\r\n        let txt = 'Disconnected From Server.'.split('');\r\n        for(let i = 0; i < txt.length; i++) {if(Math.random() < 0.03) txt[i] = '#';}\r\n        txt = txt.join('');\r\n        render_ctx.font = '81px Inter';\r\n        render_ctx.fillStyle = '#00ff41';\r\n        render_ctx.textAlign = 'right';\r\n        render_ctx.textBaseline = 'bottom';\r\n        render_ctx.fillText(txt, render_canvas.w - 30, render_canvas.h - 50);\r\n        render_ctx.font = '28px Inter';\r\n        render_ctx.fillText('You may still play the current map but cannot win or leave.', render_canvas.w - 30, render_canvas.h - 18);\r\n    } else if(shared/* default */.A.renderTimer === true) renderTimerFn();\r\n\r\n    if(shared/* default */.A.distortionsActive === true) shared/* default */.A.renderGl();\r\n}\r\n\r\nshared/* default */.A.disableCulling = () => {\r\n    cullingMinX = cullingMinY = -Infinity;\r\n    cullingMaxX = cullingMaxY =  Infinity;\r\n}\r\n\r\nconst renderObstacles = shared/* default */.A.renderObstacles = (os, cols=shared/* default */.A.colors) => {\r\n    for(let i = 0; i < os.length; i++){\r\n        if(os[i].cr !== undefined) { os[i].cr(os[i]); continue; }\r\n\r\n        // culling\r\n        if(os[i].topLeft.x > cullingMaxX || os[i].topLeft.x + os[i].dimensions.x < cullingMinX || os[i].topLeft.y > cullingMaxY || os[i].topLeft.y + os[i].dimensions.y < cullingMinY) continue;\r\n\r\n        len = os[i].effect.length;\r\n        if(len === 1){\r\n            j = 0;\r\n            render_ctx.toFill = true;\r\n            render_ctx.toStroke = false;\r\n            render_ctx.lineWidth = 4; \r\n            render_ctx.beginPath();\r\n            os[i].renderShape(os[i]);\r\n            os[i].renderEffect[j](os[i]);\r\n            if(os[i].isText === true) renderTextSpecials(os[i], cols);\r\n            if(render_ctx.toFill === true) render_ctx.fill();\r\n            if(render_ctx.toStroke === true) render_ctx.stroke();\r\n            if(render_ctx.cleanUpFunction !== undefined) { render_ctx.cleanUpFunction(); render_ctx.cleanUpFunction = undefined; }\r\n            render_ctx.closePath();\r\n            render_ctx.globalAlpha = 1;\r\n        } else {\r\n            // so we want to fade between the effect renders. We render a previous one with 1 opacity and then raise the next one from 0-1 opacity, until the next one becomes the previous and the cycle repeats\r\n            os[i].renderEffectTimer += 1/128;\r\n            if(os[i].renderEffectTimer >= len) os[i].renderEffectTimer -= len;\r\n\r\n            opaqIndex = Math.floor(os[i].renderEffectTimer);\r\n            /*let fullIndex*/j = opaqIndex - 1;\r\n            if(/*fullIndex*/j === -1) /*fullIndex*/j = len-1;\r\n            // j = fullIndex;\r\n\r\n            // render full index\r\n            render_ctx.toFill = true;\r\n            render_ctx.toStroke = false;\r\n            render_ctx.lineWidth = 2;\r\n            render_ctx.beginPath();\r\n            os[i].renderShape(os[i]);\r\n            os[i].renderEffect[j](os[i]);\r\n            if(os[i].isText === true) renderTextSpecials(os[i], cols);\r\n            render_ctx.globalAlpha = 1;\r\n            if(render_ctx.toFill === true) render_ctx.fill();\r\n            if(render_ctx.toStroke === true) render_ctx.stroke();\r\n            if(render_ctx.cleanUpFunction !== undefined) { render_ctx.cleanUpFunction(); render_ctx.cleanUpFunction = undefined; }\r\n            render_ctx.closePath();\r\n\r\n            // render opaq index\r\n            j = opaqIndex;\r\n            render_ctx.toFill = true;\r\n            render_ctx.toStroke = false;\r\n            render_ctx.lineWidth = 2;\r\n            render_ctx.beginPath();\r\n            os[i].renderShape(os[i]);\r\n            os[i].renderEffect[j](os[i]);\r\n            if(os[i].isText === true) renderTextSpecials(os[i], cols);\r\n            render_ctx.globalAlpha = os[i].renderEffectTimer - opaqIndex;\r\n            if(render_ctx.toFill === true) render_ctx.fill();\r\n            if(render_ctx.toStroke === true) render_ctx.stroke();\r\n            if(render_ctx.cleanUpFunction !== undefined) { render_ctx.cleanUpFunction(); render_ctx.cleanUpFunction = undefined; }\r\n            render_ctx.closePath();\r\n            render_ctx.globalAlpha = 1;\r\n        }\r\n    }\r\n}\r\n\r\nfunction interpolate(start, end, t){\r\n    return (1-t) * start + t * end;\r\n}\r\n\r\nfunction renderTextSpecials(o, cols){\r\n    lastGA = render_ctx.globalAlpha;\r\n    render_ctx.textAlign = 'center';\r\n    render_ctx.textBaseline = 'middle';\r\n    render_ctx.font = `${o.fontSize}px Inter`;\r\n    render_ctx.translate(o.topLeft.x+o.dimensions.x/2, o.topLeft.y+o.dimensions.y/2);\r\n    if(o.rotation !== undefined) render_ctx.rotate(o.rotation);\r\n    if(render_ctx.globalAlpha < 0.5) render_ctx.globalAlpha = 0.5;\r\n    if(render_ctx.toFill === true) render_ctx.fillText(o.text, 0, 0);\r\n    if(render_ctx.toStroke === true) render_ctx.strokeText(o.text, 0, 0);\r\n    else if(render_ctx.toFill === false) {\r\n        render_ctx.globalAlpha = 1;\r\n        render_ctx.fillStyle = cols.tile;\r\n        render_ctx.fillText(o.text, 0, 0);\r\n    }\r\n    if(o.rotation !== undefined) render_ctx.rotate(-o.rotation);\r\n    render_ctx.translate(-o.topLeft.x-o.dimensions.x/2, -o.topLeft.y-o.dimensions.y/2);\r\n    render_ctx.globalAlpha = Math.min(0.5, lastGA);\r\n}\r\n\r\n// canvas resizing\r\nshared/* default */.A.resizeFns = [];\r\nconst gui = document.querySelector('.gui') ?? {style:{}};\r\nlet lastScale=1,w,h;\r\nif(shared/* default */.A.isEditor === undefined) shared/* default */.A.isEditor = false;\r\nshared/* default */.A.resize = () => {\r\n    if(shared/* default */.A.isEditor === true){\r\n        const dimensions = shared/* default */.A.left.getBoundingClientRect();\r\n        w = dimensions.width;\r\n        h = dimensions.height;\r\n    } else {\r\n        w = window.innerWidth;\r\n        h = window.innerHeight;\r\n    }\r\n    lastScale = shared/* default */.A.camera.scale;\r\n    shared/* default */.A.changeCameraScale(1);\r\n    const dpi = window.devicePixelRatio;\r\n    gui.style.width = render_canvas.style.width = Math.ceil(w) + 'px';\r\n    gui.style.height = render_canvas.style.height = Math.ceil(h) + 'px';\r\n    gui.width = render_canvas.width = Math.ceil(w) * dpi;\r\n    gui.height = render_canvas.height = Math.ceil(h) * dpi;\r\n    render_canvas.zoom = Math.max(0.1, Math.round((Math.max(render_canvas.height, render_canvas.width * fullscreen.ratio) / fullscreen.zoom * camera.scale) * 100) / 100);\r\n    // w and h are calced with zoom\r\n    render_canvas.w = render_canvas.width / render_canvas.zoom;\r\n    render_canvas.h = render_canvas.height / render_canvas.zoom;\r\n    render_ctx.scale(render_canvas.zoom, render_canvas.zoom);\r\n    render_ctx.lineJoin = 'round';\r\n    render_ctx.lineCap = 'round';\r\n\r\n    for(let i = 0; i < shared/* default */.A.resizeFns.length; i++){\r\n        shared/* default */.A.resizeFns[i]();\r\n    }\r\n    shared/* default */.A.changeCameraScale(lastScale);\r\n}\r\n\r\nshared/* default */.A.changeCameraScale = (scale) => {\r\n    render_ctx.translate(-(1-1/shared/* default */.A.camera.scale)*render_canvas.w/2, -(1-1/shared/* default */.A.camera.scale)*render_canvas.h/2);\r\n\r\n    render_ctx.translate(render_canvas.w/2, render_canvas.h/2);\r\n    render_ctx.scale(1/shared/* default */.A.camera.scale, 1/shared/* default */.A.camera.scale);\r\n    render_ctx.translate(-render_canvas.w/2, -render_canvas.h/2);\r\n\r\n    shared/* default */.A.camera.scale = scale;\r\n    render_canvas.w = render_canvas.width / render_canvas.zoom / shared/* default */.A.camera.scale;\r\n    render_canvas.h = render_canvas.height / render_canvas.zoom / shared/* default */.A.camera.scale;\r\n\r\n    render_ctx.translate(render_canvas.w/2, render_canvas.h/2);\r\n    render_ctx.scale(shared/* default */.A.camera.scale, shared/* default */.A.camera.scale);\r\n    render_ctx.translate(-render_canvas.w/2, -render_canvas.h/2);\r\n    \r\n    render_ctx.translate((1-1/shared/* default */.A.camera.scale)*render_canvas.w/2, (1-1/shared/* default */.A.camera.scale)*render_canvas.h/2);\r\n}\r\n  \r\nwindow.addEventListener('resize', function () {\r\n    shared/* default */.A.resize();\r\n});\r\nshared/* default */.A.resize();\r\n\r\n// if there's ever more extras, make an array system\r\nlet nonLinearFns;\r\nshared/* default */.A.initDistortion = async (vs, fs, uniformNames=[], uniformLambdas=[]) => {\r\n    if(nonLinearFns === undefined) nonLinearFns = (await __webpack_require__.e(/* import() */ 964).then(__webpack_require__.bind(__webpack_require__, 964))).default;\r\n    nonLinearFns.initNonlinearTransform(vs, fs, uniformNames, uniformLambdas);\r\n}\r\n\r\nshared/* default */.A.unInitDistortion = () => {\r\n    // can't be active if not loaded\r\n    if(nonLinearFns === undefined) return;\r\n    nonLinearFns.unInitNonlinearTransform();\r\n}\r\n\r\nlet noiseFns;\r\nshared/* default */.A.importNoise = async() => {\r\n    if(noiseFns !== undefined) return noiseFns;\r\n    return noiseFns = (await __webpack_require__.e(/* import() */ 417).then(__webpack_require__.bind(__webpack_require__, 417))).default;\r\n}\r\n\r\nlet importedYT = false;\r\nshared/* default */.A.importYoutube = async() => {\r\n    if(importedYT === true) return;\r\n    const p1 = __webpack_require__.e(/* import() */ 494).then(__webpack_require__.bind(__webpack_require__, 494));\r\n    const p2 = new Promise((res) => {\r\n        const s = document.createElement('script');\r\n        s.src = \"https://www.youtube.com/iframe_api\";\r\n        document.body.appendChild(s);\r\n\r\n        window.onYouTubeIframeAPIReady = () => {\r\n            res();\r\n        }\r\n    })\r\n\r\n    importedYT = true;\r\n\r\n    return Promise.all([p1, p2]);\r\n}\r\n\r\nlet renderTimerFn;\r\nshared/* default */.A.toggleTimer = async () => {\r\n    if(shared/* default */.A.renderTimer === true) {shared/* default */.A.renderTimer = false;return;}\r\n    if(renderTimerFn === undefined) {renderTimerFn = (await Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 982))).default; shared/* default */.A.renderTimer = true;}\r\n    else shared/* default */.A.renderTimer = true;\r\n}\r\n\r\n;\r\n\r\nshared/* default */.A.unTaintCanvas = () => {\r\n    const transform = render_ctx.getTransform();\r\n\r\n    const newCanvas = document.createElement('canvas');\r\n\r\n    document.body.insertBefore(newCanvas, render_canvas);\r\n\r\n    render_canvas.remove();\r\n\r\n    render_canvas = window.canvas = newCanvas;\r\n    render_canvas.id = \"canvas\";\r\n    render_ctx = window.ctx = render_canvas.getContext('2d');\r\n    shared/* default */.A.resize();\r\n\r\n    render_ctx.setTransform(transform);\r\n}\r\n\r\n// mouse coordinates ranging (0,canvas.w) to world position (same coordinates as obstacle rendering)sD\r\n// TODO: test angle !== 0\r\nshared/* default */.A.translateScreenToWorld = () => {\r\n    render_ctx.translate(-(camera.x-render_canvas.w/2), -(camera.y-render_canvas.h/2));\r\n    // if(camera.angle !== 0){\r\n    //     ctx.translate(canvas.w/2, canvas.h/2);\r\n    //     ctx.rotate(-camera.angle);\r\n    //     ctx.translate(-canvas.w/2, -canvas.h/2);\r\n    // }\r\n}\r\n\r\nshared/* default */.A.translateWorldToScreen = () => {\r\n    // if(camera.angle !== 0){\r\n    //     ctx.translate(canvas.w/2, canvas.h/2);\r\n    //     ctx.rotate(camera.angle);\r\n    //     ctx.translate(-canvas.w/2, -canvas.h/2);\r\n    // }\r\n    render_ctx.translate((camera.x-render_canvas.w/2), (camera.y-render_canvas.h/2));\r\n}\r\n\r\nshared/* default */.A.screenToWorld = (x,y) => {\r\n    // if(camera.angle === 0){\r\n        return [\r\n            x + (camera.x-render_canvas.w/2),\r\n            y + (camera.y-render_canvas.h/2)\r\n        ];\r\n    // } else {\r\n    //     x += -(camera.x-canvas.w/2) + canvas.w/2;\r\n    //     y += -(camera.y-canvas.h/2) + canvas.h/2;\r\n    //     const mag = Math.sqrt(x**2 + y **2);\r\n    //     const angle = Math.atan2(y,x) + camera.angle;\r\n    //     return [\r\n    //         Math.cos(angle) * mag,\r\n    //         Math.sin(angle) * mag\r\n    //     ]\r\n    // }\r\n}\r\n\r\nshared/* default */.A.worldToScreen = (x,y) => {\r\n    // if(camera.angle === 0){\r\n        return [\r\n            x - (camera.x-render_canvas.w/2),\r\n            y - (camera.y-render_canvas.h/2)\r\n        ]\r\n    // } else {\r\n    //     x -= canvas.w/2;\r\n    //     y -= canvas.h/2;\r\n    //     const mag = Math.sqrt(x**2 + y**2);\r\n    //     const angle = Math.atan2(y,x) - camera.angle;\r\n    //     return [\r\n    //         Math.cos(angle) * mag - (camera.x-canvas.w/2),\r\n    //         Math.sin(angle) * mag - (camera.y-canvas.h/2),\r\n    //     ]\r\n    // }\r\n}\r\n\r\n/* harmony default export */ const render = (shared/* default */.A.render);\n;// ./eXclient/msgpackr.js\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t((e=\"undefined\"!=typeof globalThis?globalThis:e||self).msgpackr={})}(undefined,function(e){\"use strict\";try{$=new TextDecoder}catch(t){}var $,r,n,i,s,f,u,l,o,a=0,c={},x=0,d=0,h=[],_={useRecords:!1,mapsAsObjects:!0};class p{}let g=new p;g.name=\"MessagePack 0xC1\";var y=!1,b=2;try{Function(\"\")}catch(w){b=1/0}class m{constructor(e){e&&(!1===e.useRecords&&void 0===e.mapsAsObjects&&(e.mapsAsObjects=!0),!e.sequential||!1===e.trusted||(e.trusted=!0,e.structures||!1==e.useRecords||(e.structures=[],e.maxSharedStructures||(e.maxSharedStructures=0))),e.structures?e.structures.sharedLength=e.structures.length:e.getStructures&&((e.structures=[]).uninitialized=!0,e.structures.sharedLength=0),e.int64AsNumber&&(e.int64AsType=\"number\")),Object.assign(this,e)}unpack(e,t){if(r)return G(()=>(H(),this?this.unpack(e,t):m.prototype.unpack.call(_,e,t)));e.buffer||e.constructor!==ArrayBuffer||(e=\"undefined\"!=typeof Buffer?Buffer.from(e):new Uint8Array(e)),\"object\"==typeof t?(n=t.end||e.length,a=t.start||0):(a=0,n=t>-1?t:e.length),d=0,s=null,f=null,r=e;try{l=e.dataView||(e.dataView=new DataView(e.buffer,e.byteOffset,e.byteLength))}catch($){if(r=null,e instanceof Uint8Array)throw $;throw Error(\"Source must be a Uint8Array or Buffer but was a \"+(e&&\"object\"==typeof e?e.constructor.name:typeof e))}return this instanceof m?(c=this,this.structures?i=this.structures:(!i||i.length>0)&&(i=[])):(c=_,(!i||i.length>0)&&(i=[])),S(t)}unpackMultiple(e,t){let $,r=0;try{y=!0;let n=e.length,i=this?this.unpack(e,n):ee.unpack(e,n);if(t){if(!1===t(i,r,a))return;for(;a<n;)if(r=a,!1===t(S(),r,a))return}else{for($=[i];a<n;)r=a,$.push(S());return $}}catch(s){throw s.lastPosition=r,s.values=$,s}finally{y=!1,H()}}_mergeStructures(e,t){Object.isFrozen(e=e||[])&&(e=e.map(e=>e.slice(0)));for(let $=0,r=e.length;$<r;$++){let n=e[$];n&&(n.isShared=!0,$>=32&&(n.highByte=$-32>>5))}for(let i in e.sharedLength=e.length,t||[])if(i>=0){let s=e[i],f=t[i];f&&(s&&((e.restoreStructures||(e.restoreStructures=[]))[i]=s),e[i]=f)}return this.structures=e}decode(e,t){return this.unpack(e,t)}}function S(e){try{if(!c.trusted&&!y){let t=i.sharedLength||0;t<i.length&&(i.length=t)}let $;if(c.randomAccessStructure&&r[a]<64&&r[a]>=32&&o?($=o(r,a,n,c),r=null,!(e&&e.lazy)&&$&&($=$.toJSON()),a=n):$=k(),f&&(a=f.postBundlePosition,f=null),y&&(i.restoreStructures=null),a==n)i&&i.restoreStructures&&U(),i=null,r=null,u&&(u=null);else if(a>n)throw Error(\"Unexpected end of MessagePack data\");else if(!y){let s;try{s=JSON.stringify($,(e,t)=>\"bigint\"==typeof t?`${t}n`:t).slice(0,100)}catch(l){s=\"(JSON view not available \"+l+\")\"}throw Error(\"Data read, but end of buffer not reached \"+s)}return $}catch(x){throw i&&i.restoreStructures&&U(),H(),(x instanceof RangeError||x.message.startsWith(\"Unexpected end of buffer\")||a>n)&&(x.incomplete=!0),x}}function U(){for(let e in i.restoreStructures)i[e]=i.restoreStructures[e];i.restoreStructures=null}function k(){let e=r[a++];if(e<160){if(e<128){if(e<64)return e;{let t=i[63&e]||c.getStructures&&O()[63&e];return t?(t.read||(t.read=A(t,63&e)),t.read()):e}}if(e<144){if(e-=128,c.mapsAsObjects){let $={};for(let u=0;u<e;u++){let o=W();\"__proto__\"===o&&(o=\"__proto_\"),$[o]=k()}return $}{let _=new Map;for(let p=0;p<e;p++)_.set(k(),k());return _}}{let y=Array(e-=144);for(let b=0;b<e;b++)y[b]=k();return c.freezeData?Object.freeze(y):y}}if(e<192){let w=e-160;if(d>=a)return s.slice(a-x,(a+=w)-x);if(0==d&&n<140){let m=w<16?C(w):R(w);if(null!=m)return m}return T(w)}{let S;switch(e){case 192:return null;case 193:if(f){if((S=k())>0)return f[1].slice(f.position1,f.position1+=S);return f[0].slice(f.position0,f.position0-=S)}return g;case 194:return!1;case 195:return!0;case 196:if(void 0===(S=r[a++]))throw Error(\"Unexpected end of buffer\");return N(S);case 197:return S=l.getUint16(a),a+=2,N(S);case 198:return S=l.getUint32(a),a+=4,N(S);case 199:return D(r[a++]);case 200:return S=l.getUint16(a),a+=2,D(S);case 201:return S=l.getUint32(a),a+=4,D(S);case 202:if(S=l.getFloat32(a),c.useFloat32>2){let U=Q[(127&r[a])<<1|r[a+1]>>7];return a+=4,(U*S+(S>0?.5:-.5)>>0)/U}return a+=4,S;case 203:return S=l.getFloat64(a),a+=8,S;case 204:return r[a++];case 205:return S=l.getUint16(a),a+=2,S;case 206:return S=l.getUint32(a),a+=4,S;case 207:return\"number\"===c.int64AsType?(S=4294967296*l.getUint32(a),S+=l.getUint32(a+4)):\"string\"===c.int64AsType?S=l.getBigUint64(a).toString():\"auto\"===c.int64AsType?(S=l.getBigUint64(a))<=BigInt(2)<<BigInt(52)&&(S=Number(S)):S=l.getBigUint64(a),a+=8,S;case 208:return l.getInt8(a++);case 209:return S=l.getInt16(a),a+=2,S;case 210:return S=l.getInt32(a),a+=4,S;case 211:return\"number\"===c.int64AsType?(S=4294967296*l.getInt32(a),S+=l.getUint32(a+4)):\"string\"===c.int64AsType?S=l.getBigInt64(a).toString():\"auto\"===c.int64AsType?(S=l.getBigInt64(a))>=BigInt(-2)<<BigInt(52)&&S<=BigInt(2)<<BigInt(52)&&(S=Number(S)):S=l.getBigInt64(a),a+=8,S;case 212:if(114==(S=r[a++]))return J(63&r[a++]);{let I=h[S];if(I){if(I.read)return a++,I.read(k());if(I.noBuffer)return a++,I();return I(r.subarray(a,++a))}throw Error(\"Unknown extension \"+S)}case 213:if(114==(S=r[a]))return a++,J(63&r[a++],r[a++]);return D(2);case 214:return D(4);case 215:return D(8);case 216:return D(16);case 217:if(S=r[a++],d>=a)return s.slice(a-x,(a+=S)-x);return B(S);case 218:if(S=l.getUint16(a),d>=(a+=2))return s.slice(a-x,(a+=S)-x);return L(S);case 219:if(S=l.getUint32(a),d>=(a+=4))return s.slice(a-x,(a+=S)-x);return F(S);case 220:return S=l.getUint16(a),a+=2,z(S);case 221:return S=l.getUint32(a),a+=4,z(S);case 222:return S=l.getUint16(a),a+=2,E(S);case 223:return S=l.getUint32(a),a+=4,E(S);default:if(e>=224)return e-256;if(void 0===e){let v=Error(\"Unexpected end of MessagePack data\");throw v.incomplete=!0,v}throw Error(\"Unknown MessagePack token \"+e)}}}let I=/^[a-zA-Z_$][a-zA-Z\\d_$]*$/;function A(e,t){function $(){if($.count++>b){let r=e.read=Function(\"r\",\"return function(){return \"+(c.freezeData?\"Object.freeze\":\"\")+\"({\"+e.map(e=>\"__proto__\"===e?\"__proto_:r()\":I.test(e)?e+\":r()\":\"[\"+JSON.stringify(e)+\"]:r()\").join(\",\")+\"})}\")(k);return 0===e.highByte&&(e.read=v(t,e.read)),r()}let n={};for(let i=0,s=e.length;i<s;i++){let f=e[i];\"__proto__\"===f&&(f=\"__proto_\"),n[f]=k()}return c.freezeData?Object.freeze(n):n}return($.count=0,0===e.highByte)?v(t,$):$}let v=(e,t)=>function(){let $=r[a++];if(0===$)return t();let n=e<32?-(e+($<<5)):e+($<<5),s=i[n]||O()[n];if(!s)throw Error(\"Record id is not defined for \"+n);return s.read||(s.read=A(s,e)),s.read()};function O(){let e=G(()=>(r=null,c.getStructures()));return i=c._mergeStructures(e,i)}var T=P,B=P,L=P,F=P;function P(e){let t;if(e<16&&(t=C(e)))return t;if(e>64&&$)return $.decode(r.subarray(a,a+=e));let n=a+e,i=[];for(t=\"\";a<n;){let s=r[a++];if((128&s)==0)i.push(s);else if((224&s)==192){let f=63&r[a++];i.push((31&s)<<6|f)}else if((240&s)==224){let u=63&r[a++],l=63&r[a++];i.push((31&s)<<12|u<<6|l)}else if((248&s)==240){let o=63&r[a++],c=63&r[a++],x=63&r[a++],d=(7&s)<<18|o<<12|c<<6|x;d>65535&&(d-=65536,i.push(d>>>10&1023|55296),d=56320|1023&d),i.push(d)}else i.push(s);i.length>=4096&&(t+=M.apply(String,i),i.length=0)}return i.length>0&&(t+=M.apply(String,i)),t}function z(e){let t=Array(e);for(let $=0;$<e;$++)t[$]=k();return c.freezeData?Object.freeze(t):t}function E(e){if(c.mapsAsObjects){let t={};for(let $=0;$<e;$++){let r=W();\"__proto__\"===r&&(r=\"__proto_\"),t[r]=k()}return t}{let n=new Map;for(let i=0;i<e;i++)n.set(k(),k());return n}}var M=String.fromCharCode;function R(e){let t=a,$=Array(e);for(let n=0;n<e;n++){let i=r[a++];if((128&i)>0){a=t;return}$[n]=i}return M.apply(String,$)}function C(e){if(e<4){if(e<2){if(0===e)return\"\";{let t=r[a++];if((128&t)>1){a-=1;return}return M(t)}}{let $=r[a++],n=r[a++];if((128&$)>0||(128&n)>0){a-=2;return}if(e<3)return M($,n);let i=r[a++];if((128&i)>0){a-=3;return}return M($,n,i)}}{let s=r[a++],f=r[a++],u=r[a++],l=r[a++];if((128&s)>0||(128&f)>0||(128&u)>0||(128&l)>0){a-=4;return}if(e<6){if(4===e)return M(s,f,u,l);{let o=r[a++];if((128&o)>0){a-=5;return}return M(s,f,u,l,o)}}if(e<8){let c=r[a++],x=r[a++];if((128&c)>0||(128&x)>0){a-=6;return}if(e<7)return M(s,f,u,l,c,x);let d=r[a++];if((128&d)>0){a-=7;return}return M(s,f,u,l,c,x,d)}{let h=r[a++],_=r[a++],p=r[a++],g=r[a++];if((128&h)>0||(128&_)>0||(128&p)>0||(128&g)>0){a-=8;return}if(e<10){if(8===e)return M(s,f,u,l,h,_,p,g);{let y=r[a++];if((128&y)>0){a-=9;return}return M(s,f,u,l,h,_,p,g,y)}}if(e<12){let b=r[a++],w=r[a++];if((128&b)>0||(128&w)>0){a-=10;return}if(e<11)return M(s,f,u,l,h,_,p,g,b,w);let m=r[a++];if((128&m)>0){a-=11;return}return M(s,f,u,l,h,_,p,g,b,w,m)}{let S=r[a++],U=r[a++],k=r[a++],I=r[a++];if((128&S)>0||(128&U)>0||(128&k)>0||(128&I)>0){a-=12;return}if(e<14){if(12===e)return M(s,f,u,l,h,_,p,g,S,U,k,I);{let A=r[a++];if((128&A)>0){a-=13;return}return M(s,f,u,l,h,_,p,g,S,U,k,I,A)}}{let v=r[a++],O=r[a++];if((128&v)>0||(128&O)>0){a-=14;return}if(e<15)return M(s,f,u,l,h,_,p,g,S,U,k,I,v,O);let T=r[a++];if((128&T)>0){a-=15;return}return M(s,f,u,l,h,_,p,g,S,U,k,I,v,O,T)}}}}}function j(){let e=r[a++],t;if(e<192)t=e-160;else switch(e){case 217:t=r[a++];break;case 218:t=l.getUint16(a),a+=2;break;case 219:t=l.getUint32(a),a+=4;break;default:throw Error(\"Expected string\")}return P(t)}function N(e){return c.copyBuffers?Uint8Array.prototype.slice.call(r,a,a+=e):r.subarray(a,a+=e)}function D(e){let t=r[a++];if(h[t]){let $;return h[t](r.subarray(a,$=a+=e),e=>{a=e;try{return k()}finally{a=$}})}throw Error(\"Unknown extension type \"+t)}var V=Array(4096);function W(){let e=r[a++];if(!(e>=160)||!(e<192))return a--,k().toString();if(e-=160,d>=a)return s.slice(a-x,(a+=e)-x);if(!(0==d&&n<180))return T(e);let t=(e<<5^(e>1?l.getUint16(a):e>0?r[a]:0))&4095,$=V[t],i=a,f=a+e-3,u,o=0;if($&&$.bytes==e){for(;i<f;){if((u=l.getUint32(i))!=$[o++]){i=1879048192;break}i+=4}for(f+=3;i<f;)if((u=r[i++])!=$[o++]){i=1879048192;break}if(i===f)return a=i,$.string;f-=3,i=a}for($=[],V[t]=$,$.bytes=e;i<f;)u=l.getUint32(i),$.push(u),i+=4;for(f+=3;i<f;)u=r[i++],$.push(u);let c=e<16?C(e):R(e);return null!=c?$.string=c:$.string=T(e)}let J=(e,t)=>{let $=k().map(e=>e.toString()),r=e;void 0!==t&&(e=e<32?-((t<<5)+e):(t<<5)+e,$.highByte=t);let n=i[e];return n&&(n.isShared||y)&&((i.restoreStructures||(i.restoreStructures=[]))[e]=n),i[e]=$,$.read=A($,r),$.read()};h[0]=()=>{},h[0].noBuffer=!0;let q={Error,TypeError,ReferenceError};h[101]=()=>{let e=k();return(q[e[0]]||Error)(e[1])},h[105]=e=>{let t=l.getUint32(a-4);u||(u=new Map);let $=r[a],n;n=$>=144&&$<160||220==$||221==$?[]:{};let i={target:n};u.set(t,i);let s=k();return i.used?Object.assign(n,s):(i.target=s,s)},h[112]=e=>{let t=l.getUint32(a-4),$=u.get(t);return $.used=!0,$.target},h[115]=()=>new Set(k());let K=[\"Int8\",\"Uint8\",\"Uint8Clamped\",\"Int16\",\"Uint16\",\"Int32\",\"Uint32\",\"Float32\",\"Float64\",\"BigInt64\",\"BigUint64\"].map(e=>e+\"Array\"),Y=\"object\"==typeof globalThis?globalThis:window;h[116]=e=>{let t=e[0],$=K[t];if(!$)throw Error(\"Could not find typed array for code \"+t);return new Y[$](Uint8Array.prototype.slice.call(e,1).buffer)},h[120]=()=>{let e=k();return RegExp(e[0],e[1])};let Z=[];function G(e){let t=n,$=a,o=x,h=d,_=s,p=u,g=f,b=new Uint8Array(r.slice(0,n)),w=i,m=i.slice(0,i.length),S=c,U=y,k=e();return n=t,a=$,x=o,d=h,s=_,u=p,f=g,r=b,y=U,(i=w).splice(0,i.length,...m),c=S,l=new DataView(r.buffer,r.byteOffset,r.byteLength),k}function H(){r=null,u=null,i=null}h[98]=e=>{let t=(e[0]<<24)+(e[1]<<16)+(e[2]<<8)+e[3],$=a;return a+=t-e.length,f=Z,(f=[j(),j()]).position0=0,f.position1=0,f.postBundlePosition=a,a=$,k()},h[255]=e=>4==e.length?new Date((16777216*e[0]+(e[1]<<16)+(e[2]<<8)+e[3])*1e3):8==e.length?new Date(((e[0]<<22)+(e[1]<<14)+(e[2]<<6)+(e[3]>>2))/1e6+((3&e[3])*4294967296+16777216*e[4]+(e[5]<<16)+(e[6]<<8)+e[7])*1e3):12==e.length?new Date(((e[0]<<24)+(e[1]<<16)+(e[2]<<8)+e[3])/1e6+((128&e[4]?-281474976710656:0)+1099511627776*e[6]+4294967296*e[7]+16777216*e[8]+(e[9]<<16)+(e[10]<<8)+e[11])*1e3):new Date(\"invalid\");let Q=Array(147);for(let X=0;X<256;X++)Q[X]=+(\"1e\"+Math.floor(45.15-.30103*X));var ee=new m({useRecords:!1});let et=ee.unpack,e$=ee.unpackMultiple,er=ee.unpack,en={NEVER:0,ALWAYS:1,DECIMAL_ROUND:3,DECIMAL_FIT:4},ei=new Float32Array(1),es=new Uint8Array(ei.buffer,0,4),ef;try{ef=new TextEncoder}catch(eu){}let el,eo,ea=\"undefined\"!=typeof Buffer,ec=ea?function(e){return Buffer.allocUnsafeSlow(e)}:Uint8Array,ex=ea?Buffer:Uint8Array,ed=ea?4294967296:2144337920,eh,e_,ep,eg=0,ey,e0=null,e2,e1=/[\\u0080-\\uFFFF]/,e6=Symbol(\"record-id\");class e4 extends m{constructor(e){super(e),this.offset=0;let t,$,r,n,i=ex.prototype.utf8Write?function(e,t){return eh.utf8Write(e,t,4294967295)}:!!ef&&!!ef.encodeInto&&function(e,t){return ef.encodeInto(e,eh.subarray(t)).written},s=this;e||(e={});let f=e&&e.sequential,u=e.structures||e.saveStructures,l=e.maxSharedStructures;if(null==l&&(l=u?32:0),l>8160)throw Error(\"Maximum maxSharedStructure is 8160\");e.structuredClone&&void 0==e.moreTypes&&(this.moreTypes=!0);let o=e.maxOwnStructures;null==o&&(o=u?32:64),this.structures||!1==e.useRecords||(this.structures=[]);let a=l>32||o+l>64,c=l+64,x=l+o+64;if(x>8256)throw Error(\"Maximum maxSharedStructure + maxOwnStructure is 8192\");let d=[],h=0,_=0;this.pack=this.encode=function(e,i){if(eh||(ep=(eh=new ec(8192)).dataView||(eh.dataView=new DataView(eh.buffer,0,8192)),eg=0),(ey=eh.length-10)-eg<2048?(ep=(eh=new ec(eh.length)).dataView||(eh.dataView=new DataView(eh.buffer,0,eh.length)),ey=eh.length-10,eg=0):eg=eg+7&2147483640,t=eg,i&eT&&(eg+=255&i),n=s.structuredClone?new Map:null,s.bundleStrings&&\"string\"!=typeof e?(e0=[]).size=1/0:e0=null,r=s.structures){r.uninitialized&&(r=s._mergeStructures(s.getStructures()));let u=r.sharedLength||0;if(u>l)throw Error(\"Shared structures is larger than maximum shared structures, try increasing maxSharedStructures to \"+r.sharedLength);if(!r.transitions){r.transitions=Object.create(null);for(let o=0;o<u;o++){let a=r[o];if(!a)continue;let c,x=r.transitions;for(let d=0,h=a.length;d<h;d++){let _=a[d];(c=x[_])||(c=x[_]=Object.create(null)),x=c}x[e6]=o+64}this.lastNamedStructuresLength=u}f||(r.nextId=u+64)}$&&($=!1);try{s.randomAccessStructure&&e&&e.constructor&&e.constructor===Object?A(e):y(e);let g=e0;if(e0&&eS(t,y,0),n&&n.idsToInsert){let b=n.idsToInsert.sort((e,t)=>e.offset>t.offset?1:-1),w=b.length,m=-1;for(;g&&w>0;){let S=b[--w].offset+t;S<g.stringsPosition+t&&-1===m&&(m=0),S>g.position+t?m>=0&&(m+=6):(m>=0&&(ep.setUint32(g.position+t,ep.getUint32(g.position+t)+m),m=-1),g=g.previous,w++)}m>=0&&g&&ep.setUint32(g.position+t,ep.getUint32(g.position+t)+m),(eg+=6*b.length)>ey&&U(eg),s.offset=eg;let k=function e(t,$){let r,n=6*$.length,i=t.length-n;for(;r=$.pop();){let s=r.offset,f=r.id;t.copyWithin(s+n,s,i);let u=s+(n-=6);t[u++]=214,t[u++]=105,t[u++]=f>>24,t[u++]=f>>16&255,t[u++]=f>>8&255,t[u++]=255&f,i=s}return t}(eh.subarray(t,eg),b);return n=null,k}if(s.offset=eg,i&ev)return eh.start=t,eh.end=eg,eh;return eh.subarray(t,eg)}finally{if(r&&(p(),$&&s.saveStructures)){var I,v;let O=r.sharedLength||0,T=eh.subarray(t,eg),B=(I=r,v=s,I.isCompatible=e=>{let t=!e||(v.lastNamedStructuresLength||0)===e.length;return t||v._mergeStructures(e),t},I);if(!1===s.saveStructures(B,B.isCompatible))return s.pack(e,i);return s.lastNamedStructuresLength=O,T}i&eO&&(eg=t)}};let p=()=>{_<10&&_++;let e=r.sharedLength||0;if(r.length>e&&!f&&(r.length=e),h>1e4)r.transitions=null,_=0,h=0,d.length>0&&(d=[]);else if(d.length>0&&!f){for(let t=0,$=d.length;t<$;t++)d[t][e6]=0;d=[]}},g=e=>{var t=e.length;t<16?eh[eg++]=144|t:t<65536?(eh[eg++]=220,eh[eg++]=t>>8,eh[eg++]=255&t):(eh[eg++]=221,ep.setUint32(eg,t),eg+=4);for(let $=0;$<t;$++)y(e[$])},y=e=>{eg>ey&&(eh=U(eg));var $,r=typeof e;if(\"string\"===r){let s=e.length;if(e0&&s>=4&&s<4096){if((e0.size+=s)>21760){let f,u=(e0[0]?3*e0[0].length+e0[1].length:0)+10;eg+u>ey&&(eh=U(eg+u));let l;e0.position?(l=e0,eh[eg]=200,eg+=3,eh[eg++]=98,f=eg-t,eg+=4,eS(t,y,0),ep.setUint16(f+t-3,eg-t-f)):(eh[eg++]=214,eh[eg++]=98,f=eg-t,eg+=4),(e0=[\"\",\"\"]).previous=l,e0.size=0,e0.position=f}let o=e1.test(e);e0[o?0:1]+=e,eh[eg++]=193,y(o?-s:s);return}let a;a=s<32?1:s<256?2:s<65536?3:5;let c=3*s;if(eg+c>ey&&(eh=U(eg+c)),s<64||!i){let x,d,h,_=eg+a;for(x=0;x<s;x++)(d=e.charCodeAt(x))<128?eh[_++]=d:d<2048?(eh[_++]=d>>6|192,eh[_++]=63&d|128):(64512&d)==55296&&(64512&(h=e.charCodeAt(x+1)))==56320?(d=65536+((1023&d)<<10)+(1023&h),x++,eh[_++]=d>>18|240,eh[_++]=d>>12&63|128,eh[_++]=d>>6&63|128,eh[_++]=63&d|128):(eh[_++]=d>>12|224,eh[_++]=d>>6&63|128,eh[_++]=63&d|128);$=_-eg-a}else $=i(e,eg+a);$<32?eh[eg++]=160|$:$<256?(a<2&&eh.copyWithin(eg+2,eg+1,eg+1+$),eh[eg++]=217,eh[eg++]=$):$<65536?(a<3&&eh.copyWithin(eg+3,eg+2,eg+2+$),eh[eg++]=218,eh[eg++]=$>>8,eh[eg++]=255&$):(a<5&&eh.copyWithin(eg+5,eg+3,eg+3+$),eh[eg++]=219,ep.setUint32(eg,$),eg+=4),eg+=$}else if(\"number\"===r){if(e>>>0===e)e<32||e<128&&!1===this.useRecords||e<64&&!this.randomAccessStructure?eh[eg++]=e:e<256?(eh[eg++]=204,eh[eg++]=e):e<65536?(eh[eg++]=205,eh[eg++]=e>>8,eh[eg++]=255&e):(eh[eg++]=206,ep.setUint32(eg,e),eg+=4);else if(e>>0===e)e>=-32?eh[eg++]=256+e:e>=-128?(eh[eg++]=208,eh[eg++]=e+256):e>=-32768?(eh[eg++]=209,ep.setInt16(eg,e),eg+=2):(eh[eg++]=210,ep.setInt32(eg,e),eg+=4);else{let p;if((p=this.useFloat32)>0&&e<4294967296&&e>=-2147483648){eh[eg++]=202,ep.setFloat32(eg,e);let b;if(p<4||(b=e*Q[(127&eh[eg])<<1|eh[eg+1]>>7])>>0===b){eg+=4;return}eg--}eh[eg++]=203,ep.setFloat64(eg,e),eg+=8}}else if(\"object\"===r||\"function\"===r){if(e){if(n){let w=n.get(e);if(w){if(!w.id){let m=n.idsToInsert||(n.idsToInsert=[]);w.id=m.push(w)}eh[eg++]=214,eh[eg++]=112,ep.setUint32(eg,w.id),eg+=4;return}n.set(e,{offset:eg-t})}let k=e.constructor;if(k===Object)S(e,!0);else if(k===Array)g(e);else if(k===Map){if(this.mapAsEmptyObject)eh[eg++]=128;else for(let[I,A]of(($=e.size)<16?eh[eg++]=128|$:$<65536?(eh[eg++]=222,eh[eg++]=$>>8,eh[eg++]=255&$):(eh[eg++]=223,ep.setUint32(eg,$),eg+=4),e))y(I),y(A)}else{for(let v=0,O=el.length;v<O;v++)if(e instanceof eo[v]){let T=el[v];if(T.write){T.type&&(eh[eg++]=212,eh[eg++]=T.type,eh[eg++]=0);let B=T.write.call(this,e);B===e?Array.isArray(e)?g(e):S(e):y(B);return}let L=eh,F=ep,P=eg;eh=null;let z;try{z=T.pack.call(this,e,e=>(eh=L,L=null,(eg+=e)>ey&&U(eg),{target:eh,targetView:ep,position:eg-e}),y)}finally{L&&(eh=L,ep=F,eg=P,ey=eh.length-10)}z&&(z.length+eg>ey&&U(z.length+eg),eg=em(z,eh,eg,T.type));return}if(Array.isArray(e))g(e);else{if(e.toJSON){let E=e.toJSON();if(E!==e)return y(E)}if(\"function\"===r)return y(this.writeFunction&&this.writeFunction(e));S(e,!e.hasOwnProperty)}}}else eh[eg++]=192}else if(\"boolean\"===r)eh[eg++]=e?195:194;else if(\"bigint\"===r){if(e<BigInt(1)<<BigInt(63)&&e>=-(BigInt(1)<<BigInt(63)))eh[eg++]=211,ep.setBigInt64(eg,e);else if(e<BigInt(1)<<BigInt(64)&&e>0)eh[eg++]=207,ep.setBigUint64(eg,e);else if(this.largeBigIntToFloat)eh[eg++]=203,ep.setFloat64(eg,Number(e));else throw RangeError(e+\" was too large to fit in MessagePack 64-bit integer format, set largeBigIntToFloat to convert to float-64\");eg+=8}else if(\"undefined\"===r)this.encodeUndefinedAsNil?eh[eg++]=192:(eh[eg++]=212,eh[eg++]=0,eh[eg++]=0);else throw Error(\"Unknown type: \"+r)},b=this.variableMapSize||this.coercibleKeyAsNumber?e=>{let t=Object.keys(e),$=t.length;$<16?eh[eg++]=128|$:$<65536?(eh[eg++]=222,eh[eg++]=$>>8,eh[eg++]=255&$):(eh[eg++]=223,ep.setUint32(eg,$),eg+=4);let r;if(this.coercibleKeyAsNumber)for(let n=0;n<$;n++){let i=Number(r=t[n]);y(isNaN(i)?r:i),y(e[r])}else for(let s=0;s<$;s++)y(r=t[s]),y(e[r])}:(e,$)=>{eh[eg++]=222;let r=eg-t;eg+=2;let n=0;for(let i in e)($||e.hasOwnProperty(i))&&(y(i),y(e[i]),n++);eh[r+++t]=n>>8,eh[r+t]=255&n},w=!1===this.useRecords?b:e.progressiveRecords&&!a?(e,$)=>{let n,i=r.transitions||(r.transitions=Object.create(null)),s=eg++-t,f;for(let u in e)if($||e.hasOwnProperty(u)){if(n=i[u])i=n;else{let l=Object.keys(e),o=i;i=r.transitions;let a=0;for(let c=0,x=l.length;c<x;c++){let d=l[c];!(n=i[d])&&(n=i[d]=Object.create(null),a++),i=n}s+t+1==eg?(eg--,k(i,l,a)):I(i,l,s,a),f=!0,i=o[u]}y(e[u])}if(!f){let h=i[e6];h?eh[s+t]=h:I(i,Object.keys(e),s,0)}}:(e,t)=>{let $,n=r.transitions||(r.transitions=Object.create(null)),i=0;for(let s in e)(t||e.hasOwnProperty(s))&&(!($=n[s])&&($=n[s]=Object.create(null),i++),n=$);let f=n[e6];for(let u in f?f>=96&&a?(eh[eg++]=(31&(f-=96))+96,eh[eg++]=f>>5):eh[eg++]=f:k(n,n.__keys__||Object.keys(e),i),e)(t||e.hasOwnProperty(u))&&y(e[u])},m=\"function\"==typeof this.useRecords&&this.useRecords,S=m?(e,t)=>{m(e)?w(e,t):b(e,t)}:w,U=e=>{let $;if(e>16777216){if(e-t>ed)throw Error(\"Packed buffer would be larger than maximum buffer size\");$=Math.min(ed,4096*Math.round(Math.max((e-t)*(e>67108864?1.25:2),4194304)/4096))}else $=(Math.max(e-t<<2,eh.length-1)>>12)+1<<12;let r=new ec($);return ep=r.dataView||(r.dataView=new DataView(r.buffer,0,$)),e=Math.min(e,eh.length),eh.copy?eh.copy(r,0,t,e):r.set(eh.slice(t,e)),eg-=t,t=0,ey=r.length-10,eh=r},k=(e,t,n)=>{let i=r.nextId;i||(i=64),i<c&&this.shouldShareStructure&&!this.shouldShareStructure(t)?((i=r.nextOwnId)<x||(i=c),r.nextOwnId=i+1):(i>=x&&(i=c),r.nextId=i+1);let s=t.highByte=i>=96&&a?i-96>>5:-1;e[e6]=i,e.__keys__=t,r[i-64]=t,i<c?(t.isShared=!0,r.sharedLength=i-63,$=!0,s>=0?(eh[eg++]=(31&i)+96,eh[eg++]=s):eh[eg++]=i):(s>=0?(eh[eg++]=213,eh[eg++]=114,eh[eg++]=(31&i)+96,eh[eg++]=s):(eh[eg++]=212,eh[eg++]=114,eh[eg++]=i),n&&(h+=_*n),d.length>=o&&(d.shift()[e6]=0),d.push(e),y(t))},I=(e,$,r,n)=>{let i=eh,s=eg,f=ey,u=t;eh=e_,eg=0,t=0,eh||(e_=eh=new ec(8192)),ey=eh.length-10,k(e,$,n),e_=eh;let l=eg;if(eh=i,eg=s,ey=f,t=u,l>1){let o=eg+l-1;o>ey&&U(o);let a=r+t;eh.copyWithin(a+l,a+1,eg),eh.set(e_.slice(0,l),a),eg=o}else eh[r+t]=e_[0]},A=(e,n)=>{let i=e2(e,eh,t,eg,r,U,(e,t,r)=>{if(r)return $=!0;eg=t;let n=eh;return(y(e),p(),n!==eh)?{position:eg,targetView:ep,target:eh}:eg},this);if(0===i)return S(e,!0);eg=i}}useBuffer(e){eh=e,ep=new DataView(eh.buffer,eh.byteOffset,eh.byteLength),eg=0}clearSharedData(){this.structures&&(this.structures=[]),this.typedStructs&&(this.typedStructs=[])}}function eb(e,t,$,r){let n=e.byteLength;if(n+1<256){var{target:i,position:s}=$(4+n);i[s++]=199,i[s++]=n+1}else if(n+1<65536){var{target:i,position:s}=$(5+n);i[s++]=200,i[s++]=n+1>>8,i[s++]=n+1&255}else{var{target:i,position:s,targetView:f}=$(7+n);i[s++]=201,f.setUint32(s,n+1),s+=4}i[s++]=116,i[s++]=t,i.set(new Uint8Array(e.buffer,e.byteOffset,e.byteLength),s)}function ew(e,t){let $=e.byteLength;if($<256){var r,n,{target:r,position:n}=t($+2);r[n++]=196,r[n++]=$}else if($<65536){var{target:r,position:n}=t($+3);r[n++]=197,r[n++]=$>>8,r[n++]=255&$}else{var{target:r,position:n,targetView:i}=t($+5);r[n++]=198,i.setUint32(n,$),n+=4}r.set(e,n)}function em(e,t,$,r){let n=e.length;switch(n){case 1:t[$++]=212;break;case 2:t[$++]=213;break;case 4:t[$++]=214;break;case 8:t[$++]=215;break;case 16:t[$++]=216;break;default:n<256?(t[$++]=199,t[$++]=n):n<65536?(t[$++]=200,t[$++]=n>>8,t[$++]=255&n):(t[$++]=201,t[$++]=n>>24,t[$++]=n>>16&255,t[$++]=n>>8&255,t[$++]=255&n)}return t[$++]=r,t.set(e,$),$+=n}function eS(e,t,$){if(e0.length>0){ep.setUint32(e0.position+e,eg+$-e0.position-e),e0.stringsPosition=eg-e;let r=e0;e0=null,t(r[0]),t(r[1])}}eo=[Date,Set,Error,RegExp,ArrayBuffer,Object.getPrototypeOf(Uint8Array.prototype).constructor,p],el=[{pack(e,t,$){let r=e.getTime()/1e3;if((this.useTimestamp32||0===e.getMilliseconds())&&r>=0&&r<4294967296){let{target:n,targetView:i,position:s}=t(6);n[s++]=214,n[s++]=255,i.setUint32(s,r)}else if(r>0&&r<4294967296){let{target:f,targetView:u,position:l}=t(10);f[l++]=215,f[l++]=255,u.setUint32(l,4e6*e.getMilliseconds()+(r/1e3/4294967296>>0)),u.setUint32(l+4,r)}else if(isNaN(r)){if(this.onInvalidDate)return t(0),$(this.onInvalidDate());let{target:o,targetView:a,position:c}=t(3);o[c++]=212,o[c++]=255,o[c++]=255}else{let{target:x,targetView:d,position:h}=t(15);x[h++]=199,x[h++]=12,x[h++]=255,d.setUint32(h,1e6*e.getMilliseconds()),d.setBigInt64(h+4,BigInt(Math.floor(r)))}}},{pack(e,t,$){if(this.setAsEmptyObject)return t(0),$({});let r=Array.from(e),{target:n,position:i}=t(this.moreTypes?3:0);this.moreTypes&&(n[i++]=212,n[i++]=115,n[i++]=0),$(r)}},{pack(e,t,$){let{target:r,position:n}=t(this.moreTypes?3:0);this.moreTypes&&(r[n++]=212,r[n++]=101,r[n++]=0),$([e.name,e.message])}},{pack(e,t,$){let{target:r,position:n}=t(this.moreTypes?3:0);this.moreTypes&&(r[n++]=212,r[n++]=120,r[n++]=0),$([e.source,e.flags])}},{pack(e,t){this.moreTypes?eb(e,16,t):ew(ea?Buffer.from(e):new Uint8Array(e),t)}},{pack(e,t){let $=e.constructor;$!==ex&&this.moreTypes?eb(e,K.indexOf($.name),t):ew(e,t)}},{pack(e,t){let{target:$,position:r}=t(1);$[r]=193}}];let eU=new e4({useRecords:!1}),ek=eU.pack,eI=eU.pack,{NEVER:e8,ALWAYS:eA,DECIMAL_ROUND:e5,DECIMAL_FIT:e3}=en,ev=512,eO=1024,eT=2048;async function*eB(e,t){let $=new e4(t);for await(let r of e)yield $.pack(r)}let eL=function e(t,$={}){if(!t||\"object\"!=typeof t)throw Error(\"first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a promise\");let r=new m($),n,i=e=>{let t;n&&(e=Buffer.concat([n,e]),n=void 0);try{t=r.unpackMultiple(e)}catch($){if($.incomplete)n=e.slice($.lastPosition),t=$.values;else throw $}return t};return\"function\"==typeof t[Symbol.iterator]?function* e(){for(let $ of t)yield*i($)}():\"function\"==typeof t[Symbol.asyncIterator]?async function* e(){for await(let $ of t)yield*i($)}():void 0},eF=function e(t,$={}){if(t&&\"object\"==typeof t){if(\"function\"==typeof t[Symbol.iterator])return function* e(t,$){let r=new e4($);for(let n of t)yield r.pack(n)}(t,$);if(\"function\"==typeof t.then||\"function\"==typeof t[Symbol.asyncIterator])return eB(t,$);else throw Error(\"first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a Promise\")}throw Error(\"first argument must be an Iterable, Async Iterable, or a Promise for an Async Iterable\")};e.ALWAYS=eA,e.C1=g,e.DECIMAL_FIT=e3,e.DECIMAL_ROUND=e5,e.Decoder=m,e.Encoder=e4,e.FLOAT32_OPTIONS=en,e.NEVER=e8,e.Packr=e4,e.REUSE_BUFFER_MODE=ev,e.Unpackr=m,e.addExtension=function e(t){var $;if(t.Class){if(!t.pack&&!t.write)throw Error(\"Extension has no pack or write function\");if(t.pack&&!t.type)throw Error(\"Extension has no type (numeric code to identify the extension)\");eo.unshift(t.Class),el.unshift(t)}($=t).unpack?h[$.type]=$.unpack:h[$.type]=$},e.clearSource=H,e.decode=er,e.decodeIter=eL,e.encode=eI,e.encodeIter=eF,e.isNativeAccelerationEnabled=!1,e.mapsAsObjects=!0,e.pack=ek,e.roundFloat32=function e(t){ei[0]=t;let $=Q[(127&es[3])<<1|es[2]>>7];return($*t+(t>0?.5:-.5)>>0)/$},e.unpack=et,e.unpackMultiple=e$,e.useRecords=!1});\n;// ./client/utils.js\n\r\nconst until = (condition, checkInterval=400) => {\r\n    if(!!condition()) return true;\r\n    return new Promise(resolve => {\r\n        let interval = setInterval(() => {\r\n            if (!condition()) return;\r\n            clearInterval(interval);\r\n            resolve();\r\n        }, checkInterval)\r\n    })\r\n}\r\n\r\nconst SCROLL_PARAMS = Object.freeze({\r\n    sensitivity: 10 * 1300,\r\n    minAvgSpeed: 0.5 * 1300,\r\n    maxScrollTime: 150,\r\n    edgeMargin: 117 // out of 900\r\n});\r\n\r\nconst environment = shared/* default */.A.environment = typeof location === 'undefined' ? 'server' : ((location.origin.endsWith('8080') || location.href.endsWith('editor')) ? 'editor' : 'client');\r\nconst isProd = shared/* default */.A.isProd = typeof location === 'undefined' ? true : location.origin.startsWith('http://localhost') ? false : true; \r\n\r\nif(isProd === false){\r\n    window.s = {};\r\n    setInterval(() => {\r\n        for(let key in shared/* default */.A){ window.s[key] = shared/* default */.A[key]; }\r\n    }, 1000)\r\n}\r\n\r\nconst memoizedColors = {};\r\n\r\nshared/* default */.A.blendColor = blendColor;\r\nfunction blendColor(color1, color2, t) {\r\n\tconst memoizedIndex = color1 + '_' + color2 + '_' + t;\r\n\tif (memoizedColors[memoizedIndex] !== undefined) {\r\n\t\treturn memoizedColors[memoizedIndex];\r\n\t}\r\n\tconst rgb1 = {\r\n\t\tr: parseInt(color1.slice(1, 3), 16),\r\n\t\tg: parseInt(color1.slice(3, 5), 16),\r\n\t\tb: parseInt(color1.slice(5, 7), 16)\r\n\t}\r\n\tconst rgb2 = {\r\n\t\tr: parseInt(color2.slice(1, 3), 16),\r\n\t\tg: parseInt(color2.slice(3, 5), 16),\r\n\t\tb: parseInt(color2.slice(5, 7), 16)\r\n\t}\r\n\r\n\tconst result = rgbToHex(Math.floor(rgb1.r * (1 - t) + rgb2.r * t), Math.floor(rgb1.g * (1 - t) + rgb2.g * t), Math.floor(rgb1.b * (1 - t) + rgb2.b * t))\r\n\tmemoizedColors[memoizedIndex] = result;\r\n\treturn result;\r\n}\r\n\r\nfunction rgbToHex(r, g, b) {\r\n\treturn \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nfunction componentToHex(c) {\r\n\tvar hex = c.toString(16);\r\n\treturn hex.length == 1 ? \"0\" + hex : hex;\r\n}\r\n\r\n// function shortAngleDist(a0,a1) {\r\n// \tconst max = Math.PI*2;\r\n// \tconst da = (a1 - a0) % max;\r\n// \treturn 2*da % max - da;\r\n// }\r\n\r\nconst mapsBeatenStr = environment === 'server' ? null : localStorage.getItem('mapsBeaten');\r\nshared/* default */.A.mapsBeaten = {};\r\nif(mapsBeatenStr !== null){\r\n    const split = mapsBeatenStr.split('|');\r\n    for(let i = 0; i < split.length; i++){\r\n        shared/* default */.A.mapsBeaten[split[i]] = true;\r\n    }\r\n}\r\n\r\nshared/* default */.A.decorationImgs = {};\r\nif(typeof Image !== 'undefined'){\r\n\tshared/* default */.A.arrowImg = new Image();\r\n\tshared/* default */.A.starImg = new Image();\r\n\tshared/* default */.A.starImg.crossOrigin = \"Anonymous\";\r\n\tif(environment === 'editor'){\r\n\t\t// editor\r\n\t\t(async() => {\r\n\t\t\tconst exps = await __webpack_require__.e(/* import() */ 254).then(__webpack_require__.bind(__webpack_require__, 230));\r\n\t\t\tshared/* default */.A.arrowImg = exps.default.arrowImg;\r\n\t\t\tshared/* default */.A.starImg = exps.default.starImg;\r\n\t\t})();\r\n\t} else {\r\n\t\t// client\r\n\t\tshared/* default */.A.arrowImg.src = './gfx/arrow.png';\r\n\t\tshared/* default */.A.starImg.src = 'https://upload.wikimedia.org/wikipedia/commons/c/c3/A_Snapshot_of_the_Jewel_Box_cluster_with_the_ESO_VLT.jpg';\r\n\t}\r\n} else {\r\n\t// server\r\n\tshared/* default */.A.arrowImg = shared/* default */.A.starImg = {};\r\n}\r\n\r\nwindow.colourRgb = (r,g,b) => {\r\n\tr = Math.max(Math.min(Number(r), 100), 0) * 2.55;\r\n\tg = Math.max(Math.min(Number(g), 100), 0) * 2.55;\r\n\tb = Math.max(Math.min(Number(b), 100), 0) * 2.55;\r\n\tr = ('0' + (Math.round(r) || 0).toString(16)).slice(-2);\r\n\tg = ('0' + (Math.round(g) || 0).toString(16)).slice(-2);\r\n\tb = ('0' + (Math.round(b) || 0).toString(16)).slice(-2);\r\n\treturn '#' + r + g + b;\r\n}\r\n\r\nif(environment === 'server') global.colourRgb = window.colourRgb;\r\n\r\nwindow.md = (a) => {return (a !== a || a === undefined || a === null) ? 0 : a;}; // make defined\r\nwindow.makeNumber = (a) => {return Number.isFinite(a) === true ? a : 0;};\r\nwindow.makeNotNaN = (a) => {return (a === a) ? a : 0;};\r\nwindow.makeNotNull = (a) => {return a === null ? 0 : a};\r\nwindow.makeNotUndefined = (a) => {return a === undefined ? 0 : a};\r\nwindow.rlt = (a) => {shared/* default */.A.loopTrap = 1000; return a;};// reset loop trap\r\nwindow.makeType = (a,typeArr) => {\r\n\tif(typeArr.includes(shared/* default */.A.generateConnectionType(a)) === true)return a;\r\n\treturn defaultTypeMap[typeof a];\r\n}\r\nshared/* default */.A.generateConnectionType = (val) => {\r\n\tconst type = typeof val;\r\n\tif(type === 'number') return 'Number';\r\n\tif(type === 'string') {\r\n\t  // if(val[0] === '#') return 'Colour';\r\n\t  return ['String', 'Colour'];\r\n\t}\r\n\tif(type === 'boolean') return 'Boolean';\r\n\tif(Array.isArray(val) === true) return 'Array';\r\n\treturn null;\r\n}\r\nconst defaultTypeMap = {undefined: 0, string: '', boolean: true/*glass is half full*/, number: 0, object: []/*exclusively used for blockly, where arrays are the only object*/};\r\n\r\nconst encoder = new TextEncoder();\r\nfunction encodeAtPosition(string, u8array, position) {\r\n\treturn encoder.encodeInto(\r\n\t\tstring,\r\n\t\tposition ? u8array.subarray(position | 0) : u8array,\r\n\t);\r\n}\r\nconst decoder = new TextDecoder();\r\nfunction decodeText(u8array, startPos=0, endPos=Infinity){\r\n\treturn decoder.decode(u8array).slice(startPos, endPos);\r\n}\r\n\r\n\r\nfunction genBannedWordsRegex(...args) {\r\n  let parsed = [];\r\n  args.forEach(e => {\r\n    parsed.push(\"(\\\\S*\" +\r\n      e.replace(/[aа]/gmi, \"[aа4]\")\r\n      .replace(/[cс]/gmi, \"[cс]\")\r\n      .replace(/[eеё]/gmi, \"[eеё3]\")\r\n      .replace(/[oо]/gmi, \"[oо0]\")\r\n      .replace(/[pр]/gmi, \"[pр]\")\r\n      .replace(/[tт]/gmi, \"[tт]\")\r\n      .replace(/[yу]/gmi, \"[yу]\")\r\n      .replace(/[hн]/gmi, \"[hн]\")\r\n      .replace(/[kк]/gmi, \"[kк]\")\r\n      .replace(/[xх]/gmi, \"[xх]\")\r\n      .replace(/[bв]/gmi, \"[bв]\")\r\n      .replace(/[nп]/gmi, \"[nп]\")\r\n      .replace(/[mм]/gmi, \"[mм]\")\r\n      .replace(/[i1]/gmi, \"[i1]\")\r\n      .replace(/[ _\\-]/gmi, \"[ _\\\\-]\") +\r\n      \"\\\\S*)\");\r\n  });\r\n  return new RegExp(parsed.join(\"|\"), \"gmi\"); \r\n}\r\nlet bannedWordsRegex = genBannedWordsRegex(\"nigger\", \"nigga\", \"chink\", \"ching chong\", \"onrender\", \"trash version\", \"evades.\", \"zerotix\", \"zero tix\", \"zero\", \"0tix\", \"cunt\", \"asshole\", \"porn\", \"hentai\", \"slut\", \"whore\", \"faggot\", \"on render\", \"fake evades\", \"real evades\")\r\n\r\nfunction filterText(text){\r\n\treturn text.replace(bannedWordsRegex, \"[https://evadesx.io/]\");\r\n}\r\n\r\nfunction stringHTMLSafe(str) {\r\n\treturn str.replace(/&/g, '&amp;')\r\n\t\t.replace(/ /g, '&nbsp;')\r\n\t\t.replace(/</g, '&lt;')\r\n\t\t.replace(/>/g, '&gt;');\r\n}\r\n\r\n/* harmony default export */ const utils = ({ until, SCROLL_PARAMS, blendColor, environment, encodeAtPosition, decodeText, stringHTMLSafe, filterText });\n;// ./eXclient/networking.js\n\r\n\r\n\r\n// used for decoding chat messages\r\n\r\nconst {decodeText: networking_decodeText, filterText: networking_filterText, stringHTMLSafe: networking_stringHTMLSafe} = utils;\r\n\r\nconst HOST = location.origin.replace(/^http/, 'ws');\r\nlet ws, nextMsgFlag, gameStarted = false, canLoad=false;\r\nlet syncMapFn=undefined, lateSyncMap=false;\r\nshared/* default */.A.mapEntryTime = 0;\r\nshared/* default */.A.disconnected = false;\r\nconst messageQueue = [];\r\nshared/* default */.A.send = (data) => {\r\n    messageQueue.push(data);\r\n}\r\n\r\nfunction initWS() {\r\n    ws = new WebSocket(HOST);\r\n    ws.binaryType = \"arraybuffer\"; // sends messages with binary and stuff o-o yes i am very smart\r\n\r\n    ws.addEventListener(\"message\", function (data) {\r\n        if(nextMsgFlag !== undefined){\r\n            messageMap[nextMsgFlag](data.data);\r\n            nextMsgFlag = undefined;\r\n            return;\r\n        }\r\n        const decoded = new Uint8Array(data.data);\r\n        if(messageMap[decoded[0]] === undefined) console.log(decoded);\r\n        messageMap[decoded[0]](decoded);\r\n    });\r\n\r\n    ws.onopen = () => {\r\n        console.log('connected to the server!');\r\n        shared/* default */.A.send = (data) => {\r\n            ws.send(data);\r\n        }\r\n        for(let i = 0; i < messageQueue.length; i++){\r\n            shared/* default */.A.send(messageQueue[i]);\r\n        }\r\n    }\r\n\r\n    ws.onclose = () => {\r\n        if(shared/* default */.A.username !== null) shared/* default */.A.disconnected = true;\r\n        console.log('Websocket closed.');// Attempting to reconnect...\r\n        // TODO: reconnection.\r\n        shared/* default */.A.send = () => {};\r\n    }\r\n}\r\n\r\nif(shared/* default */.A.isEditor === false) initWS();\r\n\r\nshared/* default */.A.changeMap = function changeMap(url=`/maps/hub`, method='GET', headers=new Headers(), onRejected=(url)=>{console.error(`failed to load map url ${url}`);}){\r\n    lateSyncMap = false; shared/* default */.A.mapEntryTime = window.frames;\r\n    headers.append('id', shared/* default */.A.authId);\r\n    fetch(location.origin + url, {method, headers}).then(async (d) => {\r\n        const levelData = await d.text();\r\n        if(levelData === 'n') {onRejected(url); return;}\r\n        const [players, selfId] = JSON.parse(d.headers.get(\"X-Init-Data\"));\r\n\r\n        const prevScript = document.getElementById('gameScript');\r\n        if(prevScript !== null) prevScript.remove();\r\n\r\n        shared/* default */.A.resetGame();\r\n        shared/* default */.A.mapPath = url;\r\n        shared/* default */.A.players.length = shared/* default */.A.obstacles.length = 0;\r\n\r\n        canLoad = true;\r\n        const s = document.createElement('script');\r\n        s.id = \"gameScript\";\r\n        s.text = levelData;\r\n        document.body.appendChild(s);\r\n\r\n        for(let i = 0; i < players.length; i++){\r\n            if(players[i] === undefined || players[i] === null) {shared/* default */.A.players[i] = undefined; continue;}\r\n            const playerData = players[i];\r\n            const p = createPlayerFromData(playerData);\r\n            shared/* default */.A.players[i] = p;\r\n        }\r\n\r\n        shared/* default */.A.selfId = selfId;\r\n\r\n        shared/* default */.A.won = false;\r\n        if(!gameStarted) {\r\n            shared/* default */.A.startGame();\r\n            gameStarted = true;\r\n        } else {\r\n            shared/* default */.A.respawnPlayer();\r\n        }\r\n    })\r\n}\r\n\r\nwindow.loadMap = (I) => {\r\n    if(canLoad === false) return;\r\n    canLoad = false;\r\n    I(shared/* default */.A);\r\n\r\n    if(syncMapFn !== undefined){\r\n        syncMapFn();\r\n        syncMapFn = undefined;\r\n    } else lateSyncMap = true;\r\n}\r\n\r\nconst customMapDifficulties = {};\r\nfunction addToLeaderboard(playerName, mapName){\r\n    let mapDiv = document.getElementById(`leaderboard-map-${mapName}`);\r\n    if(mapDiv === null){\r\n        // create mapDiv\r\n        mapDiv = document.createElement('div');\r\n        mapDiv.classList.add(\"lb-group\");\r\n        mapDiv.id = `leaderboard-map-${mapName}`;\r\n\r\n        const difficulty = shared/* default */.A.mapDifficulties[mapName] ?? customMapDifficulties[mapName] ?? 0;\r\n        const displayMapName = networking_stringHTMLSafe(shared/* default */.A.mapLeaderboardNames[mapName] ?? mapName);\r\n\r\n        const mapNameDiv = document.createElement('span');\r\n        mapDiv.appendChild(mapNameDiv);\r\n        mapNameDiv.classList.add('lb-name');\r\n        mapNameDiv.style.color = (mapName === 'winroom') ? '#3528e0' : shared/* default */.A.difficultyImageColors[Math.floor(difficulty)];\r\n        mapNameDiv.innerHTML = displayMapName;\r\n\r\n        leaderboard.appendChild(mapDiv);\r\n    }\r\n\r\n    // add the player to the mapDiv\r\n    const playerContainer = document.createElement('div');\r\n    playerContainer.id = `player-container-${playerName}-${mapName}`;\r\n    playerContainer.classList.add('lb-players');\r\n    mapDiv.appendChild(playerContainer);\r\n\r\n    const playerDiv = document.createElement('div');\r\n    playerContainer.appendChild(playerDiv);\r\n\r\n    const playerNameDiv = document.createElement('span');\r\n    playerNameDiv.classList.add('player-name');\r\n    playerNameDiv.innerHTML = playerName;\r\n    playerDiv.appendChild(playerNameDiv);\r\n}\r\n\r\nshared/* default */.A.addChatMessage = (message, type) => {\r\n    const div = document.createElement('div');\r\n    if (type !== 'system') div.classList.add('chat-message');\r\n    else div.classList.add('system-message');\r\n\r\n    const chatPrefixMap = {\r\n        normal: '',\r\n        system: '<span class=\"rainbow\">[SERVER]</span>',\r\n        dev: '<span class=\"rainbow\">[DEV]</span>',\r\n        guest: '<span class=\"guest\">'\r\n    };\r\n\r\n    const chatSuffixMap = {\r\n        normal: '',\r\n        system: '',\r\n        dev: '',\r\n        guest: '</span>'\r\n    };\r\n\r\n    div.innerHTML = chatPrefixMap[type] + message + chatSuffixMap[type];\r\n    const chatMessageDiv = document.querySelector('.chat-div');\r\n    chatMessageDiv.appendChild(div);\r\n    chatMessageDiv.scrollTop = chatMessageDiv.scrollHeight;\r\n}\r\n\r\n// first byte encodes the message type\r\nconst leaderboard = document.querySelector('.leaderboard-div');\r\nconst messageMap = [\r\n    // 0 - set auth id (not clientid)\r\n    (data) => {\r\n        const u32 = new Uint32Array(data.buffer);\r\n        shared/* default */.A.authId = u32[1];\r\n\r\n        // TEMP\r\n        const username = shared/* default */.A.username = localStorage.getItem('username');\r\n        const password = localStorage.getItem('password');\r\n        if(username === null || password === null){\r\n            // get tutorial\r\n            window.onkeydown({code: 'KeyZ', repeat: false, type: 'keydown'});\r\n            shared/* default */.A.changeMap('/tutorial');\r\n        } else {\r\n            // log in\r\n            const headers = new Headers();\r\n            headers.append('u', username);\r\n            headers.append('p', password);\r\n            shared/* default */.A.changeMap('/join', 'POST', headers);\r\n        }\r\n    },\r\n    // 1 - reload page (for hot refresh)\r\n    () => {\r\n        location.reload();\r\n    },\r\n    // 2 - change to create account page\r\n    (data) => {\r\n        location.replace(location.origin + '/create');\r\n    },\r\n    // 3 - flag next message as type\r\n    (data) => {\r\n        nextMsgFlag = data[1];\r\n    },\r\n    // 4 - player x and y\r\n    (data) => {\r\n        const raw = data.buffer;\r\n        const u16 = new Uint16Array(raw);\r\n        const id = u16[1];\r\n\r\n        if(id === shared/* default */.A.selfId) return;\r\n\r\n        const f32 = new Float32Array(raw);\r\n        shared/* default */.A.players[id].pos.x = f32[1];\r\n        shared/* default */.A.players[id].pos.y = f32[2];\r\n    },\r\n    // 5 - new player\r\n    (data) => {\r\n        let p = createPlayerFromData(msgpackr.unpack(data));\r\n        shared/* default */.A.players[p.id] = p;\r\n    },\r\n    // 6 - remove player\r\n    (data) => {\r\n        let id = new Uint16Array(data.buffer)[1];\r\n        shared/* default */.A.players[id] = undefined;\r\n    },\r\n    // 7 - chat message\r\n    (data) => {\r\n        shared/* default */.A.addChatMessage(\r\n            networking_stringHTMLSafe(networking_filterText(networking_decodeText(data, 2))),\r\n            ['normal', 'system', 'dev', 'guest'][data[1]]\r\n        )\r\n    },\r\n    // 8 - toggle godmode\r\n    (data) => {\r\n        const u16 = new Uint16Array(data.buffer);\r\n        const id = u16[1];\r\n\r\n        if(id === shared/* default */.A.selfId) return;\r\n\r\n        shared/* default */.A.players[id].god = data[1] === 1;\r\n    },\r\n    // 9 - set ship angle\r\n    (data) => {\r\n        const u16 = new Uint16Array(data.buffer);\r\n        const id = u16[1];\r\n        if(id === shared/* default */.A.selfId) return;\r\n\r\n        const f32 = new Float32Array(data.buffer);\r\n        shared/* default */.A.players[id].ship = true;\r\n        shared/* default */.A.players[id].shipAngle = f32[1];\r\n    },\r\n    // 10 - disable ship\r\n    (data) => {\r\n        const u16 = new Uint16Array(data.buffer);\r\n        const id = u16[1];\r\n        if(id === shared/* default */.A.selfId) return;\r\n\r\n        shared/* default */.A.players[id].ship = false;\r\n    },\r\n    // 11 - set grapple\r\n    (data) => {\r\n        const u16 = new Uint16Array(data.buffer);\r\n        const id = u16[1];\r\n        if(id === shared/* default */.A.selfId) return;\r\n\r\n        const f32 = new Float32Array(data.buffer);\r\n        shared/* default */.A.players[id].grapple = true;\r\n        shared/* default */.A.players[id].grappleX = f32[1];\r\n        shared/* default */.A.players[id].grappleY = f32[2];\r\n    },\r\n    // 13 - disable grapple\r\n    (data) => {\r\n        const u16 = new Uint16Array(data.buffer);\r\n        const id = u16[1];\r\n        if(id === shared/* default */.A.selfId) return;\r\n\r\n        shared/* default */.A.players[id].grapple = false;\r\n    },\r\n    // 13 - set death timer\r\n    (data) => {\r\n        const u16 = new Uint16Array(data.buffer);\r\n        const id = u16[1];\r\n        if(id === shared/* default */.A.selfId) return;\r\n\r\n        const f32 = new Float32Array(data.buffer);\r\n        shared/* default */.A.players[id].deathTimer = true;\r\n        shared/* default */.A.players[id].deathTime = f32[1];\r\n    },\r\n    // 14 - disable death timer\r\n    (data) => {\r\n        const u16 = new Uint16Array(data.buffer);\r\n        const id = u16[1];\r\n        if(id === shared/* default */.A.selfId) return;\r\n\r\n        shared/* default */.A.players[id].deathTimer = false;\r\n    },\r\n    // 15 - change dead\r\n    (data) => {\r\n        const u16 = new Uint16Array(data.buffer);\r\n        const id = u16[1];\r\n        if(id === shared/* default */.A.selfId) return;\r\n\r\n        shared/* default */.A.players[id].dead = data[1] === 1;\r\n    },\r\n    // 16 - add to leaderboard\r\n    (data) => {\r\n        // [16, len, mapName, playerName]\r\n        const len = data[1];\r\n        const mapName = networking_decodeText(data, 2, len+2);\r\n        const playerName = networking_stringHTMLSafe(networking_decodeText(data, len+2));\r\n        addToLeaderboard(playerName, mapName);\r\n    },\r\n    // 17 - remove from leaderboard\r\n    (data) => {\r\n        // [17, len, mapName, playerName]\r\n        const len = data[1];\r\n        const mapName = networking_decodeText(data, 2, len+2);\r\n        const playerName = networking_stringHTMLSafe(networking_decodeText(data, len+2));\r\n\r\n        // remove the player from the mapDiv\r\n        document.getElementById(`player-container-${playerName}-${mapName}`).remove();\r\n\r\n        // if no more players then remove the mapDiv\r\n        let mapDiv = document.getElementById(`leaderboard-map-${mapName}`);\r\n        if(mapDiv.children.length === 1/*map name*/) mapDiv.remove();\r\n    },\r\n    // 18 - win msg\r\n    (data) => {\r\n        // [18, len, mapName, name]\r\n        const len = data[1];\r\n        const padding = data[2];\r\n        const mapName = networking_decodeText(data, 8, len+8);\r\n        const playerName = networking_stringHTMLSafe(networking_decodeText(data, len+8, data.byteLength - padding));\r\n\r\n        const difficultyNumber = shared/* default */.A.mapDifficulties[mapName] ?? 0;\r\n        const displayMapName = networking_stringHTMLSafe(shared/* default */.A.mapLeaderboardNames[mapName] ?? mapName);\r\n        const u32 = new Uint32Array(data.buffer);\r\n        const timeToBeat = u32[1] / 1000;\r\n\r\n        let ms = ((~~(timeToBeat*100))%100).toString();\r\n        let seconds = (~~(timeToBeat%60)).toString();\r\n        let minutes = (~~((timeToBeat / 60)%60)).toString();\r\n        if(ms.length === 1) ms = '0' + ms;\r\n        if(seconds.length === 1) seconds = '0' + seconds;\r\n\r\n        let displayMapTime = `${minutes}:${seconds}.${ms}`;\r\n        if(timeToBeat > 3600) {\r\n            if(minutes.length === 1) minutes = '0' + minutes;\r\n            const hours = (~~(timeToBeat / 3600)).toString();\r\n            displayMapTime = `${hours}:${minutes}:${seconds}.${ms}`;\r\n        }\r\n\r\n        const div = document.createElement('div');\r\n        div.classList.add('system-message');\r\n        div.classList.add(`difficulty-${Math.floor(difficultyNumber)}`);\r\n        div.innerHTML = `<span class=\"rainbow\">[SƎRVƎR]</span>: ${playerName} ${['has beaten', 'completed', 'surmounted', 'finished'][Math.floor(Math.random()*4)]} the ${displayMapName} in ${displayMapTime}!`;\r\n\r\n        const chatMessageDiv = document.querySelector('.chat-div');\r\n        chatMessageDiv.appendChild(div);\r\n        chatMessageDiv.scrollTop = chatMessageDiv.scrollHeight;\r\n    },\r\n    // 19 - init leaderboard\r\n    (data) => {\r\n        data[0] = 222;\r\n        const lb = msgpackr.unpack(data);\r\n\r\n        for(let mapName in lb){\r\n            for(let id in lb[mapName]){\r\n                addToLeaderboard(lb[mapName][id], mapName);\r\n            }\r\n        }\r\n    },\r\n    // 20 - map request\r\n    (data) => {\r\n        if(shared/* default */.A.obstacles.length === 0) return;\r\n        // generate function maps that map simulate functions to pack functions\r\n        shared/* default */.A.generateSyncMaps();\r\n\r\n        let ind=0, pack=[], fn, packed=false, lastId=-2;\r\n        for(let i = 0; i < shared/* default */.A.obstacles.length; i++){\r\n            const o = shared/* default */.A.obstacles[i];\r\n            if(o.customSync !== undefined){\r\n                pack[ind] = o.customSync(o);\r\n                packed = true;\r\n            } else {\r\n                pack[ind] = {}; packed = false;\r\n                for(let j = 0; j < o.simulate.length; j++){\r\n                    fn = shared/* default */.A.simulateToSync.get(o.simulate[j]);\r\n                    if(fn !== undefined) {\r\n                        packed ||= fn(o, pack[ind]) !== false;\r\n                        continue;\r\n                    }\r\n                    fn = shared/* default */.A.idleEffectToSync.get(o.simulate[j]);\r\n                    if(fn !== undefined) {\r\n                        packed ||= fn(o, pack[ind]) !== false;\r\n                        continue;\r\n                    }\r\n                    // custom simulate w/o customSync - dont pack\r\n                    packed = false;\r\n                }\r\n            }\r\n\r\n            if(packed === true){\r\n                if(lastId !== i-1) pack[ind].id = i;\r\n                lastId = i;\r\n                ind++;\r\n            }\r\n        }\r\n\r\n        if(pack.length === 0) return;\r\n\r\n        if(packed === false){\r\n            pack.length--;\r\n        }\r\n\r\n        const buf = msgpackr.pack(pack);\r\n\r\n        // First byte is 220 always, so replace it with 0 and reconstruct when client recieves.\r\n        buf[0] = 21;\r\n        shared/* default */.A.send(buf);\r\n    },\r\n    // 21 - map response\r\n    (data) => {\r\n        syncMapFn = () => {\r\n            shared/* default */.A.generateApplySyncMaps();\r\n\r\n            data[0] = 220;\r\n            let pack;\r\n            try {\r\n                pack = msgpackr.unpack(data);\r\n            } catch(e){\r\n                console.log('failed sync map parsing!', data);\r\n                console.error(e);\r\n                return;\r\n            }\r\n\r\n            if(Array.isArray(pack) === false || pack[0].id === undefined) return;\r\n            let lastId = pack[0].id, id, fn;\r\n\r\n            for(let i = 0; i < pack.length; i++){\r\n                id = pack[i].id;\r\n                if(id === undefined) id = ++lastId;\r\n                else lastId = id;\r\n\r\n                const o = shared/* default */.A.obstacles[id];\r\n                if(o === undefined) continue;\r\n\r\n                if(o.applyCustomSync !== undefined){\r\n                    o.applyCustomSync(o, pack[i]);\r\n                    continue;\r\n                }\r\n\r\n                for(let j = 0; j < o.simulate.length; j++){\r\n                    fn = shared/* default */.A.simulateToApplySync.get(o.simulate[j]);\r\n                    if(fn !== undefined) {\r\n                        fn(o, pack[i]);\r\n                        continue;\r\n                    }\r\n                    fn = shared/* default */.A.idleEffectToApplySync.get(o.simulate[j]);\r\n                    if(fn !== undefined) {\r\n                        fn(o, pack[i]);\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const offtab = shared/* default */.A.offtabSync;\r\n        \r\n        if(lateSyncMap === true || shared/* default */.A.offtabSync === true){\r\n            syncMapFn();\r\n            syncMapFn = undefined;\r\n            shared/* default */.A.offtabSync = false;\r\n            lateSyncMap = false;\r\n        }\r\n\r\n        if(offtab === true) {\r\n            shared/* default */.A.accum = 0;\r\n        } else {\r\n            const ticksToSimulate = (window.frames - shared/* default */.A.mapEntryTime) / 2;\r\n            if(ticksToSimulate > 2000) return;\r\n            shared/* default */.A.accum += shared/* default */.A.FRAME_TIME * ticksToSimulate;\r\n        }\r\n    },\r\n    // 22 - change radius\r\n    (data) => {\r\n        const u16 = new Uint16Array(data.buffer);\r\n        const id = u16[1];\r\n        if(id === shared/* default */.A.selfId) return;\r\n        const f32 = new Float32Array(data.buffer);\r\n        shared/* default */.A.players[id].sat.r = f32[1];\r\n    },\r\n    // 23 - set custom map difficulty\r\n    (data) => {\r\n        const f32 = new Float32Array(data.buffer);\r\n        const difficulty = f32[1];\r\n        const mapName = networking_decodeText(data, 8).replaceAll('\\x00', '');\r\n        customMapDifficulties[mapName] = difficulty;\r\n    },\r\n    // 24 - no players for sync\r\n    (data) => {\r\n        shared/* default */.A.accum = 0;\r\n        shared/* default */.A.offtabSync = false;\r\n    }\r\n]\r\n\r\nfunction createPlayerFromData(data){\r\n    const p = shared/* default */.A.createPlayer();\r\n    // if this gets bigger we may want to\r\n    // for(let key in data)\r\n    p.pos.x = data.pos.x;\r\n    p.pos.y = data.pos.y;\r\n    p.sat.r = data.r;\r\n    p.name = data.name;\r\n    p.dead = data.dead;\r\n    p.id = data.id;\r\n    p.god = data.god;\r\n    p.ship = data.ship;\r\n    p.shipAngle = data.shipAngle;\r\n    p.grapple = data.grapple;\r\n    p.grappleX = data.grappleX;\r\n    p.grappleY = data.grappleY;\r\n    p.deathTimer = data.deathTimer;\r\n    p.deathTime = data.deathTime;\r\n\r\n    return p;\r\n}\n;// ./client/scroll.js\n\r\n\r\nconst { until: scroll_until, environment: scroll_environment } = utils;\r\n\r\nlet nextCode;\r\nconst nextCodeLoaded = () => { return nextCode !== undefined; };\r\nconst isServer = typeof location === 'undefined';\r\nlet reqUrl = isServer === true ? '' : `${location.origin}/game`;\r\nlet loadingCurrent = false;\r\nlet nextFileName = '';\r\nlet lastFileNameStack = [];\r\nlet forwardFileNameStack = [];\r\nshared/* default */.A.levelFileName = '';\r\n\r\nshared/* default */.A.isExClient = true;// TEMP\r\n\r\n// never get code from server in editor\r\nif(scroll_environment === 'editor' || scroll_environment === 'server' || shared/* default */.A.isExClient === true){\r\n    getNextCode = async () => {\r\n        await scroll_until(() => { return false; })\r\n    };\r\n    scroll_scroll = () => {};\r\n} else if(location.href.includes('standalone') === true){\r\n    shared/* default */.A.standalone = true;\r\n    const split = location.href.split('/');\r\n    reqUrl += '/' + split[split.length - 1];\r\n    scroll_scroll = () => {};\r\n} else if(localStorage.getItem('tutorialCompleted') === null) {\r\n    let getNextCodeLoaded = false;\r\n    getNextCode = async () => {\r\n        await scroll_until(() => {return getNextCodeLoaded !== false});\r\n        return getNextCode();\r\n    };\r\n    shared/* default */.A.tutorial = true;\r\n    (async () => {\r\n        const exps = await __webpack_require__.e(/* import() */ 186).then(__webpack_require__.bind(__webpack_require__, 186));\r\n        getNextCode = exps.default;\r\n        getNextCodeLoaded = true;\r\n    })();\r\n}\r\n\r\n// get first code\r\ngetNextCode().then(async (code) => {\r\n    // load first request\r\n    nextCode = code;\r\n    replaceScript();\r\n\r\n    if(shared/* default */.A.standalone === true){\r\n        getNextCode = async () => {\r\n            await scroll_until(() => { return false; })\r\n        };\r\n        return;\r\n    }\r\n\r\n    // load next code when it arrives\r\n    nextCode = await firstNextCode;\r\n})\r\n\r\n// get next code\r\nlet firstNextCode = getNextCode();\r\n\r\n// on scroll\r\nasync function scroll_scroll(up=false){\r\n    // don't allow scrolling if we're loading the current code\r\n    // it'll look the same to the user anyways\r\n    if(loadingCurrent === true) return;\r\n    if(up === true){\r\n        if(lastFileNameStack.length === 0) return;\r\n        var lastCode = nextCode;\r\n        forwardFileNameStack.push(shared/* default */.A.levelFileName);\r\n        nextCode = await getLastCode(lastFileNameStack.pop());\r\n    } else if(shared/* default */.A.levelFileName !== ''){\r\n        lastFileNameStack.push(shared/* default */.A.levelFileName);\r\n        if(lastFileNameStack.length > 42) lastFileNameStack.shift();\r\n        if(forwardFileNameStack.length !== 0) nextCode = await getLastCode(forwardFileNameStack.pop());\r\n    }\r\n\r\n    shared/* default */.A.scrollingUp = up === true;\r\n    shared/* default */.A.lastObstacles = [];\r\n    for(let i = 0; i < obstacles.length; i++){\r\n        shared/* default */.A.lastObstacles.push(obstacles[i]);\r\n    }\r\n    for(let key in shared/* default */.A.colors){\r\n        shared/* default */.A.lastColors[key] = shared/* default */.A.colors[key];\r\n        shared/* default */.A.colors[key] = shared/* default */.A.defaultColors[key];\r\n    }\r\n    shared/* default */.A.lastPlayerData = [player.pos.x, player.pos.y];\r\n\r\n    // if we already have the next code\r\n    if(nextCode !== undefined){\r\n        // append new script to run second game\r\n        replaceScript();\r\n\r\n        // animation timer\r\n        shared/* default */.A.scrollAnimation = 0;\r\n\r\n        // fetch new next code\r\n        if(up === true) nextCode = lastCode;\r\n        else nextCode = await getNextCode();\r\n    } else {\r\n        // loading current, nextcode\r\n        loadingCurrent = true;\r\n\r\n        // load blank screen for now\r\n        removeScript();\r\n\r\n        // animation timer\r\n        shared/* default */.A.scrollAnimation = 0;\r\n\r\n        // code is on its way, wait until it gets here\r\n        await scroll_until(nextCodeLoaded, 16.66);\r\n\r\n        // set code\r\n        replaceScript();\r\n\r\n        // unlock mutex\r\n        loadingCurrent = false;\r\n\r\n        // fetch new next code\r\n        nextCode = await getNextCode();\r\n    }\r\n}\r\n\r\nshared/* default */.A.won = false;\r\nasync function getNextCode(){\r\n    const response = await fetch(reqUrl);\r\n    if (!response.ok) throw new Error(`Failed to fetch ${reqUrl}`);\r\n    nextFileName = response.headers.get('Fn');\r\n    return response.text();\r\n}\r\n\r\nasync function getLastCode(fileName){\r\n    const fileNameWithoutTheJS = fileName.slice(0, fileName.length-3);\r\n    const response = await fetch(reqUrl + '/' + fileNameWithoutTheJS);\r\n    if (!response.ok) throw new Error(`Failed to fetch ${reqUrl}`);\r\n    nextFileName = fileName;\r\n    return response.text();\r\n}\r\n\r\n// replaces code running with nextCode\r\nasync function replaceScript(){\r\n    removeScript();\r\n\r\n    shared/* default */.A.resetGame();\r\n    stopMusic();\r\n\r\n    const scriptElement = document.createElement('script');\r\n    scriptElement.id = \"gameScript\";\r\n    scriptElement.text = nextCode;\r\n    document.body.appendChild(scriptElement);\r\n\r\n    nextCode = undefined;\r\n    shared/* default */.A.levelFileName = nextFileName;\r\n}\r\n\r\nshared/* default */.A.removeScript = function removeScript(){\r\n    const last = document.getElementById(\"gameScript\");\r\n    if(last !== null) last.remove();\r\n    shared/* default */.A.resetGame();\r\n    stopMusic();\r\n}\r\n\r\nshared/* default */.A.resetFns = [];\r\nshared/* default */.A.resetGame = () => {\r\n    for(let i = 0; i < shared/* default */.A.resetFns.length; i++){\r\n        shared/* default */.A.resetFns[i]();\r\n    }\r\n    shared/* default */.A.resetFns.length = shared/* default */.A.obstacles.length = shared/* default */.A.mouseUpFunctions.length = shared/* default */.A.mouseDownFunctions.length = shared/* default */.A.mouseMoveFunctions.length = shared/* default */.A.resizeFns.length = 0;\r\n    if(shared/* default */.A.environment !== 'editor') {shared/* default */.A.respawnPlayer(); shared/* default */.A.changeCameraScale(1); /*player.renderRadius = player.sat.r;*/ }\r\n    else {shared/* default */.A.infiniteLoop = false; shared/* default */.A.onEditorReset();}\r\n    for(let key in shared/* default */.A.defaultColors) { shared/* default */.A.colors[key] = shared/* default */.A.defaultColors[key]; }\r\n    if(shared/* default */.A.colors.vignette !== undefined) shared/* default */.A.colors.vignette = structuredClone(shared/* default */.A.defaultColors.vignette);\r\n    shared/* default */.A.mouseDownFunctions.push(() => {\r\n        if(player.dead === true) shared/* default */.A.respawnPlayer();\r\n    })\r\n    if(shared/* default */.A.addSideMenuEvtListeners !== undefined) shared/* default */.A.addSideMenuEvtListeners(nextFileName);\r\n    shared/* default */.A.spawnPosition.x = 100;\r\n    shared/* default */.A.spawnPosition.y = 100;\r\n    shared/* default */.A.mapDimensions.x = 2000;\r\n    shared/* default */.A.mapDimensions.y = 2000;\r\n    shared/* default */.A.camera.numControlledBy = 0;\r\n    const player = shared/* default */.A.players[shared/* default */.A.selfId];\r\n    if(player !== undefined){\r\n        player.sat.r = 49.5;\r\n        player.speed = player.baseSpeed = 7.167;\r\n    }\r\n    shared/* default */.A.idToObs = {};\r\n}\r\n\r\n/* harmony default export */ const client_scroll = (scroll_scroll);\n;// ./client/components.js\n\r\nconst { environment: components_environment, blendColor: components_blendColor, encodeAtPosition: components_encodeAtPosition } = utils;\r\n\r\nlet toScroll = false;\r\n\r\n\r\nshared/* default */.A.respawnPlayer = () => {\r\n    const player = shared/* default */.A.players[shared/* default */.A.selfId];\r\n    if(player === undefined) return;\r\n    player.pos.x = shared/* default */.A.spawnPosition.x;\r\n    player.pos.y = shared/* default */.A.spawnPosition.y;\r\n    player.renderRadius = 0;\r\n    player.dead = false;\r\n    player.forces.length = 0;\r\n    if(shared/* default */.A.dragging === true) {window.onmouseup(); shared/* default */.A.dragging = true;}\r\n    else window.onmouseup();\r\n}\r\n\r\nconst SAT = window.SAT;\r\nSAT.Circle.prototype.rotate = function (angle) {\r\n    this.pos.rotate(angle);\r\n}\r\n\r\nfunction create(shape, simulates, effects, params){\r\n    const e = {\r\n        sat: satMap[shape](params),\r\n        simulate: [],\r\n        effect: [],\r\n        renderShape: renderShapeMap[shape],\r\n        renderEffect: effects.map(e => renderEffectMap[e]),\r\n    };\r\n    e.renderEffectTimer = 0;\r\n    e.pos = e.sat.pos;\r\n    if(shape === 0) e.sat.r = Math.max(e.sat.r, 0.001);\r\n    else if(shape === 3) {e.isText = true; e.text = params.text; e.fontSize = params.fontSize; }\r\n    else if(shape === 4){\r\n        e.sat.r = Math.max(e.sat.r, 0.001); e.innerRadius = Math.max(params.innerRadius, 0);\r\n        e.startSlice = params.startSlice; e.startSliceAngle = params.startSliceAngle;\r\n        e.endSlice = params.endSlice; e.endSliceAngle = params.endSliceAngle;\r\n        e.startSliceAngleRotateSpeed = params.startSliceAngleRotateSpeed;\r\n        e.endSliceAngleRotateSpeed = params.endSliceAngleRotateSpeed;\r\n        if(params.circleSliceRotate !== undefined) e.simulate.push(params.circleSliceRotate);\r\n    }\r\n    for(let key in shared/* default */.A.satConstraintsMap[shape]){\r\n        // [min, max, mustBeInt, customValidator(e)]\r\n        const c = shared/* default */.A.satConstraintsMap[shape][key];\r\n        if(c[2] === true) e[key] = Math.round(e[key]);\r\n        if(e[key] < c[0]) e[key] = c[0];\r\n        else if(e[key] > c[1]) e[key] = c[1];\r\n    }\r\n    e.dimensions = generateDimensions(e);\r\n    e.topLeft = generateTopLeftCoordinates(e);\r\n    for(let i = 0; i < simulates.length; i++){\r\n        e.simulate.push(simulateMap[simulates[i]]);\r\n        initSimulateMap[simulates[i]](e, params);\r\n        for(let key in shared/* default */.A.simulateConstraintsMap[simulates[i]]){\r\n            // [min, max, mustBeInt, customValidator(e)]\r\n            const c = shared/* default */.A.simulateConstraintsMap[simulates[i]][key];\r\n            if(c[2] === true) e[key] = Math.round(e[key]);\r\n            if(e[key] < c[0]) e[key] = c[0];\r\n            else if(e[key] > c[1]) e[key] = c[1];\r\n        }\r\n    }\r\n    for(let i = 0; i < effects.length; i++){\r\n        e.effect.push(effectMap[effects[i]]);\r\n        initEffectMap[effects[i]](e, params);\r\n        if(idleEffectMap[effects[i]] !== undefined) e.simulate.push(idleEffectMap[effects[i]]);\r\n        for(let key in shared/* default */.A.effectConstraintsMap[effects[i]]){\r\n            // [min, max, mustBeInt, customValidator(e)]\r\n            const c = shared/* default */.A.effectConstraintsMap[effects[i]][key];\r\n            if(c[2] === true) e[key] = Math.round(e[key]);\r\n            if(e[key] < c[0]) e[key] = c[0];\r\n            else if(e[key] > c[1]) e[key] = c[1];\r\n        }\r\n    }\r\n    if(params.sf !== undefined) e.simulate.push(params.sf);\r\n    if(params.ef !== undefined) {e.effect.push(params.ef); e.renderEffect.push(renderEffectMap[3]);}\r\n    if(params.sf !== undefined || params.ef !== undefined) {\r\n        e.simulate.push(()=>{e.dimensions=generateDimensions(e);e.topLeft=generateTopLeftCoordinates(e);});\r\n        if(params.customSync !== undefined && params.applyCustomSync !== undefined)\r\n        {e.customSync = params.customSync; e.applyCustomSync = params.applyCustomSync;}\r\n    };\r\n    if(params.cr !== undefined) e.cr = params.cr;\r\n    \r\n    components_obstacles.push(e);\r\n\r\n    // fixing polygon points if they're dynamically generated\r\n    if(params.fixPoly !== undefined){\r\n        if(components_environment === 'editor'){\r\n            e.sat.setPoints(shared/* default */.A.fixPolygon(params.points).map(pt => new SAT.Vector(pt[0], pt[1])));\r\n            e.dimensions = generateDimensions(e);\r\n            e.topLeft = generateTopLeftCoordinates(e);\r\n        } else {\r\n            (async()=>{\r\n                await __webpack_require__.e(/* import() */ 281).then(__webpack_require__.bind(__webpack_require__, 281));\r\n                e.sat.setPoints(shared/* default */.A.fixPolygon(params.points).map(pt => new SAT.Vector(pt[0], pt[1])));\r\n                e.dimensions = generateDimensions(e);\r\n                e.topLeft = generateTopLeftCoordinates(e);\r\n            })();\r\n        }\r\n    }\r\n}\r\nshared/* default */.A.C = create;\r\nshared/* default */.A.idToObs = {};\r\nshared/* default */.A.tickFns = [];\r\nshared/* default */.A.R = remove;\r\nfunction remove(i/*ndex*/){\r\n    if(i === components_obstacles.length-1){\r\n        do {\r\n            components_obstacles.pop();\r\n        } while(components_obstacles[components_obstacles.length-1].removed === true)\r\n        return;\r\n    }\r\n    const o = components_obstacles[i];\r\n    o.simulate.length = o.effect.length = 0;\r\n    delete o.sf; delete o.ef; delete o.cr;\r\n    o.pos.x = -1E9;\r\n    o.removed = true;\r\n}\r\n\r\nfunction components_interpolate(start, end, t){\r\n    return (1-t) * start + t * end;\r\n}\r\n\r\nlet res = new SAT.Response();\r\nlet angle, collided = false;\r\nfunction simulate(){\r\n    // player simulation\r\n    const player = shared/* default */.A.players[shared/* default */.A.selfId];\r\n\r\n    if(shared/* default */.A.isExClient === true && player.dead === false) {\r\n        if(shared/* default */.A.touchMode === true){\r\n            player.xa = Math.cos(shared/* default */.A.touchAngle) * player.speed;\r\n            player.ya = Math.sin(shared/* default */.A.touchAngle) * player.speed;\r\n        } else {\r\n            player.xa = (shared/* default */.A.input.right - shared/* default */.A.input.left) * player.speed;\r\n            player.ya = (shared/* default */.A.input.down - shared/* default */.A.input.up) * player.speed;\r\n        }\r\n\r\n        if(shared/* default */.A.input.shift === true) {\r\n            if(player.god === true){\r\n                player.xa *= 5;\r\n                player.ya *= 5;\r\n            } else {\r\n                player.xa *= 0.5;\r\n                player.ya *= 0.5;\r\n            }\r\n        }\r\n\r\n        if(player.ship === false){\r\n            player.xv += player.xa * player.axisSpeedMultX;\r\n            player.yv += player.ya * player.axisSpeedMultY;\r\n        } else {\r\n            player.shipAngle += player.xa * player.shipTurnSpeed;\r\n\r\n            player.xv -= Math.cos(player.shipAngle) * player.ya * player.axisSpeedMultX;\r\n            player.yv -= Math.sin(player.shipAngle) * player.ya * player.axisSpeedMultY;\r\n        }\r\n\r\n        player.pos.x += player.xv;\r\n        player.pos.y += player.yv;\r\n\r\n        player.xv *= player.friction;\r\n        player.yv *= player.friction;\r\n    } else if(shared/* default */.A.dragging === true && player.dead === false){\r\n        if(player.axisSpeedMultX === 0 || player.axisSpeedMultY === 0) angle = Math.atan2((shared/* default */.A.mouseY - player.pos.y), (shared/* default */.A.mouseX - player.pos.x));\r\n        else angle = Math.atan2((shared/* default */.A.mouseY - player.pos.y) * player.axisSpeedMultX, (shared/* default */.A.mouseX - player.pos.x) * player.axisSpeedMultY);\r\n        player.xv = Math.cos(angle) * player.speed * player.axisSpeedMultX;\r\n        player.yv = Math.sin(angle) * player.speed * player.axisSpeedMultY;\r\n        if(Math.abs(player.xv) > Math.abs(player.pos.x - shared/* default */.A.mouseX)) player.xv = shared/* default */.A.mouseX - player.pos.x;\r\n        if(Math.abs(player.yv) > Math.abs(player.pos.y - shared/* default */.A.mouseY)) player.yv = shared/* default */.A.mouseY - player.pos.y;\r\n        player.pos.x += player.xv;\r\n        player.pos.y += player.yv; \r\n    } else {\r\n        player.xv = player.yv = 0;\r\n    }\r\n    player.axisSpeedMultX = player.axisSpeedMultY = 1;\r\n\r\n    if(player.stopForces === true){\r\n        player.stopForces = false;\r\n        player.forces.length = 0;\r\n    } else {\r\n        for(let i = 0; i < player.forces.length; i+=3){\r\n            player.pos.x += player.forces[i];\r\n            player.pos.y += player.forces[i+1];\r\n\r\n            player.forces[i] *= player.forces[i+2];\r\n            player.forces[i+1] *= player.forces[i+2];\r\n\r\n            if(Math.abs(player.forces[i]) < 0.01 && Math.abs(player.forces[i+1]) < 0.01){\r\n                player.forces.splice(i,3);\r\n                i-=3;\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n\r\n    if(player.dead === true){\r\n        player.forces.length = 0;\r\n        player.renderRadius = player.lastAliveRadius;\r\n        for(let i = 0; i < components_obstacles.length; i++){\r\n            // obstacle simulation\r\n            for(let j = 0; j < components_obstacles[i].simulate.length; j++){\r\n                components_obstacles[i].simulate[j](components_obstacles[i], player);\r\n            }\r\n        }\r\n    } else {\r\n        player.lastAliveRadius = player.sat.r;\r\n        if(player.god !== true){\r\n            if(player.pos.x - player.sat.r < 0) player.pos.x = player.sat.r;\r\n            else if(player.pos.x + player.sat.r > shared/* default */.A.mapDimensions.x) player.pos.x = shared/* default */.A.mapDimensions.x - player.sat.r;\r\n            if(player.pos.y - player.sat.r < 0) player.pos.y = player.sat.r;\r\n            else if(player.pos.y + player.sat.r > shared/* default */.A.mapDimensions.y) player.pos.y = shared/* default */.A.mapDimensions.y - player.sat.r;\r\n        \r\n            for(let i = 0; i < components_obstacles.length; i++){\r\n                // collision (done before simulation because that is what last rendered frame sees)\r\n                if(components_obstacles[i].sat.r !== undefined){\r\n                    if(components_obstacles[i].startSlice !== undefined){\r\n                        collided = testCircleSliceCircle(components_obstacles[i], player, res);\r\n                    } else {\r\n                        collided = SAT.testCircleCircle(components_obstacles[i].sat, player.sat, res);\r\n                    }\r\n                } else {\r\n                    collided = SAT.testPolygonCircle(components_obstacles[i].sat, player.sat, res);\r\n                }\r\n                if(collided === true){\r\n                    for(let j = 0; j < components_obstacles[i].effect.length; j++){\r\n                        components_obstacles[i].effect[j](player, res, components_obstacles[i], i);\r\n                    }\r\n                }\r\n                res.clear();// TODO: test if this is really needed\r\n        \r\n                // obstacle simulation\r\n                for(let j = 0; j < components_obstacles[i].simulate.length; j++){\r\n                    components_obstacles[i].simulate[j](components_obstacles[i], player);\r\n                }\r\n            }\r\n        } else {\r\n            // just do simulation if in godmode\r\n            for(let i = 0; i < components_obstacles.length; i++){\r\n                for(let j = 0; j < components_obstacles[i].simulate.length; j++){\r\n                    components_obstacles[i].simulate[j](components_obstacles[i], player);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(player.grapple === true){\r\n            if(shared/* default */.A.input.action1 === true && player.grappleX === -1){\r\n                let resetRadius = player.sat.r;\r\n                player.sat.r = player.grappleRange;\r\n                let closestAngle = 0;\r\n                let priorityResetRadius = 0;\r\n                let grapPointPriority = false;\r\n                for(let i = 0; i < components_obstacles.length; i++){\r\n                    if(components_obstacles[i].isGrapplePoint === true && grapPointPriority === false){\r\n                        priorityResetRadius = player.sat.r;\r\n                        player.sat.r = player.grappleRange;\r\n                    }\r\n\r\n                    if(components_obstacles[i].sat.r !== undefined){\r\n                        if(components_obstacles[i].startSlice !== undefined){\r\n                            collided = testCircleSliceCircle(components_obstacles[i], player, res);\r\n                        } else {\r\n                            collided = SAT.testCircleCircle(components_obstacles[i].sat, player.sat, res);\r\n                        }\r\n                    } else {\r\n                        collided = SAT.testPolygonCircle(components_obstacles[i].sat, player.sat, res);\r\n                    }\r\n                    \r\n                    if(components_obstacles[i].isGrapplePoint === true){\r\n                        if(collided === true){\r\n                            grapPointPriority = true;\r\n                            player.sat.r -= res.overlap;\r\n                            closestAngle = Math.atan2(res.overlapN.y, res.overlapN.x);\r\n                        } else if(grapPointPriority === false){\r\n                            player.sat.r = priorityResetRadius;\r\n                        }\r\n                    } else if(collided === true && grapPointPriority === false){\r\n                        player.sat.r -= res.overlap;\r\n                        closestAngle = Math.atan2(res.overlapN.y, res.overlapN.x);\r\n                    }\r\n                    \r\n                    res.clear();// TODO: test if this is really needed\r\n                }\r\n\r\n                if(player.sat.r < player.grappleRange){\r\n                    player.sat.r = Math.max(player.sat.r, 0);\r\n                    player.grappleX = player.pos.x - Math.cos(closestAngle) * player.sat.r;\r\n                    player.grappleY = player.pos.y - Math.sin(closestAngle) * player.sat.r;\r\n                }\r\n                player.sat.r = resetRadius;\r\n            } else if(player.grappleX !== -1){\r\n                if(shared/* default */.A.input.action1 === false){\r\n                    player.grappleX = player.grappleY = -1;\r\n                } else {\r\n                    let grappleLen = Math.sqrt((player.pos.x - player.grappleX) ** 2 + (player.pos.y - player.grappleY) ** 2);\r\n                    let grappleAngle = Math.atan2(player.grappleY - player.pos.y, player.grappleX - player.pos.x);\r\n\r\n                    player.forces.push(\r\n                        Math.cos(grappleAngle) * grappleLen * player.grappleForce,\r\n                        Math.sin(grappleAngle) * grappleLen * player.grappleForce,\r\n                        player.grappleFric\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        const v = shared/* default */.A.colors.vignette;\r\n        for(let key in v.innerInterp){\r\n            v.innerInterp[key] = components_interpolate(v.innerInterp[key], v.inner[key], 0.03);\r\n        }\r\n        for(let key in v.outerInterp){\r\n            v.outerInterp[key] = components_interpolate(v.outerInterp[key], v.outer[key], 0.03);\r\n        }\r\n    }\r\n\r\n    for(let i = 0; i < shared/* default */.A.players.length; i++){\r\n        const p = shared/* default */.A.players[i];\r\n        if(p === undefined) continue;\r\n        if((p.interpX-p.pos.x)**2+(p.interpY-p.pos.y)**2>352**2){\r\n            p.interpX = p.pos.x;\r\n            p.interpY = p.pos.y;\r\n        }\r\n        p.interpX = components_interpolate(p.interpX, p.pos.x, 0.4);\r\n        p.interpY = components_interpolate(p.interpY, p.pos.y, 0.4);\r\n        p.renderRadius = components_interpolate(p.renderRadius, p.sat.r, 1 / 5.4);\r\n    }\r\n\r\n    if(player.touchingNormalIndexes.length !== 0 || player.lastTouchingNormalIndexes.length !== 0){\r\n        player.lastTouchingNormalIndexes = player.touchingNormalIndexes;\r\n        player.touchingNormalIndexes = [];\r\n    }\r\n\r\n    if(player.onSafe === true){\r\n        player.onSafe = false;\r\n        if(player.timeTrapOverrideSafe === true){\r\n            player.timeTrapOverrideSafe = false;\r\n        } else {\r\n            player.dead = false;\r\n        }\r\n    }\r\n\r\n    if(player.deathTimer === true){\r\n        player.deathTime--;\r\n        if(player.deathTime < 0 || player.dead === true){\r\n            player.deathTime = Infinity;\r\n            player.deathTimer = false;\r\n            player.dead = true;\r\n\r\n            shared/* default */.A.u4[0] = 14;\r\n            shared/* default */.A.send(shared/* default */.A.u4);\r\n        }\r\n    }\r\n\r\n    // bounding the player by the walls\r\n    player.touchingWall = false;\r\n    if(player.sat.r > 900) player.sat.r = 900;\r\n\r\n    if(player.god !== true){\r\n        if(player.pos.x - player.sat.r < 0){\r\n            player.pos.x = player.sat.r;\r\n            player.touchingWall = true;\r\n        } else if(player.pos.x + player.sat.r > shared/* default */.A.mapDimensions.x){\r\n            player.pos.x = shared/* default */.A.mapDimensions.x - player.sat.r;\r\n            player.touchingWall = true;\r\n        }\r\n        if(player.pos.y - player.sat.r < 0){\r\n            player.pos.y = player.sat.r;\r\n            player.touchingWall = true;\r\n        } else if(player.pos.y + player.sat.r > shared/* default */.A.mapDimensions.y){\r\n            player.pos.y = shared/* default */.A.mapDimensions.y - player.sat.r;\r\n            player.touchingWall = true;\r\n        }\r\n    } else {\r\n        player.dead = false;\r\n    }\r\n\r\n    if(shared/* default */.A.tickFns.length > 0){\r\n        for(let i = 0; i < shared/* default */.A.tickFns.length; i++){\r\n            shared/* default */.A.tickFns[i]();\r\n        }\r\n        shared/* default */.A.tickFns.length = 0;\r\n    }\r\n\r\n    // scrolling if specified by a simulate type\r\n    if(toScroll === true){\r\n        toScroll = false;\r\n        if(shared/* default */.A.dragging === true) window.onmouseup();\r\n        client_scroll();\r\n    }\r\n\r\n    window.frames++;\r\n}\r\n\r\nlet runningOverlapN = new SAT.Vector(), runningOverlapV = new SAT.Vector();\r\nconst testCircleSliceCircle = shared/* default */.A.testCircleSliceCircle = (circleSlice, circle, res) => {\r\n    let collisionAngle, collisionDistSq, gts, lte, angleOverflow, collided = false;\r\n\r\n    // do circle first, then slices. If we collide with the circle then we don't want to collide w/ slices\r\n    collisionAngle = Math.atan2(circle.pos.y - circleSlice.pos.y, circle.pos.x - circleSlice.pos.x);\r\n    if(collisionAngle < 0) collisionAngle += Math.PI * 2;\r\n\r\n    gts = circleSlice.startSliceAngle < collisionAngle;\r\n    lte = collisionAngle < circleSlice.endSliceAngle;\r\n    \r\n    angleOverflow = circleSlice.startSliceAngle > circleSlice.endSliceAngle;\r\n\r\n    if(angleOverflow === true ? (gts === true || lte === true) : (gts === true && lte === true)){\r\n        collided = SAT.testCircleCircle(circleSlice.sat, circle.sat, res);\r\n\r\n        if(collided === true){\r\n            collisionDistSq = (circle.pos.y - circleSlice.pos.y) ** 2 + (circle.pos.x - circleSlice.pos.x) ** 2;\r\n\r\n            if(collisionDistSq > ((circleSlice.innerRadius + circleSlice.sat.r + circle.sat.r) / 2) ** 2){\r\n                // normal circle collision\r\n                return true;\r\n            } else {\r\n                if(collisionDistSq <= (circleSlice.innerRadius - circle.sat.r) ** 2){\r\n                    // we're too far inside, no collision\r\n                    res.clear();\r\n                    res.overlapN.x = res.overlapN.y = 0;\r\n                    res.overlapV.x = res.overlapV.y = 0;\r\n                    return false;\r\n                } else {\r\n                    // we're inside the circle - bound the opp way\r\n                    res.overlapN = res.overlapN.scale(-1,-1);\r\n                    res.overlap = (circleSlice.sat.r - circleSlice.innerRadius + circle.sat.r * 2) - res.overlap;\r\n                    res.overlapV = new SAT.Vector(res.overlapN.x * res.overlap, res.overlapN.y * res.overlap);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if(Math.abs((circleSlice.startSliceAngle - circleSlice.endSliceAngle) % (Math.PI * 2)) < 0.001){\r\n        // circle slices are on top of each other. We missed collision with the circle, so we're done\r\n        return false;\r\n    }\r\n\r\n    runningOverlapN.x = runningOverlapN.y = 0;\r\n    runningOverlapV.x = runningOverlapV.y = 0;\r\n\r\n    // collision with startSlice\r\n    if(SAT.testPolygonCircle(circleSlice.startSlice, circle.sat, res) === true){\r\n        collided = true;\r\n        runningOverlapN.x += res.overlapN.x;\r\n        runningOverlapN.y += res.overlapN.y;\r\n        runningOverlapV.x += res.overlapV.x;\r\n        runningOverlapV.y += res.overlapV.y;\r\n        res.clear();\r\n        res.overlapN.x = res.overlapN.y = 0;\r\n        res.overlapV.x = res.overlapV.y = 0;\r\n    }\r\n    \r\n    // collision with endSlice\r\n    collided ||= SAT.testPolygonCircle(circleSlice.endSlice, circle.sat, res);\r\n\r\n    res.overlapN.x += runningOverlapN.x;\r\n    res.overlapN.y += runningOverlapN.y;\r\n    res.overlapN = res.overlapN.normalize();\r\n    res.overlapV.x += runningOverlapV.x;\r\n    res.overlapV.y += runningOverlapV.y;\r\n    res.overlap = res.overlapV.x / res.overlapN.x;\r\n\r\n    return collided;\r\n}\r\n\r\n// 0 - circle, 1 - polygon\r\nconst collisionMatrix = [\r\n    SAT.testCircleCircle, SAT.testCirclePolygon,\r\n    SAT.testPolygonCircle, SAT.testPolygonPolygon\r\n]\r\nshared/* default */.A.collide = (a,b) => {\r\n    res.hasCollided = collisionMatrix[(a.sat.r === undefined) * 2 + (b.sat.r === undefined)](a.sat, b.sat, res);\r\n    return res;// make sure to clear after use!\r\n}\r\nshared/* default */.A.boundAB = (a,b) => {\r\n    const res = shared/* default */.A.collide(a,b);\r\n    if(res.hasCollided === true) {\r\n        a.pos.x -= res.overlapV.x;\r\n        a.pos.y -= res.overlapV.y;\r\n    }\r\n    res.clear();\r\n}\r\nshared/* default */.A.isABColliding = (a,b) => {\r\n    if(a === undefined || b === undefined) return false;\r\n    const res = shared/* default */.A.collide(a,b);\r\n    const hasCollided = res.hasCollided;\r\n    res.clear();\r\n    return hasCollided;\r\n}\r\n\r\nconst satMap = [\r\n    /*circle*/\r\n    (p) => {\r\n        // x,y,r\r\n        return new SAT.Circle(new SAT.Vector(p.x, p.y), p.r);\r\n    },\r\n    /*rectangle*/\r\n    (p) => {\r\n        // x,y,w,h\r\n        return new SAT.Box(new SAT.Vector(p.x, p.y), p.w, p.h).toPolygon();\r\n    },\r\n    /*polygon*/\r\n    (p) => {\r\n        // points: [[x,y], ...]\r\n        if(p.points.length < 2) p.points = shared/* default */.A.satDefaultMap[2].points;\r\n        p.x = 0; p.y = 0;\r\n        const s = new SAT.Polygon(new SAT.Vector(), p.points.map(pt => new SAT.Vector(pt[0], pt[1])));\r\n        s.pos.x = p.x;\r\n        s.pos.y = p.y;\r\n        return s;\r\n    },\r\n    /*text*/\r\n    (p) => {\r\n        if(shared/* default */.A.isServer === true) return new SAT.Box(new SAT.Vector(p.x, p.y), 100, 100).toPolygon();\r\n        ctx.textAlign = 'center';\r\n        ctx.textBaseline = 'middle';\r\n        ctx.font = `${p.fontSize}px Inter`;\r\n        const dimensions = ctx.measureText(p.text);\r\n        const w = dimensions.actualBoundingBoxRight + dimensions.actualBoundingBoxLeft;\r\n        const h = dimensions.actualBoundingBoxDescent + dimensions.actualBoundingBoxAscent;\r\n        const s = new SAT.Box(new SAT.Vector(p.x - w / 2, p.y - h / 2), w, h).toPolygon();\r\n        return s;\r\n    },\r\n    /*circleSlice*/\r\n    (p) => {\r\n        const sat = new SAT.Circle(new SAT.Vector(p.x, p.y), p.r);\r\n        const o = p;\r\n        o.startSliceAngle %= Math.PI * 2;\r\n        o.endSliceAngle %= Math.PI * 2;\r\n        if(o.startSliceAngle < 0) o.startSliceAngle += Math.PI * 2;\r\n        if(o.endSliceAngle < 0) o.endSliceAngle += Math.PI * 2;\r\n        o.startSlice = new SAT.Polygon(new SAT.Vector(), [\r\n            new SAT.Vector(Math.cos(o.startSliceAngle) * o.r, Math.sin(o.startSliceAngle) * o.r),\r\n            new SAT.Vector(Math.cos(o.startSliceAngle) * o.innerRadius, Math.sin(o.startSliceAngle) * o.innerRadius),\r\n        ]);\r\n        o.endSlice = new SAT.Polygon(new SAT.Vector(), [\r\n            new SAT.Vector(Math.cos(o.endSliceAngle) * o.r, Math.sin(o.endSliceAngle) * o.r),\r\n            new SAT.Vector(Math.cos(o.endSliceAngle) * o.innerRadius, Math.sin(o.endSliceAngle) * o.innerRadius),\r\n        ]);\r\n        o.startSlice.pos = o.endSlice.pos = sat.pos;\r\n        if(p.startSliceAngleRotateSpeed !== 0 || p.endSliceAngleRotateSpeed !== 0){\r\n            p.circleSliceRotate = (o) => {\r\n                o.startSliceAngle += o.startSliceAngleRotateSpeed;\r\n                o.endSliceAngle += o.endSliceAngleRotateSpeed;\r\n                o.startSliceAngle %= Math.PI * 2;\r\n                o.endSliceAngle %= Math.PI * 2;\r\n                if(o.startSliceAngle < 0) o.startSliceAngle += Math.PI * 2;\r\n                if(o.endSliceAngle < 0) o.endSliceAngle += Math.PI * 2;\r\n                o.startSlice.setPoints([\r\n                    new SAT.Vector(Math.cos(o.startSliceAngle) * o.sat.r, Math.sin(o.startSliceAngle) * o.sat.r),\r\n                    new SAT.Vector(Math.cos(o.startSliceAngle) * o.innerRadius, Math.sin(o.startSliceAngle) * o.innerRadius),\r\n                ]);\r\n                o.endSlice.setPoints([\r\n                    new SAT.Vector(Math.cos(o.endSliceAngle) * o.sat.r, Math.sin(o.endSliceAngle) * o.sat.r),\r\n                    new SAT.Vector(Math.cos(o.endSliceAngle) * o.innerRadius, Math.sin(o.endSliceAngle) * o.innerRadius),\r\n                ])\r\n                o.startSlice.pos = o.endSlice.pos = o.sat.pos;\r\n            }\r\n        }\r\n        return sat;\r\n    }\r\n];\r\n\r\n// font loading fix\r\nfunction fixFonts() {\r\n    const os = shared/* default */.A.obstacles;\r\n    for(let i = 0; i < os.length; i++){\r\n        if(os[i].isText !== true) continue;\r\n        const oldDimensions = os[i].dimensions;\r\n        os[i].dimensions = generateDimensions(os[i]);\r\n        os[i].pos.x += (oldDimensions.x - os[i].dimensions.x) / 2;\r\n        os[i].pos.y += (oldDimensions.y - os[i].dimensions.y) / 2;\r\n        os[i].topLeft = generateTopLeftCoordinates(os[i]);\r\n    }\r\n}\r\nsetTimeout(fixFonts, 1000);\r\nsetTimeout(fixFonts, 3000);\r\n\r\nfunction generateDimensions(o){\r\n    const sat = o.sat;\r\n    if(sat.r !== undefined){\r\n        return {\r\n            x: sat.r * 2,\r\n            y: sat.r * 2\r\n        }\r\n    }\r\n    \r\n    // if(o.isText === true){\r\n    //     ctx.textAlign = 'center';\r\n    //     ctx.textBaseline = 'middle';\r\n    //     ctx.font = `${o.fontSize}px Inter`;\r\n    //     const dimensions = ctx.measureText(o.text);\r\n    //     o.wOffset = (dimensions.actualBoundingBoxRight - dimensions.actualBoundingBoxLeft) / 2;\r\n    //     o.hOffset = (dimensions.actualBoundingBoxDescent - dimensions.actualBoundingBoxAscent) / 2; // *0.75?\r\n    //     // if(o.rotation === undefined){\r\n    //         // return {\r\n    //         //     x: dimensions.actualBoundingBoxRight + dimensions.actualBoundingBoxLeft,\r\n    //         //     y: dimensions.actualBoundingBoxDescent + dimensions.actualBoundingBoxAscent,\r\n    //         // }\r\n    //     // }\r\n    //     // const x = dimensions.actualBoundingBoxRight + dimensions.actualBoundingBoxLeft;\r\n    //     // const y = dimensions.actualBoundingBoxDescent + dimensions.actualBoundingBoxAscent;\r\n\r\n    //     // const c = Math.cos(o.rotation); const s = Math.sin(o.rotation);\r\n    //     // return {\r\n    //     //     x: x * c + y * s,\r\n    //     //     y: x * s + y * c\r\n    //     // }\r\n    // }\r\n    \r\n    let top, right, bottom, left;\r\n    bottom = right = -Infinity;\r\n    top = left = Infinity;\r\n    for(let p of sat.points){\r\n        if(p.x < left) left = p.x;\r\n        if(p.x > right) right = p.x;\r\n        if(p.y > bottom) bottom = p.y;\r\n        if(p.y < top) top = p.y;\r\n    }\r\n\r\n    return {\r\n        x: right - left,\r\n        y: bottom - top\r\n    }\r\n}\r\nshared/* default */.A.generateDimensions = generateDimensions;\r\n\r\nfunction generateTopLeftCoordinates(o){\r\n    let topLeftX = o.pos.x, topLeftY = o.pos.y;\r\n    if(o.sat.r !== undefined) {\r\n        topLeftX -= o.sat.r;\r\n        topLeftY -= o.sat.r; \r\n    } else {\r\n        let minX = Infinity;\r\n        let minY = Infinity;\r\n        for(let i = 0; i < o.sat.points.length; i++){\r\n            if(o.sat.points[i].x < minX) minX = o.sat.points[i].x;\r\n            if(o.sat.points[i].y < minY) minY = o.sat.points[i].y;\r\n        }\r\n        topLeftX += minX;\r\n        topLeftY += minY;\r\n    }\r\n    return {x: topLeftX, y: topLeftY};\r\n}\r\nshared/* default */.A.generateTopLeftCoordinates = generateTopLeftCoordinates;\r\n\r\nshared/* default */.A.satMapI2N = [\r\n    'circle',\r\n    'rectangle',\r\n    'polygon',\r\n    'text',\r\n    'circleSlice'\r\n];\r\n\r\nshared/* default */.A.satConstraintsMap = [\r\n    undefined,\r\n    undefined,\r\n    undefined,\r\n    {fontSize: [1]},\r\n    undefined,\r\n];\r\n\r\nshared/* default */.A.satDefaultMap = [\r\n    // circle\r\n    {\r\n        x: 300,\r\n        y: 100,\r\n        r: 100\r\n    },\r\n    // rectangle\r\n    {\r\n        x: 0,\r\n        y: 0,\r\n        w: 200,\r\n        h: 200\r\n    },\r\n    // polygon\r\n    {\r\n        points: [[0,400],[50,200],[150,200],[200,400]],\r\n    },\r\n    // text\r\n    {\r\n        x: 300,\r\n        y: 250,\r\n        text: 'Text',\r\n        fontSize: 80,\r\n    },\r\n    // circleSlice\r\n    {\r\n        x: 300,\r\n        y: 300,\r\n        r: 100,\r\n        innerRadius: 50,\r\n        startSliceAngle: 0,\r\n        endSliceAngle: Math.PI,\r\n        startSliceAngleRotateSpeed: 0,\r\n        endSliceAngleRotateSpeed: 0\r\n    }\r\n]\r\n\r\nconst TAU = Math.PI * 2;\r\nconst renderShapeMap = [\r\n    /*circle*/\r\n    (o) => {\r\n        ctx.arc(o.pos.x, o.pos.y, o.sat.r, 0, TAU);\r\n    },\r\n    /*rectangle*/\r\n    (o) => {\r\n        // o.sat.calcPoints[0] is at 0,0 so we can drop that from the first two args\r\n        if(o.rotation !== undefined){\r\n            renderShapeMap[2](o);\r\n            return;\r\n        }\r\n        ctx.rect(o.topLeft.x, o.topLeft.y, o.dimensions.x, o.dimensions.y);\r\n    },\r\n    /*polygon*/\r\n    (o) => {\r\n        for(let i = 0; i < o.sat.points.length; i++){\r\n            ctx.lineTo(o.pos.x + o.sat.points[i].x, o.pos.y + o.sat.points[i].y);\r\n        }\r\n        ctx.lineTo(o.pos.x + o.sat.points[0].x, o.pos.y + o.sat.points[0].y);\r\n    },\r\n    /*text*/\r\n    (o) => {\r\n        // draw rectangle for clipping purposes\r\n        renderShapeMap[1](o);\r\n    },\r\n    /*circleSlice*/\r\n    (o) => {\r\n        ctx.moveTo(o.pos.x + Math.cos(o.startSliceAngle) * o.innerRadius, o.pos.y + Math.sin(o.startSliceAngle) * o.innerRadius);\r\n        ctx.lineTo(o.pos.x + Math.cos(o.startSliceAngle) * o.sat.r, o.pos.y + Math.sin(o.startSliceAngle) * o.sat.r);\r\n        ctx.arc(o.pos.x, o.pos.y, o.sat.r, o.startSliceAngle, o.endSliceAngle);\r\n        ctx.lineTo(o.pos.x + Math.cos(o.endSliceAngle) * o.innerRadius, o.pos.y + Math.sin(o.endSliceAngle) * o.innerRadius);\r\n        if(o.innerRadius !== 0)ctx.arc(o.pos.x, o.pos.y, o.innerRadius, o.endSliceAngle, o.startSliceAngle, true);\r\n    }\r\n]\r\n\r\nconst initSimulateMap = [\r\n    /*pathMove*/\r\n    (o, init) => {\r\n\t\to.path = init.path;// like [[x,y,speed], ...]\r\n\r\n        // filtering out consecutive duplicates\r\n        for(let i = o.path.length-1; i >= 1; i--){\r\n            if(o.path[i][0] === o.path[i-1][0] && o.path[i][1] === o.path[i-1][1]) o.path.splice(i,1);\r\n        }\r\n\r\n        if(o.path.length < 2) o.path = shared/* default */.A.simulateDefaultMap[0].path;\r\n\r\n        o.currentPoint = Math.floor(init.currentPoint) % o.path.length;\r\n\r\n        o.pointOn = o.path[o.currentPoint];\r\n        o.speed = o.pointOn[2];\r\n        \r\n        let nextPointIndex = o.currentPoint + 1;\r\n        if (nextPointIndex === o.path.length) nextPointIndex = 0;\r\n        \r\n        o.pointTo = o.path[nextPointIndex];\r\n        angle = Math.atan2(o.pointTo[1] - o.pointOn[1], o.pointTo[0] - o.pointOn[0]);\r\n        o.xv = Math.cos(angle) * o.speed;\r\n        o.yv = Math.sin(angle) * o.speed;\r\n\r\n        o.timeRemain = Math.sqrt((o.pointOn[0] - o.pointTo[0])**2 + (o.pointOn[1] - o.pointTo[1])**2) / o.speed;\r\n        \r\n        const fractionalPointOffset = init.currentPoint - Math.floor(init.currentPoint);\r\n        if(fractionalPointOffset !== 0){\r\n            const newTimeRemain = o.timeRemain * (1 - fractionalPointOffset);\r\n            const delta = o.timeRemain - newTimeRemain;\r\n            o.pos.x += delta * o.xv;\r\n            o.pos.y += delta * o.yv;\r\n            o.timeRemain = newTimeRemain;\r\n        }\r\n\r\n        o.pos.x += o.pointOn[0] - o.path[0][0];\r\n        o.pos.y += o.pointOn[1] - o.path[0][1];\r\n    },\r\n    // /*rotate*/\r\n    (o, init) => {\r\n        o.pivotX = init.pivotX;\r\n        o.pivotY = init.pivotY;\r\n        o.rotation = 0;\r\n        if(init.initialRotation !== 0 && init.initialRotation !== undefined){\r\n            o.rotateSpeed = init.initialRotation;\r\n            simulateMap[1](o);\r\n        }\r\n        o.rotateSpeed = init.rotateSpeed;\r\n    },\r\n    // /*grow*/\r\n    (o, init) => {\r\n        o.growSpeed = init.growSpeed;\r\n        o.shrinkSpeed = init.shrinkSpeed;\r\n        o.maxGrowth = init.maxGrowth;\r\n        o.minGrowth = init.minGrowth;\r\n        o.growing = init.toStartGrowing;\r\n        o.growth = o.lastGrowth = init.startGrowth;\r\n        o.growPivotX = init.growPivotX;\r\n        o.growPivotY = init.growPivotY;\r\n    },\r\n    // /*custom*/\r\n    () => {},\r\n    // /*id*/\r\n    (o, init) => {\r\n        let id = init.id.toString().trim();\r\n        if(shared/* default */.A.idToObs[id] !== undefined && components_environment === 'editor') alert(`Warning! Duplicate id \"${id}\" found! Duplicate ids override each other.`);\r\n        shared/* default */.A.idToObs[id] = o;\r\n    },\r\n    // /*rotateHoming*/\r\n    (o, init) => {\r\n        o.toRest = init.toRest;\r\n        o.restAngles = init.restAngles;\r\n        o.homingRotateSpeed = init.homingRotateSpeed;\r\n        o.rotation = 0;\r\n        o.detectionRadiusSquared = init.detectionRadius ** 2;\r\n        o.spokeAngles = init.spokeAngles;// array of angles of spokes\r\n        o.pivotX = init.pivotX;\r\n        o.pivotY = init.pivotY;\r\n    }\r\n]\r\n\r\nconst simulateMap = shared/* default */.A.simulateMap = [\r\n    /*pathMove*/\r\n    (o) => {\r\n        o.pos.x += o.xv;\r\n        o.pos.y += o.yv;\r\n\r\n        o.timeRemain--;\r\n        if (o.timeRemain <= 0) {\r\n            o.currentPoint++;\r\n            if (o.currentPoint === o.path.length) o.currentPoint = 0;\r\n            \r\n            o.pointOn = o.path[o.currentPoint];\r\n            o.speed = o.pointOn[2];\r\n    \r\n            // snapping back to the point that we should be on\r\n            o.pos.x += o.xv * o.timeRemain;\r\n            o.pos.y += o.yv * o.timeRemain;\r\n    \r\n            let nextPointIndex = o.currentPoint + 1;\r\n            if (nextPointIndex === o.path.length) nextPointIndex = 0;\r\n            \r\n            o.pointTo = o.path[nextPointIndex];\r\n    \r\n            angle = Math.atan2(o.pointTo[1] - o.pointOn[1], o.pointTo[0] - o.pointOn[0]);\r\n            o.xv = Math.cos(angle) * o.speed;\r\n            o.yv = Math.sin(angle) * o.speed;\r\n            \r\n            let dist = Math.sqrt((o.pointOn[0]-o.xv*o.timeRemain - o.pointTo[0])**2 + (o.pointOn[1]-o.yv*o.timeRemain - o.pointTo[1])**2);\r\n            \r\n            if((o.xv ** 2 + o.yv ** 2) * (o.timeRemain ** 2) > dist){\r\n                // we've overshot the next point, just stay on the inital point (no sync)\r\n                dist = Math.sqrt((o.pointOn[0] - o.pointTo[0])**2 + (o.pointOn[1] - o.pointTo[1])**2);\r\n            } else {\r\n                // correct to next pt (sync)\r\n                o.pos.x -= o.xv * o.timeRemain;\r\n                o.pos.y -= o.yv * o.timeRemain;\r\n            }\r\n\r\n            // time = distance / speed\r\n            o.timeRemain = dist / o.speed;\r\n        }\r\n\r\n        o.topLeft = shared/* default */.A.generateTopLeftCoordinates(o);\r\n    },\r\n    /*rotate*/\r\n    (o) => {\r\n        if(o.sat.r !== undefined){\r\n            o.pos.x -= o.pivotX;\r\n            o.pos.y -= o.pivotY;\r\n            o.sat.rotate(o.rotateSpeed);\r\n            o.pos.x += o.pivotX;\r\n            o.pos.y += o.pivotY;\r\n        } else {\r\n            o.sat.translate(o.pos.x-o.pivotX, o.pos.y-o.pivotY);\r\n            o.sat.rotate(o.rotateSpeed);\r\n            o.sat.translate(o.pivotX-o.pos.x, o.pivotY-o.pos.y);\r\n        }\r\n        \r\n        o.rotation += o.rotateSpeed;\r\n        o.dimensions = generateDimensions(o);\r\n        o.topLeft = shared/* default */.A.generateTopLeftCoordinates(o);\r\n    },\r\n    /*grow*/\r\n    (o) => {\r\n        if(o.growing === true) {\r\n            o.growth += o.growSpeed;\r\n            if(o.growth >= o.maxGrowth){\r\n                o.growing = false;\r\n                o.growth = o.maxGrowth;\r\n            }\r\n        }\r\n        else {\r\n            o.growth -= o.shrinkSpeed;\r\n            if(o.growth <= o.minGrowth){\r\n                o.growing = true;\r\n                o.growth = o.minGrowth;\r\n            }\r\n        }\r\n\r\n        const growthRatio = o.growth / o.lastGrowth;\r\n\r\n        if(o.sat.r !== undefined){\r\n            // circle\r\n            o.pos.x -= o.growPivotX;\r\n            o.pos.y -= o.growPivotY;\r\n            o.pos.x *= growthRatio;\r\n            o.pos.y *= growthRatio;\r\n            o.pos.x += o.growPivotX;\r\n            o.pos.y += o.growPivotY;\r\n\r\n            o.sat.r *= growthRatio;\r\n        } else {\r\n            // poly\r\n            for(let i = 0; i < o.sat.points.length; i++){\r\n                o.sat.points[i].x += o.pos.x - o.growPivotX;\r\n                o.sat.points[i].y += o.pos.y - o.growPivotY;\r\n                o.sat.points[i].x *= growthRatio;\r\n                o.sat.points[i].y *= growthRatio;\r\n                o.sat.points[i].x -= o.pos.x - o.growPivotX;\r\n                o.sat.points[i].y -= o.pos.y - o.growPivotY;\r\n            }\r\n            o.sat.setPoints(o.sat.points);\r\n\r\n            if(o.isText === true){\r\n                o.fontSize *= growthRatio;\r\n            }\r\n        }\r\n\r\n        o.topLeft = generateTopLeftCoordinates(o);\r\n        o.dimensions = generateDimensions(o);\r\n        o.lastGrowth = o.growth;\r\n    },\r\n    /*custom*/\r\n    () => {},\r\n    /*id*/\r\n    () => {},\r\n    /*rotateHoming*/\r\n    (o, p) => {\r\n        let middleX = o.topLeft.x + o.dimensions.x/2;\r\n        let middleY = o.topLeft.y + o.dimensions.y/2; \r\n\r\n        if(p.dead === true || (p.pos.x - middleX)**2 + (p.pos.y - middleY) ** 2 > o.detectionRadiusSquared) {\r\n            if(o.toRest === false) return;\r\n\r\n            let minSpokeAngularDist = Infinity;\r\n\r\n            for(let i = 0; i < o.restAngles.length; i++){\r\n                let angleDist = shortAngleDist(o.rotation, o.restAngles[i]);\r\n                if(Math.abs(angleDist) < Math.abs(minSpokeAngularDist)){\r\n                    minSpokeAngularDist = angleDist;\r\n                }\r\n            }\r\n\r\n            if(minSpokeAngularDist === Infinity) return;\r\n\r\n            if(Math.abs(minSpokeAngularDist) < o.homingRotateSpeed) o.rotateSpeed = minSpokeAngularDist;\r\n            else o.rotateSpeed = Math.sign(minSpokeAngularDist) * o.homingRotateSpeed;\r\n            simulateMap[1](o);\r\n            return;\r\n        }\r\n\r\n        angle = Math.atan2(p.pos.y - middleY, p.pos.x - middleX);\r\n\r\n        let minSpokeAngularDist = Infinity;\r\n\r\n        for(let i = 0; i < o.spokeAngles.length; i++){\r\n            let angleDist = shortAngleDist(o.spokeAngles[i] + o.rotation, angle);\r\n            if(Math.abs(angleDist) < Math.abs(minSpokeAngularDist)){\r\n                minSpokeAngularDist = angleDist;\r\n            }\r\n        }\r\n\r\n        if(minSpokeAngularDist === Infinity) return;\r\n\r\n        if(Math.abs(minSpokeAngularDist) < o.homingRotateSpeed) o.rotateSpeed = minSpokeAngularDist;\r\n        else o.rotateSpeed = Math.sign(minSpokeAngularDist) * o.homingRotateSpeed;\r\n\r\n        simulateMap[1](o);\r\n    }\r\n]\r\n\r\nfunction shortAngleDist(a0,a1) {\r\n    let da = (a1 - a0) % TAU;\r\n    return 2*da % TAU - da;\r\n}\r\n\r\nshared/* default */.A.simulateMapI2N = [\r\n    'pathMove',\r\n    'rotate',\r\n    'grow',\r\n    'custom',\r\n    'id',\r\n    'rotateHoming',\r\n]\r\n\r\nshared/* default */.A.simulateDefaultMap = [\r\n    // pathMove\r\n    {\r\n        currentPoint: 0,\r\n        path: [[0,0,2],[50,0,1],[-50,0,2]],\r\n    },\r\n    // rotate\r\n    {\r\n        initialRotation: 0,\r\n        rotateSpeed: 0.01,\r\n        pivotX: 300,\r\n        pivotY: 100\r\n    },\r\n    // grow\r\n    {\r\n        growSpeed: 0.006,\r\n        shrinkSpeed: 0.006,\r\n        maxGrowth: 1.25,\r\n        minGrowth: 1,\r\n        startGrowth: 1,\r\n        toStartGrowing: true,\r\n        growPivotX: 100,\r\n        growPivotY: 300\r\n    },\r\n    // custom\r\n    {},\r\n    // id\r\n    {\r\n        id: 'uniqueId'\r\n    },\r\n    // rotateHoming\r\n    {\r\n        toRest: true,\r\n        restAngles: [0, Math.PI],\r\n        homingRotateSpeed: 0.01,\r\n        detectionRadius: 200,\r\n        spokeAngles: [0, Math.PI],\r\n        pivotX: 300,\r\n        pivotY: 300\r\n    }\r\n]\r\n\r\nshared/* default */.A.simulateConstraintsMap = [\r\n    {currentPoint: [0]},\r\n    undefined,\r\n    {growSpeed: [0], shrinkSpeed: [0], minGrowth: [0.001], maxGrowth: [0.001]},\r\n    undefined,\r\n    undefined,\r\n];\r\n\r\nconst simulateSyncKeys = [\r\n    /*pathMove*/\r\n    (o, sync) => {\r\n        sync.x = o.pos.x;\r\n        sync.y = o.pos.y;\r\n        const maxTimeRemain = Math.sqrt((o.pointOn[0] - o.pointTo[0])**2 + (o.pointOn[1] - o.pointTo[1])**2) / o.speed;\r\n        sync.currentPoint = o.currentPoint + (1 - o.timeRemain / maxTimeRemain);\r\n    },\r\n    // /*rotate*/\r\n    (o, sync) => {\r\n        if(o.rotateSpeed === 0) return false;\r\n        sync.initialRotation = o.rotation;\r\n    },\r\n    // /*grow*/\r\n    undefined,\r\n    // /*custom*/\r\n    undefined,\r\n    // /*id*/\r\n    undefined,\r\n    // /*rotateHoming*/\r\n    undefined,\r\n]\r\n\r\nconst applySimulateSyncKeys = [\r\n    /*pathMove*/\r\n    (o, init) => {\r\n        if(Number.isFinite(init.x + init.y + init.currentPoint) === false) return;\r\n        init.path = o.path;\r\n        initSimulateMap[0](o, init);\r\n        o.pos.x = init.x;\r\n        o.pos.y = init.y;\r\n    },\r\n    // /*rotate*/\r\n    (o, init) => {\r\n        if(Number.isFinite(init.initialRotation) === false) return;\r\n        const r = init.initialRotation;\r\n        init.initialRotation -= o.rotation;\r\n        init.pivotX = o.pivotX;\r\n        init.pivotY = o.pivotY;\r\n        init.rotateSpeed = o.rotateSpeed;\r\n        initSimulateMap[1](o, init);\r\n        o.rotation = r;\r\n    },\r\n    // /*grow*/\r\n    undefined,\r\n    // /*custom*/\r\n    undefined,\r\n    // /*id*/\r\n    undefined,\r\n    // /*rotateHoming*/\r\n    undefined,\r\n]\r\n\r\nconst initEffectMap = [\r\n    /*bound*/\r\n    () => {},\r\n    /*kill*/\r\n    (o, params) => {\r\n        o.boundPlayer = params.boundPlayer ?? false;\r\n    },\r\n    /*bounce*/\r\n    (o, params) => {\r\n        // bounciness, decay\r\n        o.bounciness = params.bounciness;\r\n        o.decay = params.decay;\r\n    },\r\n    /*custom*/\r\n    () => {},\r\n    /*customImage*/\r\n    (o, params) => {\r\n        o.img = typeof Image === 'undefined' ? {} : new Image();\r\n        o.img.src = params.url;\r\n        o.imgLoaded = false;\r\n        o.img.onload = () => {o.imgLoaded = true;}\r\n    },\r\n    /*stopForces*/\r\n    () => {},\r\n    /*winpad*/\r\n    (o, params) => {\r\n        o.isWinpad = true;\r\n    },\r\n    /*coin*/\r\n    (o, params) => {\r\n        o.collected = false;\r\n        o.coinAmount = params.coinAmount;\r\n        o.color = params.color;\r\n    },\r\n    /*coindoor*/\r\n    (o, params) => {\r\n        o.isCoindoor = true;\r\n        o.maxCoins = o.coins = params.coindoorCoinAmount;\r\n        o.coinDoorColor = params.coinDoorColor;\r\n    },\r\n    /*checkpoint*/\r\n    (o, params) => {\r\n        o.checkpointCollected = false;\r\n        o.checkpointOffsetX = params.checkpointOffsetX;\r\n        o.checkpointOffsetY = params.checkpointOffsetY;\r\n    },\r\n    /*breakable*/\r\n    (o, params) => {\r\n        o.maxStrength = params.maxStrength;//60\r\n        o.strength = o.maxStrength;\r\n        o.regenTime = params.regenTime;\r\n        o.lastBrokeTime = -1E99;\r\n        o.healSpeed = params.healSpeed;\r\n    },\r\n    /*safe*/\r\n    () => {},\r\n    /*tp*/\r\n    (o, params) => {\r\n        o.tpx = params.tpx;\r\n        o.tpy = params.tpy;\r\n    },\r\n    /*conveyor*/\r\n    (o, params) => {\r\n        o.conveyorForce = params.conveyorForce;\r\n        o.conveyorAngle = params.conveyorAngle * Math.PI / 180;\r\n        o.conveyorAngleRotateSpeed = params.conveyorAngleRotateSpeed * Math.PI/180;\r\n        o.conveyorFriction = params.conveyorFriction;\r\n    },\r\n    /*platformer*/\r\n    (o, params) => {\r\n        o.platformerForce = params.platformerForce;\r\n        o.platformerAngle = params.platformerAngle * Math.PI/180;\r\n        o.platformerAngleRotateSpeed = params.platformerAngleRotateSpeed * Math.PI/180;\r\n        o.platformerFriction = params.platformerFriction;\r\n\r\n        // o.maxJumps = params.maxJumps// TODO: IMPLEMENT JUMPS. also TODO: add a preserve jump parameter that makes jumps conserve even if you are not bounded that frame. If disabled, platformer only lets you jump when you're on a plat THAT FRAME\r\n        o.maxJumpCooldown = params.maxJumpCooldown;// in ticks\r\n        o.jumpCooldown = 0;\r\n        o.jumpForce = params.jumpForce;\r\n        o.jumpFriction = params.jumpDecay;\r\n\r\n        o.canJumpMidair = params.canJumpMidair;\r\n        o.midairStoredJump = false;\r\n        o.justJumped = false;\r\n\r\n        o.jumpForceObj = {playerForceId: undefined};\r\n\r\n        o.touchingPlatformer = false;\r\n        o.canJump = false;\r\n    },\r\n    /*restrictAxis*/\r\n    (o, params) => {\r\n        o.axisSpeedMultX = params.axisSpeedMultX;\r\n        o.axisSpeedMultY = params.axisSpeedMultY;\r\n    },\r\n    /*snapGrid*/\r\n    (o, params) => {\r\n        o.toSnapX = params.toSnapX;\r\n        o.toSnapY = params.toSnapY;\r\n        o.snapDistanceX = params.snapDistanceX;\r\n        o.snapDistanceY = params.snapDistanceY;\r\n        o.snapCooldown = o.maxSnapCooldown = params.snapCooldown;\r\n        o.snapAngle = params.snapAngle * Math.PI / 180;\r\n        o.snapCollided = false;\r\n        o.snapAngleRotateSpeed = params.snapAngleRotateSpeed * Math.PI/180;\r\n\r\n        o.interpolatePlayerData = {time: 0, nextX: -1, nextY: -1};\r\n        // o.snapDistanceX = Math.max(35, o.snapDistanceX);\r\n        // o.snapDistanceY = Math.max(35, o.snapDistanceY);\r\n        \r\n        o.snapMagnitude = Math.sqrt(o.snapDistanceX ** 2 + o.snapDistanceY ** 2); //(o.snapDistanceX + o.snapDistanceY)/2\r\n    },\r\n    /*timeTrap*/\r\n    (o, params) => {\r\n        o.timeTrapTime = o.timeTrapMaxTime = params.timeTrapMaxTime;\r\n        o.timeTrapRecoverySpeed = params.timeTrapRecoverySpeed;\r\n        o.timeTrapToKill = params.timeTrapToKill;\r\n        o.timeTrapToShowTenth = params.timeTrapToShowTenth;\r\n        o.timeTrapIntersecting = false;\r\n    },\r\n    /*changeSize*/\r\n    (o, params) => {\r\n        o.sizeMult = params.sizeMult;\r\n        o.sizeChangePermanent = params.sizeChangePermanent;\r\n        o.lastChangeSizeColliding = o.changeSizeColliding = false;\r\n    },\r\n    /*changeSpeed*/\r\n    (o, params) => {\r\n        o.speedMult = params.speedMult;\r\n        o.speedChangePermanent = params.speedChangePermanent;\r\n    },\r\n    /*solidColor*/\r\n    (o, params) => {\r\n        o.hex = params.hex;\r\n        o.alpha = params.alpha;\r\n    },\r\n    /*invisible*/\r\n    (o, params) => {\r\n        o.cr = ()=>{};\r\n    },\r\n    /*changeMap*/\r\n    (o, params) => {\r\n        o.mapName = params.mapName;\r\n        o.difficulty = shared/* default */.A.mapDifficulties[params.mapName] ?? 0;\r\n        o.toCustomPlanet = params.toCustomPlanet;\r\n    },\r\n    /*tornado*/\r\n    (o, params) => {\r\n        o.tornadoStrength = params.tornadoStrength;\r\n    },\r\n    /*changeVignette*/\r\n    (o, params) => {\r\n        o.innerR = params.innerR;\r\n        o.innerG = params.innerG;\r\n        o.innerB = params.innerB;\r\n        o.innerSize = params.innerSize;\r\n        o.innerOpacity = params.innerOpacity;\r\n\r\n        o.outerR = params.outerR;\r\n        o.outerG = params.outerG;\r\n        o.outerB = params.outerB;\r\n        o.outerSize = params.outerSize;\r\n        o.outerOpacity = params.outerOpacity;\r\n    },\r\n    /*pushable*/\r\n    (o, params) => {\r\n        o.lastPushAngle = o.pushAngle = params.pushAngle * Math.PI / 180;\r\n        o.maxPushDistance = params.maxPushDistance;\r\n        o.idlePushBackSpeed = params.idlePushBackSpeed;\r\n        o.pushConversionRatio = params.pushConversionRatio;\r\n        o.positiveDirectionOnly = params.positiveDirectionOnly;\r\n        o.pushAngleVecX = Math.cos(o.pushAngle);\r\n        o.pushAngleVecY = Math.sin(o.pushAngle);\r\n        o.pushPercent = 0;\r\n    },\r\n    /*changeMusic*/\r\n    (o, params) => {\r\n        // either a youtube url (https://youtube.com/watch/...) or a local filepath\r\n        // that the client can access via a fetch req, e.g. sounds/... .mp3\r\n        o.musicPath = params.musicPath;\r\n        o.musicStartTime = params.musicStartTime;\r\n    },\r\n    /*changeShip*/\r\n    (o, params) => {\r\n        o.changeShipStateTo = params.changeShipStateTo;\r\n        o.initialShipAngle = params.initialShipAngle;\r\n        o.shipTurnSpeed = params.shipTurnSpeed;\r\n    },\r\n    /*changeGrapple*/\r\n    (o, params) => {\r\n        o.changeGrappleStateTo = params.changeGrappleStateTo;\r\n        o.grappleRange = params.grappleRange;\r\n        o.grappleForce = params.grappleForce;\r\n        o.grappleFric = params.grappleFric;\r\n    },\r\n    /*changeDeathTimer*/\r\n    (o, params) => {\r\n        o.changeDeathTimerStateTo = params.changeDeathTimerStateTo;\r\n        o.drainAmountWhileStandingOn = params.drainAmountWhileStandingOn;\r\n        o.deathTime = params.deathTime;\r\n\r\n        // for vignette\r\n        for(let key in shared/* default */.A.effectDefaultMap[24]){\r\n            o[key] = shared/* default */.A.effectDefaultMap[24][key];\r\n        }\r\n\r\n        o.innerR = o.outerR = 255;\r\n    }\r\n]\r\n\r\nlet freeVariable = -1;\r\nconst effectMap = [\r\n    /*bound*/\r\n    (p, res, o, id) => {\r\n        p.pos.x += res.overlapV.x;\r\n        p.pos.y += res.overlapV.y;\r\n        p.touchingNormalIndexes.push(id);\r\n    },\r\n    /*kill*/\r\n    (p, res, o) => {\r\n        if(res.overlap > 1) {\r\n            p.dead = true;\r\n            if(o.boundPlayer === true){\r\n                p.pos.x += res.overlapV.x;\r\n                p.pos.y += res.overlapV.y;\r\n            }\r\n        }\r\n    },\r\n    /*bounce*/\r\n    (p, res, o) => {\r\n        p.pos.x += res.overlapV.x;\r\n        p.pos.y += res.overlapV.y;\r\n\r\n        angle = Math.atan2(res.overlapV.y, res.overlapV.x);\r\n\r\n        p.forces.push(\r\n            Math.cos(angle) * o.bounciness,\r\n            Math.sin(angle) * o.bounciness,\r\n            o.decay\r\n        )\r\n    },\r\n    /*custom*/\r\n    () => {},\r\n    /*customImage*/\r\n    () => {},\r\n    /*stopForces*/\r\n    (p) => {\r\n        p.stopForces = true;\r\n    },\r\n    /*winpad*/\r\n    (p, res, o) => {\r\n        if(components_environment === 'editor' || shared/* default */.A.standalone === true){\r\n            if(shared/* default */.A.isExClient === true){\r\n                if(shared/* default */.A.inClearCheckMode === true){\r\n                    shared/* default */.A.inClearCheckMode = false;\r\n                    shared/* default */.A.uploadCode();\r\n                } else {\r\n                    shared/* default */.A.respawnPlayer();\r\n                }\r\n            } else {\r\n                // respawn\r\n                shared/* default */.A.respawnPlayer();\r\n                if(shared/* default */.A.inClearCheckMode === true){\r\n                    shared/* default */.A.exitClearCheckMode();\r\n                    uploadCode();\r\n                }\r\n            }\r\n        } else if(shared/* default */.A.won !== true){\r\n            shared/* default */.A.won = true;\r\n            if(shared/* default */.A.isExClient === true){\r\n                if(shared/* default */.A.mapPath === '/maps/winroom') shared/* default */.A.changeMap('/maps/hub');\r\n                else {\r\n                    shared/* default */.A.changeMap('/maps/winroom');\r\n                    shared/* default */.A.mapsBeaten[shared/* default */.A.mapPath] = true;\r\n                    localStorage.setItem('mapsBeaten', Object.keys(shared/* default */.A.mapsBeaten).join('|'));\r\n                }\r\n            } else {\r\n                // scroll\r\n                toScroll = true;\r\n\r\n                if(shared/* default */.A.tutorial === true){\r\n                    shared/* default */.A.beatCurrentTutorialMap();\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*coin*/\r\n    (p, res, o) => {\r\n        if(o.collected === true){\r\n            return;\r\n        }\r\n        o.collected = true;\r\n        for(let i = 0; i < components_obstacles.length; i++){\r\n            if(components_obstacles[i].isCoindoor === true && components_obstacles[i].coinDoorColor === o.color){\r\n                components_obstacles[i].coins -= o.coinAmount;\r\n            }\r\n        }\r\n    },\r\n    /*coindoor*/\r\n    (p, res, o) => {\r\n        if(o.coins > 0){\r\n            p.pos.x += res.overlapV.x;\r\n            p.pos.y += res.overlapV.y;\r\n        }\r\n    },\r\n    /*checkpoint*/\r\n    (p, res, o) => {\r\n        if(o.checkpointCollected === true) return;\r\n        o.checkpointCollected = true;\r\n        \r\n        shared/* default */.A.spawnPosition.x = o.topLeft.x + o.dimensions.x / 2;\r\n        shared/* default */.A.spawnPosition.y = o.topLeft.y + o.dimensions.y / 2;\r\n    },\r\n    /*breakable*/\r\n    (p, res, o, id) => {\r\n        if(o.strength > 0){\r\n            p.pos.x += res.overlapV.x;\r\n            p.pos.y += res.overlapV.y;\r\n            o.strength--;\r\n            if(o.strength < 0) o.strength = 0;\r\n            p.touchingNormalIndexes.push(id);\r\n        }\r\n\r\n        // breakable obs shouldn't regenerate on top of you\r\n        o.lastBrokeTime = window.frames;\r\n    },\r\n    /*safe*/\r\n    (p, res, o) => {\r\n        p.onSafe = true;\r\n    },\r\n    /*tp*/\r\n    (p, res, o) => {\r\n        // whoosh sound effect?\r\n        p.pos.x = o.tpx;\r\n        p.pos.y = o.tpy;\r\n        p.renderRadius = Math.min(p.renderRadius, p.sat.r / 2);\r\n    },\r\n    /*conveyor*/\r\n    (p, res, o) => {\r\n        p.forces.push(Math.cos(o.conveyorAngle) * o.conveyorForce, Math.sin(o.conveyorAngle) * o.conveyorForce, o.conveyorFriction);\r\n    },\r\n    /*platformer*/\r\n    (p, res, o, id) => {\r\n        o.touchingPlatformer = true;\r\n        o.jumpCooldown--;\r\n\r\n        // add conveyor force\r\n        p.forces.push(Math.cos(o.platformerAngle) * o.platformerForce, Math.sin(o.platformerAngle) * o.platformerForce, o.platformerFriction);\r\n\r\n        // idea: find the amount of x/y the player moves in the platformer and move the opposite to effectively lock the player's motion perpendicular to the platformer's direction\r\n        const playerVelAngle = Math.atan2(p.yv, p.xv);\r\n\r\n        const angleBetween = o.platformerAngle - playerVelAngle;\r\n\r\n        const distMovedOnPlatAngle = Math.cos(angleBetween) * Math.sqrt(p.yv ** 2 + p.xv ** 2) / p.friction;\r\n\r\n        p.pos.x -= Math.cos(o.platformerAngle) * distMovedOnPlatAngle;\r\n        p.pos.y -= Math.sin(o.platformerAngle) * distMovedOnPlatAngle;\r\n\r\n        const touchingNormalThisFrame = p.touchingNormalIndexes.length !== 0 || (p.lastTouchingNormalIndexes[p.lastTouchingNormalIndexes.length-1] >= id && o.justJumped === false) || p.touchingWall === true;\r\n        o.justJumped = false;\r\n\r\n        // checking if we were either intersecting with a normal last frame that's indexed after the obs or we are intersecting with a normal rn\r\n        if(o.jumpCooldown <= 0 && (touchingNormalThisFrame === true || (o.canJumpMidair === true && o.midairStoredJump === true))){\r\n            o.midairStoredJump = o.midairStoredJump || touchingNormalThisFrame;\r\n            o.canJump = true;\r\n            if(Math.abs(shortAngleDist(o.platformerAngle + Math.PI, playerVelAngle)) < Math.PI * 0.48 && -Math.sqrt(p.xv**2+p.yv**2)*Math.cos(angleBetween)>.1){\r\n                p.forces.push(-Math.cos(o.platformerAngle) * o.jumpForce, -Math.sin(o.platformerAngle) * o.jumpForce, o.jumpFriction);\r\n                o.jumpCooldown = o.maxJumpCooldown;\r\n                o.midairStoredJump = false;\r\n                o.justJumped = true;\r\n            }\r\n        } else {\r\n            o.canJump = false;\r\n        }\r\n    },\r\n    /*restrictAxis*/\r\n    (p, res, o) => {\r\n        p.axisSpeedMultX *= o.axisSpeedMultX;\r\n        p.axisSpeedMultY *= o.axisSpeedMultY;\r\n    },\r\n    /*snapGrid*/\r\n    (p, res, o) => {\r\n        // for those who haven't seen it, this is kind of my magnum opus of simulation functions.\r\n        // Developed a few years back later presented at a conference. Ask me (serum) about it!\r\n        // the basic idea of how it works is we have to snap to a rotated snap grid in space, so we\r\n        // translate the player to the snapGrid until its like the snap grid is unrotated. Then we snap\r\n        // by moduloing the x to the grid and then rotate back to get the final position.\r\n        o.snapCooldown--;\r\n        o.snapCollided = true;\r\n\r\n        if(o.snapCooldown <= 0 && ((o.toSnapX === true && Math.abs(p.xv) > 0.01) || (o.toSnapY === true && Math.abs(p.yv) > 0.01))){\r\n            o.snapCooldown = o.maxSnapCooldown;\r\n            let playerSnapAngle = Math.atan2(o.toSnapY === true ? p.yv : 0, o.toSnapX === true ? p.xv : 0);\r\n            o.interpolatePlayerData = {\r\n                time: Math.min(o.maxSnapCooldown-1, 5),\r\n                nextX: p.pos.x + Math.cos(playerSnapAngle) * o.snapMagnitude * 0.95,\r\n                nextY: p.pos.y + Math.sin(playerSnapAngle) * o.snapMagnitude * 0.95\r\n            };\r\n        }\r\n\r\n        if(o.interpolatePlayerData.time > 1){\r\n            o.interpolatePlayerData.time--;\r\n            p.pos.x = p.pos.x * 0.8 + 0.2 * o.interpolatePlayerData.nextX;\r\n            p.pos.y = p.pos.y * 0.8 + 0.2 * o.interpolatePlayerData.nextY;\r\n        } else {\r\n            let middleX = o.topLeft.x + o.dimensions.x / 2;\r\n            let middleY = o.topLeft.y + o.dimensions.y / 2;\r\n            // in order to snap correctly, rotate both the p and the o the negative snapAngle relative to the o's center\r\n            // this means that the player will be relatively correct to the obs and the obs will be axis-aligned\r\n            let prt = {\r\n                angle: Math.atan2(p.pos.y - middleY, p.pos.x - middleX) - o.snapAngle,\r\n                distance: Math.sqrt((p.pos.y - middleY)**2 + (p.pos.x - middleX)**2)\r\n            }\r\n\r\n            prt.x = Math.cos(prt.angle) * prt.distance;\r\n            prt.y = Math.sin(prt.angle) * prt.distance;\r\n\r\n            // applying the transform just like the norotate snap that i coded earlier\r\n            // in other words, snap the relative p to the relative grid\r\n            if(o.toSnapX === true) prt.x = prt.x * 0.4 + 0.6 * (Math.round(prt.x / o.snapDistanceX) * o.snapDistanceX);\r\n            if(o.toSnapY === true) prt.y = prt.y * 0.4 + 0.6 * (Math.round(prt.y / o.snapDistanceY) * o.snapDistanceY);\r\n\r\n            prt.angle = Math.atan2(prt.y, prt.x) + o.snapAngle;\r\n            prt.distance = Math.sqrt(prt.y**2 + prt.x**2);\r\n\r\n            // rotating back\r\n            // translating the relative coordinates back to absolute ones\r\n            p.pos.x = Math.cos(prt.angle) * prt.distance + middleX;\r\n            p.pos.y = Math.sin(prt.angle) * prt.distance + middleY;\r\n\r\n            // checking if the original point was outside of the snapgrid as a result of rotation. If so, apply translations to make it right\r\n            // if(p.pos.x < o.topLeft.x - p.speed || p.pos.x > o.topLeft.x + o.dimensions.x + p.speed){\r\n            //     p.pos.x += Math.sign(p.xv) * o.snapDistanceX*0.6;\r\n            // }\r\n\r\n            // if(p.pos.y < o.topLeft.y - p.speed || p.pos.y > o.topLeft.y + o.dimensions.y + p.speed){\r\n            //     p.pos.y += Math.sign(p.yv) * o.snapDistanceY*0.6;\r\n            // }\r\n        }\r\n    },\r\n    /*timeTrap*/\r\n    (p, res, o) => {\r\n        o.timeTrapIntersecting = true;\r\n        o.timeTrapTime--;\r\n        if(o.timeTrapTime < 0){\r\n            if(o.timeTrapToKill === true) p.dead = p.timeTrapOverrideSafe = true;\r\n            o.timeTrapTime = 0;\r\n        }\r\n    },\r\n    /*changeSize*/\r\n    (p, res, o) => {\r\n        if(o.sizeMult < 1 && o.lastChangeSizeColliding === false){\r\n            // if the player would not be colliding with the obstacle with the smaller radius,\r\n            // don't scale the player to avoid frame 1 yes frame 2 no jitter effects\r\n\r\n            // basically, we do this by effectively decreasing the obstacle's border radius (so poly would just be smaller poly)\r\n            // if the player has not already collided. If the player is colliding, we already decreased the radius so there's no need to decrease the border\r\n            res.clear();\r\n            p.sat.r *= o.sizeMult;\r\n            if(o.sat.r !== undefined){\r\n                collided = SAT.testCircleCircle(o.sat, p.sat, res);\r\n            } else {\r\n                collided = SAT.testPolygonCircle(o.sat, p.sat, res);\r\n            }\r\n            p.sat.r /= o.sizeMult;\r\n            if(collided === false){\r\n                return;\r\n            }\r\n        }\r\n        if(o.sizeChangePermanent === true){\r\n            if(o.permanentSizeChangeDone === undefined){\r\n                o.permanentSizeChangeDone = true;\r\n                p.sat.r *= o.sizeMult;\r\n            }\r\n        }\r\n        o.changeSizeColliding = true;\r\n    },\r\n    /*changeSpeed*/\r\n    (p, res, o) => {\r\n        if(o.speedChangePermanent === true){\r\n            if(o.permanentSpeedChangeDone === undefined){\r\n                o.permanentSpeedChangeDone = true;\r\n                p.speed *= o.speedMult;\r\n            }\r\n        } else {\r\n            p.axisSpeedMultX *= o.speedMult;\r\n            p.axisSpeedMultY *= o.speedMult;\r\n        }\r\n    },\r\n    /*solidColor*/\r\n    (p, res, o) => {},\r\n    /*invisible*/\r\n    (p, res, o) => {},\r\n    /*changeMap*/\r\n    (p, res, o) => {\r\n        if(shared/* default */.A.won === true) return;\r\n        shared/* default */.A.won = true;\r\n        if(shared/* default */.A.isExClient === true){\r\n            if(o.toCustomPlanet === true && o.changeMapBroken === undefined){\r\n                const headers = new Headers();\r\n                headers.append('mapname', o.mapName);\r\n                shared/* default */.A.changeMap('/customPlanet', 'GET', headers, ()=>{shared/* default */.A.won = false;o.changeMapBroken=true;});\r\n            }\r\n            else shared/* default */.A.changeMap('/maps/' + o.mapName);\r\n        } else {\r\n            // TODO: send user to the specified omni\r\n        }\r\n    },\r\n    /*tornado*/\r\n    (p, res, o) => {\r\n        p.pos.x += Math.cos(Math.random() * 360) * o.tornadoStrength;\r\n        p.pos.y += Math.sin(Math.random() * 360) * o.tornadoStrength;\r\n    },\r\n    /*changeVignette*/\r\n    (p, res, o) => {\r\n        const v = shared/* default */.A.colors.vignette;\r\n        v.inner.r = o.innerR;\r\n        v.inner.g = o.innerG;\r\n        v.inner.b = o.innerB;\r\n        v.inner.size = o.innerSize;\r\n        v.inner.opacity = o.innerOpacity;\r\n\r\n        v.outer.r = o.outerR;\r\n        v.outer.g = o.outerG;\r\n        v.outer.b = o.outerB;\r\n        v.outer.size = o.outerSize;\r\n        v.outer.opacity = o.outerOpacity;\r\n    },\r\n    /*pushable*/\r\n    (p, res, o) => {\r\n        if(o.pushAngle !== o.lastPushAngle){\r\n            o.lastPushAngle = o.pushAngle;\r\n            o.pushAngleVecX = Math.cos(o.pushAngle);\r\n            o.pushAngleVecY = Math.sin(o.pushAngle);\r\n        }\r\n\r\n        // dot product of the two vectors = amount they are pointing together\r\n        // freeVariable = pushDelta\r\n        freeVariable = -(o.pushAngleVecX * res.overlapV.x + o.pushAngleVecY * res.overlapV.y) * o.pushConversionRatio;\r\n\r\n        if(o.positiveDirectionOnly === false || freeVariable > 0){\r\n            o.pushPercent += freeVariable / o.maxPushDistance;\r\n\r\n            if(o.pushPercent > 1){\r\n                freeVariable -= (o.pushPercent-1) * o.maxPushDistance;\r\n                o.pushPercent = 1;\r\n            } else if(o.pushPercent < 0){\r\n                freeVariable -= o.pushPercent * o.maxPushDistance;\r\n                o.pushPercent = 0;\r\n            }\r\n\r\n            o.pos.x += o.pushAngleVecX * freeVariable;\r\n            o.pos.y += o.pushAngleVecY * freeVariable;\r\n        }\r\n\r\n        // test collision again to bound the player\r\n        res.clear();\r\n        if(o.sat.r !== undefined){\r\n            collided = SAT.testCircleCircle(o.sat, p.sat, res);\r\n        } else {\r\n            collided = SAT.testPolygonCircle(o.sat, p.sat, res);\r\n        }\r\n\r\n        if(collided === true){\r\n            p.pos.x += res.overlapV.x;\r\n            p.pos.y += res.overlapV.y;\r\n        }\r\n    },\r\n    /*changeMusic*/\r\n    (p, res, o) => {\r\n        shared/* default */.A.playMusic(o.musicPath, o.musicStartTime);\r\n    },\r\n    /*changeShip*/\r\n    (p, res, o) => {\r\n        if(p.ship === o.changeShipStateTo) return;\r\n            \r\n        if(shared/* default */.A.isExClient === true && o.changeShipStateTo === false) {\r\n            // send disable ship\r\n            shared/* default */.A.u4[0] = 10;\r\n            shared/* default */.A.send(shared/* default */.A.u4);\r\n        }\r\n        if(p.ship === false && o.changeShipStateTo === true) {p.shipAngle = o.initialShipAngle; p.shipTurnSpeed = o.shipTurnSpeed; }\r\n        \r\n        p.ship = o.changeShipStateTo;\r\n    },\r\n    /*changeGrapple*/\r\n    (p, res, o) => {\r\n        if(p.grapple === true && o.changeGrappleStateTo === false){\r\n            if(shared/* default */.A.isExClient === true){\r\n                // send disable grapple\r\n                shared/* default */.A.u4[0] = 12;\r\n                shared/* default */.A.send(shared/* default */.A.u4);\r\n            }\r\n            p.grappleX = p.grappleY = -1;\r\n        }\r\n\r\n        p.grapple = o.changeGrappleStateTo;\r\n        p.grappleRange = o.grappleRange;\r\n        p.grappleForce = o.grappleForce;\r\n        p.grappleFric = o.grappleFric;\r\n    },\r\n    /*changeDeathTimer*/\r\n    (p, res, o) => {\r\n        if(shared/* default */.A.isExClient === true && p.deathTimer === true && o.changeDeathTimerStateTo === false){\r\n            // send disable death timer\r\n            shared/* default */.A.u4[0] = 14;\r\n            shared/* default */.A.send(shared/* default */.A.u4);\r\n        }\r\n\r\n        if(o.changeDeathTimerStateTo === true){\r\n            if(p.deathTimer === false) p.deathTime = o.deathTime;\r\n            else p.deathTime = Math.min(p.deathTime, o.deathTime);\r\n            p.deathTime -= o.drainAmountWhileStandingOn;\r\n\r\n            // changeVignette\r\n            effectMap[24](p, res, o);\r\n        }\r\n        p.deathTimer = o.changeDeathTimerStateTo;\r\n    }\r\n]\r\n\r\nconst idleEffectMap = [\r\n    // 'bound',\r\n    undefined,\r\n    // 'kill',\r\n    undefined,\r\n    // 'bounce',\r\n    undefined,\r\n    // 'custom'\r\n    undefined,\r\n    // 'customImage'\r\n    undefined,\r\n    // 'stopForces',\r\n    undefined,\r\n    // 'winpad',\r\n    undefined,\r\n    // 'coin',\r\n    undefined,\r\n    // 'coindoor',\r\n    undefined,\r\n    // 'checkpoint',\r\n    undefined,\r\n    // 'breakable',\r\n    (o) => {\r\n        if (o.strength < o.maxStrength && window.frames-o.lastBrokeTime > o.regenTime) {\r\n            o.strength += o.healSpeed;\r\n            if(o.strength >= o.maxStrength){\r\n                o.lastBrokeTime = window.frames;\r\n                o.strength = o.maxStrength;\r\n            }\r\n        }\r\n    },\r\n    // 'safe',\r\n    undefined,\r\n    // 'tp',\r\n    undefined,\r\n    // 'conveyor',\r\n    (o) => {\r\n        o.conveyorAngle += o.conveyorAngleRotateSpeed;\r\n    },\r\n    // 'platformer',\r\n    (o) => {\r\n        o.platformerAngle += o.platformerAngleRotateSpeed;\r\n    },\r\n    // 'restrictAxis',\r\n    undefined,\r\n    // 'snapGrid',\r\n    (o) => {\r\n        o.snapAngle += o.snapAngleRotateSpeed;\r\n        if(o.snapCollided === false) o.interpolatePlayerData.time = -1;\r\n        o.snapCollided = false;\r\n    },\r\n    // 'timeTrap'\r\n    (o) => {\r\n        if(o.timeTrapIntersecting !== true) o.timeTrapTime += o.timeTrapRecoverySpeed;\r\n        if(o.timeTrapTime > o.timeTrapMaxTime) o.timeTrapTime = o.timeTrapMaxTime;\r\n        o.timeTrapIntersecting = false;\r\n    },\r\n    // 'changeSize'\r\n    (o, p) => {\r\n        if(o.sizeChangePermanent === true) return;\r\n\r\n        if(o.lastChangeSizeColliding === true && o.changeSizeColliding === false){\r\n            // exit\r\n            p.sat.r /= o.sizeMult;\r\n        } else if(o.lastChangeSizeColliding === false && o.changeSizeColliding === true){\r\n            // enter\r\n            p.sat.r *= o.sizeMult;\r\n        }\r\n\r\n        o.lastChangeSizeColliding = o.changeSizeColliding;\r\n        o.changeSizeColliding = false;\r\n    },\r\n    // 'changeSpeed'\r\n    undefined,\r\n    // 'solidColor'\r\n    undefined,\r\n    // 'invisible'\r\n    undefined,\r\n    // 'changeMap'\r\n    undefined,\r\n    // 'tornado'\r\n    undefined,\r\n    // 'changeVignette'\r\n    undefined,\r\n    // 'pushable'\r\n    (o, p) => {\r\n        // freeVariable = pushDelta\r\n        freeVariable = -o.idlePushBackSpeed;\r\n        o.pushPercent += freeVariable / o.maxPushDistance;\r\n\r\n        if(o.pushPercent > 1){\r\n            freeVariable -= (o.pushPercent-1) * o.maxPushDistance;\r\n            o.pushPercent = 1;\r\n        } else if(o.pushPercent < 0){\r\n            freeVariable -= o.pushPercent * o.maxPushDistance;\r\n            o.pushPercent = 0;\r\n        }\r\n\r\n        o.pos.x += freeVariable * Math.cos(o.pushAngle);\r\n        o.pos.y += freeVariable * Math.sin(o.pushAngle);\r\n    },\r\n    // changeMusic\r\n    undefined,\r\n    // changeShip\r\n    undefined,\r\n    // changeGrapple\r\n    undefined,\r\n    // changeDeathTimer\r\n    undefined,\r\n]\r\n\r\nshared/* default */.A.effectConstraintsMap = [\r\n    /*bound*/\r\n    undefined,\r\n    /*kill*/\r\n    undefined,\r\n    /*bounce*/\r\n    {decay: [undefined, 1]},\r\n    /*custom*/\r\n    undefined,\r\n    /*customImage*/\r\n    undefined,\r\n    /*stopForces*/\r\n    undefined,\r\n    /*winpad*/\r\n    undefined,\r\n    /*coin*/\r\n    {coinAmount: [1]},\r\n    /*coindoor*/\r\n    {coins: [1], maxCoins: [1]},\r\n    /*checkpoint*/\r\n    undefined,\r\n    /*breakable*/\r\n    {maxStrength: [1], regenTime: [0], healSpeed: [0]},\r\n    /*safe*/\r\n    undefined,\r\n    /*tp*/\r\n    undefined,\r\n    /*conveyor*/\r\n    {conveyorFriction: [undefined, 1]},\r\n    /*platformer*/\r\n    {platformerFriction: [undefined, 1], jumpFriction: [undefined, 1]},\r\n    /*restrictAxis*/\r\n    undefined,\r\n    /*snapGrid*/\r\n    {snapDistanceX: [0.1], snapDistanceY: [0.1], snapCooldown: [0]},\r\n    /*timeTrap*/\r\n    {timeTrapTime: [0], timeTrapMaxTime: [0]},\r\n    /*changeSize*/\r\n    undefined,\r\n    /*changeSpeed*/\r\n    undefined,\r\n    /*solidColor*/\r\n    undefined,\r\n    /*invisible*/\r\n    undefined,\r\n    /*changeMap*/\r\n    undefined,\r\n    /*tornado*/\r\n    undefined,\r\n    /*changeVignette*/\r\n    undefined,\r\n    /*pushable*/\r\n    {maxPushDistance: [0]},\r\n    /*changeMusic*/\r\n    undefined,\r\n    /*changeShip*/\r\n    undefined,\r\n    /*changeGrapple*/\r\n    undefined,\r\n    /*changeDeathTimer*/\r\n    undefined,\r\n]\r\n\r\nshared/* default */.A.effectMapI2N = [\r\n    'bound',\r\n    'kill',\r\n    'bounce',\r\n    'custom',\r\n    'customImage',\r\n    'stopForces',\r\n    'winpad',\r\n    'coin',\r\n    'coindoor',\r\n    'checkpoint',\r\n    'breakable',\r\n    'safe',\r\n    'tp',\r\n    'conveyor',\r\n    'platformer',\r\n    'restrictAxis',\r\n    'snapGrid',\r\n    'timeTrap',\r\n    'changeSize',\r\n    'changeSpeed',\r\n    'solidColor',\r\n    'invisible',\r\n    'changeMap',\r\n    'tornado',\r\n    'changeVignette',\r\n    'pushable',\r\n    'changeMusic',\r\n    'changeShip',\r\n    'changeGrapple',\r\n    'changeDeathTimer',\r\n]\r\n\r\nshared/* default */.A.effectDefaultMap = [\r\n    // bound\r\n    {},\r\n    // kill\r\n    {\r\n        boundPlayer: false,\r\n    },\r\n    // bounce\r\n    {\r\n        bounciness: 1,\r\n        decay: 0.98\r\n    },\r\n    // custom\r\n    {},\r\n    // customImage\r\n    {\r\n        url: 'http://tinyurl.com/dwayne-t-rj'\r\n    },\r\n    // stopForces\r\n    {},\r\n    // winpad\r\n    {},\r\n    // coin\r\n    {\r\n        coinAmount: 1,\r\n        color: '#d6d611'\r\n    },\r\n    // coindoor\r\n    {\r\n        coindoorCoinAmount: 3,\r\n        coinDoorColor: '#d6d611'\r\n    },\r\n    // checkpoint\r\n    {\r\n        checkpointOffsetX: 0,\r\n        checkpointOffsetY: 0\r\n    },\r\n    // breakable\r\n    {\r\n        maxStrength: 60,\r\n        regenTime: 100,\r\n        healSpeed: 1\r\n    },\r\n    // safe\r\n    {},\r\n    // tp\r\n    {\r\n        tpx: 100,\r\n        tpy: 100\r\n    },\r\n    // conveyor\r\n    {\r\n        conveyorForce: 0.3,\r\n        conveyorAngle: 90,\r\n        conveyorAngleRotateSpeed: 0,\r\n        conveyorFriction: 0.8\r\n    },\r\n    // platformer\r\n    {\r\n        platformerForce: 1,\r\n        platformerAngle: 90,\r\n        platformerAngleRotateSpeed: 0,\r\n        platformerFriction: 0.875,\r\n        maxJumpCooldown: 30,\r\n        jumpForce: 20,\r\n        jumpDecay: 0.95,\r\n        // maxJumps: 1\r\n    },\r\n    // restrictAxis\r\n    {\r\n        axisSpeedMultX: 0,\r\n        axisSpeedMultY: 1\r\n    },\r\n    // snapGrid\r\n    {\r\n        toSnapX: true,\r\n        toSnapY: true,\r\n        snapDistanceX: 100,\r\n        snapDistanceY: 100,\r\n        snapCooldown: 40,\r\n        snapAngle: 0,\r\n        snapAngleRotateSpeed: 0\r\n    },\r\n    // timeTrap\r\n    {\r\n        timeTrapMaxTime: 300,\r\n        timeTrapRecoverySpeed: 1.5,\r\n        timeTrapToKill: true,\r\n        timeTrapToShowTenth: false\r\n    },\r\n    // changeSize\r\n    {\r\n        sizeMult: 1.5,\r\n        sizeChangePermanent: false\r\n    },\r\n    // changeSpeed\r\n    {\r\n        speedMult: 2.5,\r\n        speedChangePermanent: false\r\n    },\r\n    // solidColor\r\n    {\r\n        hex: '#FFFFFF',\r\n        alpha: 1\r\n    },\r\n    // invisible\r\n    {},\r\n    // changeMap\r\n    {mapName: 'hub', toCustomPlanet: false},\r\n    // tornado\r\n    {tornadoStrength: 1},\r\n    // changeVignette\r\n    {\r\n        innerR: 0, innerG: 0, innerB: 0, innerSize: 0.1, innerOpacity: 0,\r\n        outerR: 0, outerG: 0, outerB: 0, outerSize: 0.5, outerOpacity: 1\r\n    },\r\n    // pushable\r\n    {\r\n        pushAngle: 180,\r\n        maxPushDistance: 100,\r\n        idlePushBackSpeed: 0.25,\r\n        positiveDirectionOnly: false,\r\n        pushConversionRatio: 0.8\r\n    },\r\n    // changeMusic\r\n    {musicPath: 'https://www.youtube.com/watch?v=OidXKRVVV70', musicStartTime: 0},\r\n    // changeShip\r\n    {changeShipStateTo: true, initialShipAngle: 0, shipTurnSpeed: Math.PI / 100},\r\n    // changeGrapple\r\n    {changeGrappleStateTo: true, grappleRange: 488, grappleForce: 0.01, grappleFric: 0.4},\r\n    // changeDeathTimer\r\n    {changeDeathTimerStateTo: true, drainAmountWhileStandingOn: 0, deathTime: 10},\r\n]\r\n\r\nconst idleEffectSyncKeys = [\r\n    // 'bound',\r\n    undefined,\r\n    // 'kill',\r\n    undefined,\r\n    // 'bounce',\r\n    undefined,\r\n    // 'custom'\r\n    undefined,\r\n    // 'customImage'\r\n    undefined,\r\n    // 'stopForces',\r\n    undefined,\r\n    // 'winpad',\r\n    undefined,\r\n    // 'coin',\r\n    undefined,\r\n    // 'coindoor',\r\n    undefined,\r\n    // 'checkpoint',\r\n    undefined,\r\n    // 'breakable',\r\n    undefined,\r\n    // 'safe',\r\n    undefined,\r\n    // 'tp',\r\n    undefined,\r\n    // 'conveyor',\r\n    (o, sync) => {\r\n        if(o.conveyorAngleRotateSpeed === 0) return false;\r\n        sync.conveyorAngle = o.conveyorAngle;\r\n    },\r\n    // 'platformer',\r\n    (o, sync) => {\r\n        if(o.platformerAngleRotateSpeed === 0) return false;\r\n        sync.platformerAngle = o.platformerAngle;\r\n    },\r\n    // 'restrictAxis',\r\n    undefined,\r\n    // 'snapGrid',\r\n    (o, sync) => {\r\n        if(o.snapAngleRotateSpeed === 0) return false;\r\n        sync.snapAngle = o.snapAngle;\r\n    },\r\n    // 'timeTrap'\r\n    undefined,\r\n    // 'changeSize'\r\n    undefined,\r\n    // 'changeSpeed'\r\n    undefined,\r\n    // 'solidColor'\r\n    undefined,\r\n    // 'invisible'\r\n    undefined,\r\n    // 'changeMap'\r\n    undefined,\r\n    // 'tornado'\r\n    undefined,\r\n    // 'changeVignette'\r\n    undefined,\r\n    // 'pushable'\r\n    undefined,\r\n    // changeMusic\r\n    undefined,\r\n    // changeShip\r\n    undefined,\r\n    // changeGrapple\r\n    undefined,\r\n    // changeDeathTimer\r\n    undefined,\r\n]\r\n\r\nconst applyIdleEffectSyncKeys = [\r\n    // 'bound',\r\n    undefined,\r\n    // 'kill',\r\n    undefined,\r\n    // 'bounce',\r\n    undefined,\r\n    // 'custom'\r\n    undefined,\r\n    // 'customImage'\r\n    undefined,\r\n    // 'stopForces',\r\n    undefined,\r\n    // 'winpad',\r\n    undefined,\r\n    // 'coin',\r\n    undefined,\r\n    // 'coindoor',\r\n    undefined,\r\n    // 'checkpoint',\r\n    undefined,\r\n    // 'breakable',\r\n    undefined,\r\n    // 'safe',\r\n    undefined,\r\n    // 'tp',\r\n    undefined,\r\n    // 'conveyor',\r\n    (o) => {\r\n        if(Number.isFinite(o.conveyorAngle) === false) return;\r\n        o.conveyorAngle = conveyorAngle;\r\n    },\r\n    // 'platformer',\r\n    (o) => {\r\n        if(Number.isFinite(o.platformerAngle) === false) return;\r\n        o.platformerAngle = platformerAngle;\r\n    },\r\n    // 'restrictAxis',\r\n    undefined,\r\n    // 'snapGrid',\r\n    (o) => {\r\n        if(Number.isFinite(o.snapAngle) === false) return;\r\n        o.snapAngle = snapAngle;\r\n    },\r\n    // 'timeTrap'\r\n    undefined,\r\n    // 'changeSize'\r\n    undefined,\r\n    // 'changeSpeed'\r\n    undefined,\r\n    // 'solidColor'\r\n    undefined,\r\n    // 'invisible'\r\n    undefined,\r\n    // 'changeMap'\r\n    undefined,\r\n    // 'tornado'\r\n    undefined,\r\n    // 'changeVignette'\r\n    undefined,\r\n    // 'pushable'\r\n    undefined,\r\n    // changeMusic\r\n    undefined,\r\n    // changeShip\r\n    undefined,\r\n    // changeGrapple\r\n    undefined,\r\n    // changeDeathTimer\r\n    undefined,\r\n]\r\n\r\nshared/* default */.A.generateSyncMaps = () => {\r\n    if(shared/* default */.A.simulateToSync !== undefined) return;\r\n    shared/* default */.A.simulateToSync = new Map(); shared/* default */.A.idleEffectToSync = new Map();\r\n    for(let i = 0; i < simulateMap.length; i++){\r\n        if(simulateSyncKeys[i] !== undefined){\r\n            shared/* default */.A.simulateToSync.set(simulateMap[i], simulateSyncKeys[i]);\r\n        }\r\n    }\r\n\r\n    for(let i = 0; i < idleEffectMap.length; i++){\r\n        if(idleEffectSyncKeys[i] !== undefined){\r\n            shared/* default */.A.idleEffectToSync.set(idleEffectMap[i], idleEffectSyncKeys[i]);\r\n        }\r\n    }\r\n}\r\n\r\nshared/* default */.A.generateApplySyncMaps = () => {\r\n    if(shared/* default */.A.simulateToApplySync !== undefined) return;\r\n    shared/* default */.A.simulateToApplySync = new Map(); shared/* default */.A.idleEffectToApplySync = new Map();\r\n    for(let i = 0; i < simulateMap.length; i++){\r\n        if(applySimulateSyncKeys[i] !== undefined){\r\n            shared/* default */.A.simulateToApplySync.set(simulateMap[i], applySimulateSyncKeys[i]);\r\n        }\r\n    }\r\n\r\n    for(let i = 0; i < idleEffectMap.length; i++){\r\n        if(applyIdleEffectSyncKeys[i] !== undefined){\r\n            shared/* default */.A.idleEffectToApplySync.set(idleEffectMap[i], applyIdleEffectSyncKeys[i]);\r\n        }\r\n    }\r\n}\r\n\r\nconst renderEffectMap = [\r\n    /*bound*/\r\n    (o) => { \r\n        ctx.fillStyle = shared/* default */.A.colors.tile;\r\n    },\r\n    /*kill*/\r\n    (o) => {\r\n        ctx.fillStyle = o.boundPlayer === true ? '#c70000' : '#9e0000';\r\n        ctx.strokeStyle = 'black';\r\n        ctx.toStroke = true;\r\n        ctx.lineWidth = 4;\r\n    },\r\n    /*bounce*/\r\n    (o) => {\r\n        ctx.fillStyle = 'blue';\r\n    },\r\n    /*custom*/\r\n    (o) => {\r\n        ctx.toFill = false;\r\n\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.save();\r\n            ctx.clip();\r\n\r\n            ctx.drawImage(shared/* default */.A.starImg, o.topLeft.x, o.topLeft.y, o.dimensions.x, o.dimensions.y);\r\n\r\n            ctx.restore();\r\n        }\r\n    },\r\n    /*customImage*/\r\n    (o) => {\r\n        ctx.toFill = false;\r\n        if(o.imgLoaded === false) return;\r\n\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.save();\r\n            ctx.clip();\r\n\r\n            ctx.drawImage(o.img, o.topLeft.x, o.topLeft.y, o.dimensions.x, o.dimensions.y);\r\n\r\n            ctx.restore();\r\n        }\r\n    },\r\n    /*stopForces*/\r\n    (o) => {\r\n        ctx.fillStyle = 'orange';\r\n        ctx.strokeStyle = 'black';\r\n        ctx.lineWidth = 6;\r\n        ctx.globalAlpha = 0.1;\r\n        ctx.toStroke = true;\r\n    },\r\n    /*winpad*/\r\n    (o) => {\r\n        ctx.fillStyle = `hsl(${window.frames*1000/60/12},50%,50%)`;\r\n        ctx.shadowColor = ctx.fillStyle;\r\n        ctx.shadowBlur = 15;\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.shadowBlur = 0;\r\n        }\r\n    },\r\n    /*coin*/\r\n    (o) => {\r\n        ctx.fillStyle = o.color;\r\n        if(o.collected === true){\r\n            ctx.globalAlpha = 0.2;\r\n        } else {\r\n            ctx.globalAlpha = 0.8;\r\n        }\r\n        if(o.coinAmount !== 1){\r\n            ctx.cleanUpFunction = () => {\r\n                let middleX = o.topLeft.x + o.dimensions.x/2;\r\n                let middleY = o.topLeft.y + o.dimensions.y/2; \r\n\r\n                ctx.fillStyle = shared/* default */.A.colors.tile;//'#313131';\r\n                ctx.font = `${Math.min(60, o.dimensions.x/4, o.dimensions.y/4)}px Inter`;\r\n                ctx.textAlign = 'center';\r\n                ctx.textBaseline = 'middle';\r\n                ctx.fillText(\r\n                    Math.max(0, o.coinAmount),\r\n                    middleX,\r\n                    middleY\r\n                );\r\n            }\r\n        }\r\n    },\r\n    /*coindoor*/\r\n    (o) => {\r\n        ctx.fillStyle = shared/* default */.A.colors.tile;\r\n        ctx.globalAlpha = o.coins <= 0 ? 0.5 : 1;\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.fillStyle = o.coinDoorColor;\r\n\r\n            let middleX = o.topLeft.x + o.dimensions.x/2;\r\n            let middleY = o.topLeft.y + o.dimensions.y/2; \r\n\r\n            ctx.beginPath();\r\n            ctx.roundRect(middleX-o.dimensions.x/4, middleY-o.dimensions.y/4, o.dimensions.x/2, o.dimensions.y/2, Math.min(o.dimensions.x,o.dimensions.y)/20);\r\n            ctx.fill();\r\n            ctx.closePath();\r\n    \r\n            ctx.fillStyle = shared/* default */.A.colors.tile;//'#313131'//'#484a00';\r\n            ctx.font = `${Math.min(60, o.dimensions.x/4, o.dimensions.y/4)}px Inter`;\r\n            ctx.textAlign = 'center';\r\n            ctx.textBaseline = 'middle';\r\n            ctx.fillText(\r\n                Math.max(0, o.coins),\r\n                middleX,\r\n                middleY\r\n            );\r\n        }\r\n    },\r\n    /*checkpoint*/\r\n    (o) => {\r\n        if (o.checkpointCollected === true) {\r\n            ctx.fillStyle = '#0fba09';\r\n            ctx.globalAlpha = 0.15;\r\n        } else {\r\n            ctx.fillStyle = '#05962b';\r\n            ctx.globalAlpha = 0.8;\r\n        }\r\n        // ctx.cleanUpFunction = () => {\r\n        //     ctx.globalAlpha /= 5;\r\n        //     const grd = ctx.createRadialGradient(o.pos.x, o.pos.y, 0, o.pos.x, o.pos.y, (o.dimensions.x + o.dimensions.y)/3);\r\n\r\n        //     grd.addColorStop(0, \"rgba(255,255,255,1)\");\r\n        //     grd.addColorStop(1, \"rgba(255,255,255,0)\");\r\n\r\n        //     ctx.fillStyle = grd;\r\n        //     renderEffectMap[7](o);\r\n        // }\r\n    },\r\n    /*breakable*/\r\n    (o) => {\r\n        ctx.fillStyle = shared/* default */.A.colors.tile;// to make it into hex\r\n        ctx.fillStyle = components_blendColor('#000000', ctx.fillStyle, 0.5);\r\n        ctx.globalAlpha = o.strength / o.maxStrength;\r\n    },\r\n    /*safe*/\r\n    (o) => {\r\n        // #8c8c8c hex, .25 globalAlpha\r\n        ctx.fillStyle = 'rgba(140,140,140,.25)';\r\n        ctx.strokeStyle = 'black';\r\n        ctx.lineWidth = 4;\r\n        ctx.toStroke = true;\r\n\r\n        // ctx.fillStyle = shared.safeColor || \"#8c8c8c\",\r\n        // ctx.globalAlpha = .25,\r\n        // ctx.beginPath(),\r\n        // ctx.arc(pos.x, pos.y, obstacle.r, 0, 2 * Math.PI),\r\n        // ctx.fill(),\r\n        // ctx.strokeStyle = \"black\",\r\n        // ctx.lineWidth = lineWidth,\r\n        // ctx.globalAlpha = 1,\r\n        // ctx.stroke();\r\n    },\r\n    /*tp*/\r\n    (o) => {\r\n        ctx.fillStyle = '#38ab30';\r\n    },\r\n    /*conveyor*/\r\n    (o) => {\r\n        ctx.fillStyle = shared/* default */.A.colors.tile;\r\n        ctx.globalAlpha = 0.1;\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.save();\r\n            ctx.clip();\r\n\r\n            ctx.globalAlpha = 1;\r\n            for(let x = o.topLeft.x + 50; x <= o.topLeft.x + o.dimensions.x + 50; x += 100){\r\n                for(let y = o.topLeft.y + 50; y <= o.topLeft.y + o.dimensions.y + 50; y += 100){\r\n                    ctx.translate(x,y);\r\n                    ctx.rotate(o.conveyorAngle+Math.PI/2);\r\n                    ctx.drawImage(shared/* default */.A.arrowImg, -50, -50, 100, 100);\r\n                    ctx.rotate(-o.conveyorAngle-Math.PI/2);\r\n                    ctx.translate(-x,-y);\r\n                }\r\n            }\r\n\r\n            ctx.restore();\r\n            // ctx.beginPath();\r\n            // ctx.fillStyle = 'red';\r\n            // ctx.arc(o.topLeft.x, o.topLeft.y, 30, 0, Math.PI * 2);\r\n            // ctx.fill();\r\n            // ctx.closePath();\r\n        }\r\n    },\r\n    /*platformer*/\r\n    (o) => {\r\n        ctx.fillStyle = shared/* default */.A.colors.tile;\r\n        ctx.globalAlpha = 0.1;\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.save();\r\n            ctx.clip();\r\n\r\n            const offsetX = (window.frames*1000/60 * o.platformerForce * Math.cos(o.platformerAngle) / 10) % 100 - 100;\r\n            const offsetY = (window.frames*1000/60 * o.platformerForce * Math.sin(o.platformerAngle) / 10) % 100 - 100;\r\n\r\n            ctx.globalAlpha = 1;\r\n            for(let x = o.topLeft.x + offsetX + 50; x <= o.topLeft.x + o.dimensions.x + 50; x += 100){\r\n                for(let y = o.topLeft.y + offsetY + 50; y <= o.topLeft.y + o.dimensions.y + 50; y += 100){\r\n                    ctx.translate(x,y);\r\n                    ctx.rotate(o.platformerAngle+Math.PI/2);\r\n                    ctx.drawImage(shared/* default */.A.arrowImg, -50, -50, 100, 100);\r\n                    ctx.rotate(-o.platformerAngle-Math.PI/2);\r\n                    ctx.translate(-x,-y);\r\n                }\r\n            }\r\n\r\n            ctx.restore();\r\n\r\n            // rendering 👍 if player can jump\r\n            // if there ever is to be more emojis like this, then make an array of emojis that i can push to that render on top of each other every frame (w/ priority? sorted?)\r\n            if(o.canJump === true && o.touchingPlatformer === true){\r\n                const player = shared/* default */.A.players[shared/* default */.A.selfId];\r\n                if(player !== undefined){\r\n                    ctx.globalAlpha = 1;\r\n                    ctx.fillStyle = 'white';\r\n                    ctx.font = `56px Inter`;\r\n                    ctx.textAlign = 'center';\r\n                    ctx.textBaseline = 'middle';\r\n                    ctx.fillText('👍', player.pos.x, player.pos.y - player.sat.r - 50);\r\n                }\r\n            }\r\n            o.touchingPlatformer = false;\r\n        }\r\n    },\r\n    /*restrictAxis*/\r\n    (o) => {\r\n        if(o.axisSpeedMultX < 0 && o.axisSpeedMultY < 0){\r\n            ctx.strokeStyle = 'red';\r\n        } else if(o.axisSpeedMultX < 0 || o.axisSpeedMultY < 0){\r\n            ctx.strokeStyle = '#ff6969';\r\n        } else if(o.axisSpeedMultY > 1 || o.axisSpeedMultY > 1){\r\n            ctx.strokeStyle = '#c5c500';\r\n        } else {\r\n            ctx.strokeStyle = 'white';\r\n        }\r\n        ctx.lineWidth = 4;\r\n        ctx.toFill = false;\r\n        ctx.toStroke = true;\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.lineWidth = 3;\r\n            ctx.save();\r\n\r\n            ctx.translate(o.topLeft.x + o.dimensions.x / 2, o.topLeft.y + o.dimensions.y / 2);\r\n\r\n            ctx.clip();\r\n\r\n            ctx.globalAlpha = o.axisSpeedMultX > 1 ? 0.8 : (Math.max(0.3,o.axisSpeedMultX < 0 ? -o.axisSpeedMultX : 1-o.axisSpeedMultX));\r\n            ctx.strokeStyle = o.axisSpeedMultX < 0 ? 'red' : (o.axisSpeedMultX > 1 ? '#c5c500' : 'white');\r\n\r\n            ctx.beginPath();\r\n            for(let x = -o.dimensions.x/2; x <= o.dimensions.x/2; x += 100){\r\n                ctx.moveTo(x,-o.dimensions.y/2);\r\n                ctx.lineTo(x,o.dimensions.y/2);\r\n            }\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n\r\n            ctx.globalAlpha = o.axisSpeedMultY > 1 ? 0.8 : (Math.max(0.3,o.axisSpeedMultY < 0 ? -o.axisSpeedMultY : 1-o.axisSpeedMultY));\r\n            ctx.strokeStyle = o.axisSpeedMultY < 0 ? 'red' : (o.axisSpeedMultY > 1 ? '#c5c500' : 'white');\r\n\r\n            ctx.beginPath();\r\n            for(let y = -o.dimensions.y/2; y <= o.dimensions.y/2; y += 100){\r\n                ctx.moveTo(-o.dimensions.x/2,y);\r\n                ctx.lineTo(o.dimensions.x/2,y);\r\n            }\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n\r\n            ctx.restore();\r\n        }\r\n    },\r\n    /*snapGrid*/\r\n    (o) => {\r\n        ctx.fillStyle = '#00008a';\r\n        ctx.globalAlpha = 0.1;\r\n        ctx.toClip = true;\r\n\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.save();\r\n            ctx.clip();\r\n\r\n            ctx.strokeStyle = components_blendColor('#0f0000', '#000000', Math.max(0,o.snapCooldown) / o.maxSnapCooldown);\r\n            ctx.lineWidth = 4;\r\n            ctx.globalAlpha = 0.17;\r\n\r\n            let middleX = o.topLeft.x + o.dimensions.x/2;\r\n            let middleY = o.topLeft.y + o.dimensions.y/2; \r\n            ctx.translate(middleX, middleY);\r\n\r\n            o.snapRotateMovementExpansion = {\r\n                base: (Math.max(o.dimensions.x,o.dimensions.y)**2/Math.sqrt(o.dimensions.x**2+o.dimensions.y**2))\r\n            }\r\n            o.snapRotateMovementExpansion.x = Math.ceil(o.snapRotateMovementExpansion.base/o.snapDistanceX+1)*o.snapDistanceX;\r\n            o.snapRotateMovementExpansion.y = Math.ceil(o.snapRotateMovementExpansion.base/o.snapDistanceY+1)*o.snapDistanceY;\r\n\r\n            ctx.rotate(o.snapAngle);\r\n\r\n            let renderPath = new Path2D();\r\n            if(o.toSnapX === true){\r\n                for(let x = -o.snapRotateMovementExpansion.x; x <= o.snapRotateMovementExpansion.x; x += o.snapDistanceX){\r\n                    renderPath.rect(-10 + x, -o.snapRotateMovementExpansion.x - 10, 20, 2 * o.snapRotateMovementExpansion.x + 20);\r\n                    // ctx.moveTo(x,-o.snapRotateMovementExpansion);\r\n                    // ctx.lineTo(x,o.snapRotateMovementExpansion);\r\n                }\r\n            }\r\n\r\n            if(o.toSnapY === true){\r\n                for(let y = -o.snapRotateMovementExpansion.y; y <= o.snapRotateMovementExpansion.y; y += o.snapDistanceY){\r\n                    renderPath.rect(-o.snapRotateMovementExpansion.y - 10, -10 + y, 2 * o.snapRotateMovementExpansion.y + 20, 20);\r\n                    // ctx.moveTo(-o.snapRotateMovementExpansion,y);\r\n                    // ctx.lineTo(o.snapRotateMovementExpansion,y);\r\n                }\r\n            }\r\n            ctx.stroke(renderPath);\r\n            ctx.closePath();\r\n            \r\n            // drawing snapMagnitude indicator\r\n            const player = shared/* default */.A.players[shared/* default */.A.selfId];\r\n            if(player.pos.x + o.snapMagnitude < middleX - o.dimensions.x/2 || player.pos.x - o.snapMagnitude > middleX + o.dimensions.x/2 || player.pos.y + o.snapMagnitude < middleY - o.dimensions.y/2 || player.pos.y - o.snapMagnitude > middleY + o.dimensions.y/2){\r\n                ctx.restore();\r\n                return;\r\n            }\r\n            ctx.strokeStyle = 'grey';\r\n            ctx.fillStyle = 'black';\r\n            ctx.globalAlpha = 0.2;\r\n            ctx.beginPath();\r\n\r\n            ctx.clip(renderPath);\r\n\r\n            ctx.rotate(-o.snapAngle);\r\n            ctx.translate(-middleX,-middleY);\r\n\r\n            ctx.arc(player.pos.x, player.pos.y, o.snapMagnitude, 0, Math.PI*2);\r\n            ctx.stroke();\r\n            ctx.fill();\r\n            ctx.closePath();\r\n\r\n            ctx.restore();\r\n        }\r\n    },\r\n    /*timeTrap*/\r\n    (o) => {\r\n        let middleX = o.topLeft.x + o.dimensions.x/2;\r\n        let middleY = o.topLeft.y + o.dimensions.y/2; \r\n\r\n        let grd = ctx.createRadialGradient(middleX, middleY, 0, middleX, middleY, Math.min(100, (o.dimensions.x + o.dimensions.y)/3));\r\n\r\n        if(o.timeTrapToKill === false){\r\n            grd.addColorStop(0, \"rgba(199,199,199,0)\");\r\n            grd.addColorStop(1, \"rgba(199,199,199,1)\");\r\n        } else {\r\n            grd.addColorStop(0, \"rgba(199,0,0,0)\");\r\n            grd.addColorStop(1, \"rgba(199,0,0,1)\");\r\n        }\r\n\r\n        ctx.fillStyle = grd;\r\n        ctx.globalAlpha = Math.max(0.12, 0.5 - o.timeTrapTime / o.timeTrapMaxTime / 2);\r\n        \r\n        ctx.cleanUpFunction = () => {\r\n            ctx.globalAlpha = Math.max(0.3, o.timeTrapTime / o.timeTrapMaxTime / 3);\r\n            ctx.fillStyle = 'white';\r\n            ctx.font = `${Math.min(o.dimensions.x, o.dimensions.y)/2}px Inter`;\r\n            ctx.textAlign = 'center';\r\n            ctx.textBaseline = 'middle';\r\n\r\n            ctx.fillText(o.timeTrapToShowTenth === true ? Math.round(o.timeTrapTime/60 * 10) / 10 : Math.round(o.timeTrapTime/60), middleX, middleY);\r\n        }\r\n    },\r\n    /*changeSize*/\r\n    (o) => {\r\n        if(o.sizeChangePermanent === true){\r\n            ctx.toStroke = true;\r\n            ctx.lineWidth = 10;\r\n            ctx.lineDashOffset = -window.frames*1000/60 / 15;\r\n            if (o.sizeMult > 1){\r\n                ctx.strokeStyle = '#0e30ad';\r\n            } else {\r\n                ctx.strokeStyle = '#1c1852';\r\n            }\r\n            ctx.setLineDash([30, 40]);\r\n\r\n            ctx.cleanUpFunction = () => {\r\n                ctx.setLineDash([]);\r\n            }\r\n        }\r\n        \r\n        if(o.permanentSizeChangeDone === true) {\r\n            ctx.toFill = false;\r\n        } else {\r\n            if (o.sizeMult > 1){\r\n                ctx.fillStyle = '#0e30ad';\r\n            } else {\r\n                ctx.fillStyle = '#1c1852';\r\n            }\r\n        }\r\n        \r\n        ctx.globalAlpha = 0.28;\r\n    },\r\n    /*changeSpeed*/\r\n    (o) => {\r\n        if(o.speedChangePermanent === true){\r\n            ctx.toStroke = true;\r\n            ctx.lineWidth = 10;\r\n            ctx.lineDashOffset = -window.frames*1000/60 / 15;\r\n            ctx.strokeStyle = '#eba500';\r\n            ctx.setLineDash([30, 40]);\r\n\r\n            ctx.cleanUpFunction = () => {\r\n                ctx.setLineDash([]);\r\n            }\r\n        }\r\n\r\n        if(o.permanentSpeedChangeDone === true) {\r\n            ctx.toFill = false;\r\n        } else {\r\n            ctx.fillStyle = '#eba500';\r\n            ctx.toStroke = true;\r\n            ctx.lineWidth = 3;\r\n            ctx.strokeStyle = ctx.fillStyle;\r\n        }\r\n        ctx.globalAlpha = 0.25;\r\n\r\n        // permanents should dissapear upon use i think\r\n    },\r\n    /*solidColor*/\r\n    (o) => {\r\n        ctx.fillStyle = o.hex;\r\n        if(o.isText === true)ctx.globalAlpha = 0;\r\n        else ctx.globalAlpha = o.alpha;\r\n    },\r\n    /*invisible*/\r\n    (o) => {},\r\n    /*changeMap*/\r\n    (o) => {\r\n        // ctx.fillStyle = `hsl(${window.frames*1000/60/12},50%,50%)`;\r\n        // ctx.shadowColor = ctx.fillStyle;\r\n        // ctx.shadowBlur = 15;\r\n        // ctx.cleanUpFunction = () => {\r\n        //     ctx.shadowBlur = 0;\r\n        // }\r\n\r\n        if(o.toCustomPlanet === true){\r\n            ctx.fillStyle = '#646464';\r\n\r\n            ctx.cleanUpFunction = () => {\r\n                ctx.font = `1000 ${Math.min(o.dimensions.x, o.dimensions.y)/2}px Inter`;\r\n                ctx.textAlign = 'center';\r\n                ctx.textBaseline = 'middle';\r\n                ctx.fillStyle = '#464646';\r\n                ctx.translate(o.topLeft.x + o.dimensions.x/2, o.topLeft.y + o.dimensions.y/2);\r\n\r\n                if(o.randomSineOffset === undefined) o.randomSineOffset = Math.random() * Math.PI * 2;\r\n                const r = Math.sin(window.frames / 36 + o.randomSineOffset) * 0.32;\r\n                ctx.rotate(r);\r\n                ctx.fillText('?', 0, 0);\r\n                ctx.rotate(-r);\r\n                ctx.translate(-(o.topLeft.x + o.dimensions.x/2), -(o.topLeft.y + o.dimensions.y/2));\r\n\r\n                ctx.fillStyle = 'white';\r\n                ctx.font = `${o.dimensions.x / 3.5}px Inter`;\r\n\r\n                // same fillText\r\n                ctx.textAlign = 'center';\r\n                ctx.textBaseline = 'middle';\r\n\r\n                ctx.globalAlpha = Math.min(1,((shared/* default */.A.players[shared/* default */.A.selfId].pos.y + canvas.h/2) - (o.topLeft.y)) / (o.dimensions.y));\r\n\r\n                ctx.globalAlpha *= 0.8;\r\n                ctx.fillText(\r\n                    o.mapName,\r\n                    o.topLeft.x + o.dimensions.x / 2,\r\n                    o.topLeft.y - o.dimensions.y / 4\r\n                );\r\n                ctx.globalAlpha = 1;\r\n            }\r\n            return;\r\n        }\r\n\r\n        let t = (1+Math.sin(window.frames/36))/2 * (o.difficulty % 1);\r\n\r\n        ctx.fillStyle = components_blendColor(difficultyImageColors[Math.floor(o.difficulty)],difficultyImageColors[Math.min(8,Math.ceil(o.difficulty))],t);\r\n\r\n        ctx.cleanUpFunction = () => {\r\n            if(o.dimensions.x > o.dimensions.y){\r\n                ctx.translate(o.dimensions.x - o.dimensions.y + o.topLeft.x, o.topLeft.y);\r\n            } else {\r\n                ctx.translate(o.topLeft.x, o.dimensions.y - o.dimensions.x + o.topLeft.y);\r\n            }\r\n\r\n            ctx.lineCap = 'round';\r\n            ctx.globalAlpha = t;\r\n            difficultyImageMap[Math.min(8,Math.ceil(o.difficulty))](Math.min(o.dimensions.x, o.dimensions.y));\r\n\r\n            ctx.globalAlpha = 1 - t;\r\n            difficultyImageMap[Math.floor(o.difficulty)](Math.min(o.dimensions.x, o.dimensions.y));\r\n            ctx.lineCap = 'square';\r\n            ctx.globalAlpha = 1;\r\n\r\n            if(o.dimensions.x > o.dimensions.y){\r\n                ctx.translate(-(o.dimensions.x - o.dimensions.y + o.topLeft.x), -o.topLeft.y);\r\n            } else {\r\n                ctx.translate(-o.topLeft.x, -(o.dimensions.y - o.dimensions.x + o.topLeft.y));\r\n            }\r\n\r\n            ctx.font = `${o.dimensions.x / 3.5}px Inter`;\r\n\r\n            if(shared/* default */.A.mapsBeaten['/maps/' + o.mapName] === true){\r\n                const baseColor = components_blendColor(\r\n                    difficultyImageColors[Math.floor(o.difficulty)],\r\n                    difficultyImageColors[Math.ceil(o.difficulty)],\r\n                    t\r\n                );\r\n                ctx.fillStyle = shared/* default */.A.blendColor(baseColor, '#000000', 0.12);//'#5fbe50'\r\n            } else {\r\n                ctx.fillStyle = 'white';\r\n            }\r\n            \r\n            ctx.textAlign = 'center';\r\n            ctx.textBaseline = 'middle';\r\n\r\n            ctx.globalAlpha = Math.min(1,((shared/* default */.A.players[shared/* default */.A.selfId].pos.y + canvas.h/2) - (o.topLeft.y)) / (o.dimensions.y));\r\n            ctx.fillText(\r\n                o.mapName.toUpperCase().replace('O','o'),\r\n                o.topLeft.x + o.dimensions.x / 2,\r\n                o.topLeft.y - o.dimensions.y / 4\r\n            );\r\n            ctx.globalAlpha = 1;\r\n\r\n            // // line marking - scrapped\r\n            // ctx.fillStyle = 'black';\r\n            // ctx.fillRect(\r\n            //     topX,\r\n            //     topY + (1 - o.difficulty%1) * (o.dimensions.y*0.95),\r\n            //     o.dimensions.x / 5,\r\n            //     o.dimensions.y * .05\r\n            // )\r\n        }\r\n    },\r\n    /*tornado*/\r\n    (o) => {\r\n        ctx.fillStyle = '#c0bbc9';\r\n        ctx.globalAlpha = 0.25;\r\n    },\r\n    /*changeVignette*/\r\n    (o) => {\r\n        ctx.toFill = false;\r\n    },\r\n    /*pushable*/\r\n    (o) => {\r\n        ctx.fillStyle = shared/* default */.A.colors.tile;\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.save();\r\n            ctx.clip();\r\n\r\n            ctx.strokeStyle = 'white';\r\n            ctx.lineWidth = 3;\r\n            ctx.globalAlpha = 0.25;\r\n            ctx.beginPath();\r\n            o.topLeft = generateTopLeftCoordinates(o);\r\n            ctx.lineTo(o.topLeft.x, o.topLeft.y);\r\n            ctx.lineTo(o.topLeft.x + o.dimensions.x, o.topLeft.y + o.dimensions.y);\r\n            ctx.stroke();\r\n            ctx.beginPath();\r\n            ctx.lineTo(o.topLeft.x + o.dimensions.x, o.topLeft.y);\r\n            ctx.lineTo(o.topLeft.x, o.topLeft.y + o.dimensions.y);\r\n            ctx.stroke();\r\n            ctx.globalAlpha = 1;\r\n            ctx.lineWidth = 3;\r\n\r\n            ctx.restore();\r\n\r\n            // TODO: white lines where the angles are? oneDirectional parameter?\r\n            // also TODO: \r\n        }\r\n    },\r\n    /*changeMusic*/\r\n    (o) => {\r\n        ctx.toFill = false;\r\n    },\r\n    /*changeShip*/\r\n    (o) => {\r\n        ctx.fillStyle = o.changeShipStateTo === true ? 'rgba(0,0,255,0.3)' : 'rgba(255,255,0,0.3)';\r\n        ctx.strokeStyle = o.changeShipStateTo === true ? 'blue' : 'yellow';\r\n        ctx.lineDashOffset = -window.frames*1000/60 * 150 / 1000;\r\n        ctx.lineWidth = 4;\r\n        ctx.setLineDash([30, 30]);\r\n        ctx.toStroke = true;\r\n\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.setLineDash([]);\r\n        }\r\n    },\r\n    /*changeGrapple*/\r\n    (o) => {\r\n        let middleX = o.topLeft.x + o.dimensions.x/2;\r\n        let middleY = o.topLeft.y + o.dimensions.y/2; \r\n\r\n        let grd = ctx.createRadialGradient(middleX, middleY, 0, middleX, middleY, Math.sqrt(o.dimensions.x**2 + o.dimensions.y**2)/2);\r\n\r\n        let t;\r\n        if(o.changeGrappleStateTo === true){\r\n            t = (window.frames*1000/60 / 1600) % 0.33;\r\n            grd.addColorStop(1, \"rgba(127,127,255,0)\");\r\n            grd.addColorStop((0.67+t), \"rgba(127,127,255,1)\");\r\n\r\n            grd.addColorStop((0.66+t), \"rgba(127,127,255,0)\");\r\n            grd.addColorStop((0.34+t), \"rgba(127,127,255,1)\");\r\n\r\n            grd.addColorStop((0.33+t), \"rgba(127,127,255,0)\");\r\n            grd.addColorStop((0.0101+t), \"rgba(127,127,255,1)\");\r\n\r\n            if(0.01+t > 0)grd.addColorStop(0.01+t, \"rgba(127,127,255,0)\");\r\n            grd.addColorStop(0, \"rgba(127,127,255,1)\");\r\n        } else {\r\n            t = 0.33 - (window.frames*1000/60 / 1600) % 0.33;\r\n            grd.addColorStop(1, \"rgba(255,255,127,0)\");\r\n            grd.addColorStop((0.67+t), \"rgba(255,255,127,1)\");\r\n\r\n            grd.addColorStop((0.66+t), \"rgba(255,255,127,0)\");\r\n            grd.addColorStop((0.34+t), \"rgba(255,255,127,1)\");\r\n\r\n            grd.addColorStop((0.33+t), \"rgba(255,255,127,0)\");\r\n            grd.addColorStop((0.0101+t), \"rgba(255,255,127,1)\");\r\n\r\n            if(0.01+t > 0)grd.addColorStop(0.01+t, \"rgba(255,255,127,0)\");\r\n            grd.addColorStop(0, \"rgba(255,255,127,1)\");\r\n        }\r\n\r\n        ctx.fillStyle = grd;\r\n        // ctx.globalAlpha = Math.abs(Math.sin(window.frames*1000/60 / 760));\r\n    },\r\n    /*changeDeathTimer*/\r\n    (o) => {\r\n        if(shared/* default */.A.skullImg === undefined){\r\n            shared/* default */.A.skullImg = new Image();\r\n            shared/* default */.A.skullImg.src = 'https://svgsilh.com/svg/1294357.svg';\r\n            shared/* default */.A.skullImg.onload = () => {\r\n                shared/* default */.A.skullImgLoaded = true;\r\n            }\r\n            return;\r\n        }\r\n\r\n        ctx.fillStyle = o.changeDeathTimerStateTo === true ? 'red' : 'white';\r\n        ctx.globalAlpha = 0.4;\r\n\r\n        if(shared/* default */.A.skullImgLoaded === false) return;\r\n\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.globalAlpha = 1;\r\n            let middleX = o.topLeft.x + o.dimensions.x/2;\r\n            let middleY = o.topLeft.y + o.dimensions.y/2; \r\n\r\n            let minDimension = Math.min(o.dimensions.x, o.dimensions.y);\r\n\r\n            ctx.drawImage(shared/* default */.A.skullImg, middleX - minDimension/2, middleY - minDimension/2, minDimension, minDimension);\r\n        }\r\n    },\r\n]\r\n\r\nconst difficultyImageColors = shared/* default */.A.difficultyImageColors = [\r\n    /*0 - Peaceful*/\r\n    \"#6cd95b\",\r\n    /*1 - Moderate*/\r\n    \"#58ccb3\",\r\n    /*2 - Difficult*/\r\n    \"#0a77bf\",\r\n    /*3 - Hardcore*/\r\n    \"#3528e0\",\r\n    /*4 - Exhausting*/\r\n    \"#a142c9\",\r\n    /*5 - Relentless*/\r\n    \"#e32d8b\",\r\n    /*6 - Agonizing*/\r\n    \"#fc5434\",\r\n    /*7 - Terrorizing*/\r\n    \"#fc3a3a\",\r\n    /*8 - Cataclysmic*/\r\n    \"#c95d5d\"\r\n]\r\n\r\nconst difficultyImageMap = shared/* default */.A.difficultyImageMap = [\r\n    /*0 - Peaceful*/\r\n    (size) => {\r\n        ctx.globalAlpha *= 0.3;\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.lineWidth = size * 3 / 40;\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(size/2, size/2, size / 4, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    },\r\n    /*1 - Moderate*/\r\n    (size) => {\r\n        ctx.strokeStyle = \"#288a75\";\r\n        ctx.lineWidth = size * 3 / 40;\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(size * 5/12, size * 5/12, size / 4, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(size * 7/12, size * 7/12, size / 4, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    },\r\n    /*2 - Difficult*/\r\n    (size) => {\r\n        ctx.globalAlpha *= 0.3;\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.lineWidth = size * 3 / 40;\r\n        ctx.strokeRect(size / 4, size / 4, size / 2, size / 2);\r\n    },\r\n    /*3 - Hardcore*/\r\n    (size) => {\r\n        ctx.globalAlpha *= 0.3;\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.lineWidth = size * 3 / 40;\r\n        ctx.strokeRect(size / 6, size / 6, size * 5 / 12, size * 5 / 12);\r\n        ctx.strokeRect(size * 5 / 12, size * 5 / 12, size * 5 / 12, size * 5 / 12);\r\n    },\r\n    /*4 - Exhausting*/\r\n    (size) => {\r\n        ctx.globalAlpha *= 0.3;\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.lineWidth = size * 3 / 40;\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 5 / 24, size * 12 / 24);\r\n        ctx.lineTo(size * 12 / 24, size * 19 / 24);\r\n        ctx.lineTo(size * 19 / 24, size * 12 / 24);\r\n        ctx.lineTo(size * 12 / 24, size * 5 / 24);\r\n        ctx.lineTo(size * 5 / 24, size * 12 / 24);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    },\r\n    /*5 - Relentless*/\r\n    (size) => {\r\n        ctx.strokeStyle = \"#991d5d\";\r\n        ctx.lineWidth = size * 3 / 40;\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 1 / 6, size * 3 / 6);\r\n        ctx.lineTo(size * 3 / 6, size * 5 / 6);\r\n        ctx.lineTo(size * 5 / 6, size * 3 / 6);\r\n        ctx.lineTo(size * 3 / 6, size * 1 / 6);\r\n        ctx.lineTo(size * 1 / 6, size * 3 / 6);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n\r\n        ctx.strokeRect(size * 5 / 24, size * 5 / 24, size * 14 / 24, size * 14 / 24);\r\n    },\r\n    /*6 - Agonizing*/\r\n    (size) => {\r\n        ctx.fillStyle = \"#d94a2e\";\r\n        ctx.fillRect(0, size * 80 / 120, size * 120 / 120, size * 40 / 120);\r\n        ctx.fillRect(size * 40 / 120, size * 60 / 120, size * 40 / 120, size * 20 / 120);\r\n        ctx.beginPath();\r\n        ctx.lineTo(0, size * 80 / 120);\r\n        ctx.lineTo(size * 20 / 120, size * 40 / 120);\r\n        ctx.lineTo(size * 40 / 120, size * 80 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 40 / 120, size * 60 / 120);\r\n        ctx.lineTo(size * 60 / 120, size * 20 / 120);\r\n        ctx.lineTo(size * 80 / 120, size * 60 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 80 / 120, size * 80 / 120);\r\n        ctx.lineTo(size * 100 / 120, size * 40 / 120);\r\n        ctx.lineTo(size * 120 / 120, size * 80 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    },\r\n    /*7 - Terrorizing*/\r\n    (size) => {\r\n        ctx.fillStyle = \"#d63131\";\r\n\r\n        ctx.fillRect(size * 40 / 120, 0, size * 40 / 120, size * 20 / 120);\r\n        ctx.fillRect(size * 40 / 120, size * 100 / 120, size * 40 / 120, size * 20 / 120);\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(0, size * 120 / 120);\r\n        ctx.lineTo(size * 20 / 120, size * 80 / 120);\r\n        ctx.lineTo(size * 40 / 120, size * 120 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 40 / 120, size * 100 / 120);\r\n        ctx.lineTo(size * 60 / 120, size * 60 / 120);\r\n        ctx.lineTo(size * 80 / 120, size * 100 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 80 / 120, size * 120 / 120);\r\n        ctx.lineTo(size * 100 / 120, size * 80 / 120);\r\n        ctx.lineTo(size * 120 / 120, size * 120 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    \r\n        ctx.beginPath();\r\n        ctx.lineTo(0, 0);\r\n        ctx.lineTo(size * 20 / 120, size * 40 / 120);\r\n        ctx.lineTo(size * 40 / 120, 0);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 40 / 120, size * 20 / 120);\r\n        ctx.lineTo(size * 60 / 120, size * 60 / 120);\r\n        ctx.lineTo(size * 80 / 120, size * 20 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 80 / 120, 0);\r\n        ctx.lineTo(size * 100 / 120, size * 40 / 120);\r\n        ctx.lineTo(size * 120 / 120, 0);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    },\r\n    /*8 - Cataclysmic*/\r\n    (size) => {\r\n        ctx.fillStyle = \"#8c4141\";\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(0, 0);\r\n        ctx.lineTo(size * 40 / 120, 0);\r\n        ctx.lineTo(0, size * 40 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 40 / 120, 0);\r\n        ctx.lineTo(size * 60 / 120, size * 20 / 120);\r\n        ctx.lineTo(size * 80 / 120, 0);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 120 / 120, 0);\r\n        ctx.lineTo(size * 80 / 120, 0);\r\n        ctx.lineTo(size * 120 / 120, size * 40 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 120 / 120, size * 40 / 120);\r\n        ctx.lineTo(size * 100 / 120, size * 60 / 120);\r\n        ctx.lineTo(size * 120 / 120, size * 80 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 120 / 120, size * 120 / 120);\r\n        ctx.lineTo(size * 80 / 120, size * 120 / 120);\r\n        ctx.lineTo(size * 120 / 120, size * 80 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 40 / 120, size * 120 / 120);\r\n        ctx.lineTo(size * 60 / 120, size * 100 / 120);\r\n        ctx.lineTo(size * 80 / 120, size * 120 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(0, size * 120 / 120);\r\n        ctx.lineTo(size * 40 / 120, size * 120 / 120);\r\n        ctx.lineTo(0, size * 80 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(0, size * 80 / 120);\r\n        ctx.lineTo(size * 20 / 120, size * 60 / 120);\r\n        ctx.lineTo(0, size * 40 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    },\r\n];\r\n\r\n// an obstacle is an ECS\r\nconst components_obstacles = shared/* default */.A.obstacles = [];\r\n\r\nshared/* default */.A.spawnPosition = {x: 100, y: 100};\r\n// a player is also an ecs\r\nshared/* default */.A.createPlayer = () => {\r\n    create(0/*circle*/, [], [], /*no simulate/ effects*/ {x: shared/* default */.A.spawnPosition.x, y: shared/* default */.A.spawnPosition.y, r: /*24.5*/49.5})\r\n    const player = components_obstacles.pop();\r\n    player.axisSpeedMultX = player.axisSpeedMultY = 1;\r\n    player.touchingNormalIndexes = [];\r\n    player.lastTouchingNormalIndexes = [];\r\n    player.renderRadius = player.lastAliveRadius = player.sat.r;\r\n    player.xv = player.yv = player.xa = player.ya = 0;\r\n    player.interpX = player.interpY = 0;\r\n    player.speed = player.baseSpeed = 7.167;\r\n    player.dead = false;\r\n    player.onSafe = false;\r\n    player.touchingWall = false;\r\n    player.stopForces = false;\r\n    player.forces = [];\r\n    player.id = undefined;\r\n    player.dev = !shared/* default */.A.isProd; /*dev only for players[selfId]*/ player.god = false;\r\n    player.friction = 0.4;\r\n    player.ship = false; player.shipAngle = 0; player.shipTurnSpeed = Math.PI / 100;\r\n    player.deathTime = 0; player.deathTimer = false;\r\n    player.grappleX = -1; player.grappleY = -1; player.grapple = false;\r\n    player.grappleRange = 488; player.grappleForce = 0.01; player.grappleFric = 0.414;\r\n    player.timeTrapOverrideSafe = false;\r\n    return player;\r\n}\r\n\r\nshared/* default */.A.players = [];\r\n\r\nif(shared/* default */.A.isExClient !== true || shared/* default */.A.isEditor === true) {shared/* default */.A.players.push(shared/* default */.A.createPlayer()); shared/* default */.A.selfId = 0; shared/* default */.A.mapDimensions = {x:2000,y:2000}}\r\nif(shared/* default */.A.isExClient === true || components_environment === 'server') shared/* default */.A.mapDimensions = {x: 2000, y: 2000};\r\n\r\n/* harmony default export */ const components = (simulate);\n;// ./eXclient/input.js\n\r\nshared/* default */.A.mouse = {\r\n    screen: {\r\n        x: -1,\r\n        y: -1\r\n    },\r\n    world: {\r\n        x: -1,\r\n        y: -1\r\n    }\r\n}\r\n\r\nshared/* default */.A.mouseX = -1;\r\nshared/* default */.A.mouseY = -1;\r\nshared/* default */.A.scrollLocked = false;\r\nshared/* default */.A.mouseDownFunctions = [];\r\nshared/* default */.A.mouseMoveFunctions = [];\r\nshared/* default */.A.mouseUpFunctions = [];\r\nshared/* default */.A.mouseOut = false;\r\nshared/* default */.A.pageX = -1;\r\nshared/* default */.A.pageY = -1;\r\n\r\nshared/* default */.A.dragging = false;\r\n\r\nwindow.onmousedown = (e) => {}\r\n\r\nwindow.onmousemove = (e) => {}\r\n\r\nwindow.onmouseup = () => {}\r\n\r\nwindow.oncontextmenu = (e) => { return e.preventDefault(); };\r\n\r\nconst Controls = {\r\n    KeyW: 'up',\r\n    KeyS: 'down',\r\n    KeyA: 'left',\r\n    KeyD: 'right',\r\n    ArrowUp: 'up',\r\n    ArrowDown: 'down',\r\n    ArrowLeft: 'left',\r\n    ArrowRight: 'right',\r\n    ShiftLeft: 'shift',\r\n    ShiftRight: 'shift',\r\n    KeyC: 'action1',\r\n    KeyJ: 'action1',\r\n    KeyY: 'action1'\r\n};\r\n\r\nshared/* default */.A.input = {\r\n    up: false,\r\n    down: false,\r\n    left: false,\r\n    right: false,\r\n    shift: false,\r\n    action1: false,// grapple\r\n};\r\n\r\nlet chatOpen = false, zenMode = false;\r\nwindow.onkeydown = handleKey;\r\nwindow.onkeyup = handleKey;\r\n\r\n\r\nconst {encodeAtPosition: input_encodeAtPosition} = utils;\r\n\r\nconst chat = document.querySelector('.chat');\r\nconst chatDiv = document.querySelector('.chatDiv');\r\nconst visChatDiv = document.querySelector('.chat-div');\r\nconst lbDiv = document.querySelector('.leaderboard-div');\r\n\r\nfunction handleKey(e){\r\n    if(chatOpen === true){\r\n        if(e.type === 'keydown' && e.code === 'Enter'){\r\n            let msg = chat.value.trim();\r\n            if(msg === '/reset'){\r\n                shared/* default */.A.changeMap('/maps/hub');\r\n            }\r\n            else if(msg === '/help'){\r\n                shared/* default */.A.addChatMessage(`: <b>Evades X is a futuristic dodging game where anything is possible!</b><br><br><b>Global keybinds:</b><br>WASD/Arrow Keys - Move<br>r - Respawn<br>z - Toggle chat and leaderboard<br>t - Toggle timer<br><br><b>Commands:</b><br>/reset - teleports you to the hub world<br>...and that's it lol, more commands coming soon`, 'system');\r\n            }\r\n            else if(shared/* default */.A.isProd === false && msg.slice(0,6) === '/tpmap'){\r\n                shared/* default */.A.changeMap(`/maps/` + msg.slice(7).toLowerCase());\r\n            }\r\n            else if(shared/* default */.A.isProd === false && msg.slice(0,6) === '/scale'){\r\n                const num = parseFloat(msg.slice(7));\r\n                shared/* default */.A.changeCameraScale(num);\r\n            }\r\n            else if(shared/* default */.A.isProd === false && msg.slice(0,4) === '/map'){\r\n                shared/* default */.A.initImportMap(msg.slice(5));\r\n            }\r\n            // else if(shared.zones !== undefined && msg.slice(0,7).toLowerCase() === '/tpzone'){\r\n            //     const num = parseInt(msg.slice(8));\r\n            //     for(let i = 0; i < shared.zones.length; i++){\r\n            //         if(shared.zones[i].zone === num){\r\n            //             shared.players[shared.selfId].pos.x = shared.zones[i].x;\r\n            //             shared.players[shared.selfId].pos.y = shared.zones[i].y;\r\n            //             break;\r\n            //         }\r\n            //     }\r\n            // }\r\n            else if(msg.slice(0,5) === '/mute' && (shared/* default */.A.username === 'trit' || shared/* default */.A.username === 'Serum0017')){\r\n                const user = msg.slice(6);\r\n                const buf = new Uint8Array(user.length + 1);\r\n                buf[0] = 5;\r\n                input_encodeAtPosition(user, buf, 1);\r\n                shared/* default */.A.send(buf);\r\n            }\r\n            else if(msg.slice(0,4) === '/ban' && (shared/* default */.A.username === 'trit' || shared/* default */.A.username === 'Serum0017')){\r\n                const user = msg.slice(5);\r\n                const buf = new Uint8Array(user.length + 1);\r\n                buf[0] = 6;\r\n                input_encodeAtPosition(user, buf, 1);\r\n                shared/* default */.A.send(buf);\r\n            }\r\n            \r\n            else if(msg.length !== 0){\r\n                msg = shared/* default */.A.username + ': ' + msg;\r\n                const buf = new Uint8Array(msg.length + 2);\r\n                buf[0] = 7;// type 0 - set username and join game\r\n                // ['normal', 'system', 'dev', 'guest']\r\n                if(shared/* default */.A.players[shared/* default */.A.selfId].dev === true) buf[1] = 2;\r\n                else if(shared/* default */.A.players[shared/* default */.A.selfId].guest === true) buf[1] = 3; \r\n                input_encodeAtPosition(msg, buf, 2);\r\n                shared/* default */.A.send(buf);\r\n            }\r\n            chat.value = '';\r\n            chat.blur();\r\n            chatDiv.classList.add('hidden');\r\n            chatOpen = false;\r\n        }\r\n        // TODO\r\n    } else {\r\n        if (e.repeat) return e.preventDefault();\r\n\r\n        if(e.type === 'keydown'){\r\n            if(e.code === 'KeyO' && shared/* default */.A.isProd === false && shared/* default */.A.players[shared/* default */.A.selfId].dev === true && shared/* default */.A.isEditor === false){\r\n                shared/* default */.A.players[shared/* default */.A.selfId].god = !shared/* default */.A.players[shared/* default */.A.selfId].god;\r\n                const buf = new Uint8Array(2);\r\n                buf[0] = 8;\r\n                buf[1] = shared/* default */.A.players[shared/* default */.A.selfId].god;\r\n                shared/* default */.A.send(buf);\r\n                return e.preventDefault();\r\n            } else if(e.code === 'KeyR' && shared/* default */.A.players[shared/* default */.A.selfId].dead === true){\r\n                shared/* default */.A.respawnPlayer();\r\n            } else if(e.code === 'Enter'){\r\n                chatOpen = true;\r\n                chatDiv.classList.remove('hidden');\r\n                chat.focus();\r\n            } else if (e.code === 'KeyZ' && shared/* default */.A.isEditor !== true) {\r\n                if (!zenMode) {\r\n                    chat.blur();\r\n                    if (!visChatDiv.classList.contains('hideChat')) {\r\n                        visChatDiv.classList.add('hideChat');\r\n                    }\r\n                    if (!lbDiv.classList.contains('hideLB')) {\r\n                        lbDiv.classList.add('hideLB');\r\n                    }\r\n                } else {\r\n                    if (visChatDiv.classList.contains('hideChat')) {\r\n                        visChatDiv.classList.remove('hideChat');\r\n                        visChatDiv.scrollTop = visChatDiv.scrollHeight;\r\n                    }\r\n                    if (lbDiv.classList.contains('hideLB')) {\r\n                        lbDiv.classList.remove('hideLB');\r\n                    }\r\n                }\r\n                zenMode = !zenMode;\r\n            } else if(e.code === 'KeyT' && shared/* default */.A.isEditor !== true) {\r\n                shared/* default */.A.toggleTimer();\r\n            } else if (e.code === 'KeyU' && shared/* default */.A.isProd === false){\r\n                shared/* default */.A.renderDebug = !shared/* default */.A.renderDebug;\r\n            }\r\n        }\r\n\r\n        if (Controls[e.code] != undefined) {\r\n            shared/* default */.A.input[Controls[e.code]] = e.type === 'keydown';\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}\r\n\r\nlet importMapFn;\r\nshared/* default */.A.initImportMap = async (str) => {\r\n    if(importMapFn === undefined) importMapFn = (await __webpack_require__.e(/* import() */ 78).then(__webpack_require__.bind(__webpack_require__, 78))).default;\r\n    importMapFn(str);\r\n}\r\n\r\nshared/* default */.A.touchMode = false;\r\nshared/* default */.A.touchAngle = -1;\r\nwindow.ontouchstart = () => {\r\n    shared/* default */.A.touchMode = true;\r\n}\r\nwindow.ontouchmove = (e) => {\r\n    const t = e.changedTouches[0];\r\n    if(t === undefined) return;\r\n\r\n    if(t.pageX < window.innerWidth / 2){\r\n        shared/* default */.A.input.left = true;\r\n        shared/* default */.A.input.right = false;\r\n    } else {\r\n        shared/* default */.A.input.left = false;\r\n        shared/* default */.A.input.right = true;\r\n    }\r\n\r\n    if(t.pageY < window.innerHeight / 2){\r\n        shared/* default */.A.input.up = true;\r\n        shared/* default */.A.input.down = false;\r\n    } else {\r\n        shared/* default */.A.input.up = false;\r\n        shared/* default */.A.input.down = true;\r\n    }\r\n    shared/* default */.A.touchAngle = Math.atan2(t.pageY - window.innerHeight / 2, t.pageX - window.innerWidth/2);\r\n}\r\nwindow.ontouchend = () => {\r\n    shared/* default */.A.touchMode = false;\r\n}\n;// ./client/sound.js\n\r\n\r\nconst { until: sound_until } = utils;\r\n\r\nshared/* default */.A.hasLoadedNewMusic = false;\r\nlet lastLoadedLink;\r\nlet audioIframe;\r\nlet lastPlayTime = 0;\r\n\r\n// TODO: optimize? \"sub\" time takes about 1ms, so we could optimize by statically creating an element\r\nshared/* default */.A.stopMusic = async (toAwait=false) => {\r\n    if(toAwait === true){\r\n        let returnBig = false;\r\n        let callTime = Date.now();\r\n        await sound_until(() => {\r\n            if(audioIframe === undefined) return false;\r\n            // we only want to stop music if we played it before this fn is called\r\n            if(lastPlayTime > callTime){\r\n                returnBig = true;\r\n            }\r\n            return true;\r\n        });\r\n        if(returnBig === true) return; \r\n    } else if(audioIframe === undefined) {\r\n        return;\r\n    }\r\n\r\n    audioIframe.remove();\r\n    audioIframe = undefined;\r\n    lastLoadedLink = undefined;\r\n}\r\n\r\nshared/* default */.A.playMusic = async (link, startTime=0) => {\r\n    shared/* default */.A.hasLoadedNewMusic = true;\r\n\r\n    await sound_until(() => {return navigator.userActivation.hasBeenActive === true});\r\n    if(link === lastLoadedLink) return;\r\n\r\n    shared/* default */.A.stopMusic();\r\n    lastLoadedLink = link;\r\n\r\n    \r\n    audioIframe = document.createElement('iframe');\r\n    audioIframe.frameborder = \"0\";\r\n    audioIframe.setAttribute(\"frameBorder\", \"0\");\r\n    audioIframe.width = 0;\r\n    audioIframe.height = 0;\r\n    \r\n    const videoId = link.split('?v=')[1];\r\n    audioIframe.src = `https://www.youtube.com/embed/${videoId}?autoplay=1&loop=1&playlist=${videoId}&enablejsapi=1${startTime === 0 ? '' : \"&start=\" + startTime}`;\r\n    \r\n    audioIframe.allow = \"autoplay\";\r\n    audioIframe.security = \"restricted\";\r\n\r\n    audioIframe.style.position = \"fixed\";\r\n    audioIframe.classList.add('yt');\r\n    audioIframe.id = videoId;\r\n\r\n    // this is about 1ms...\r\n    // console.time(\"sub\");\r\n    document.body.appendChild(audioIframe);\r\n    // console.timeEnd(\"sub\");\r\n\r\n    lastPlayTime = Date.now();\r\n}\r\n\r\nshared/* default */.A.playMusicIndefinitely = async (link) => {\r\n    lastLoadedLink = undefined;\r\n    await shared/* default */.A.playMusic(link);\r\n    audioIframe = undefined;\r\n}\r\n\r\nshared/* default */.A.reloadMusic = () => {\r\n    let linkToPlay = lastLoadedLink;\r\n    lastLoadedLink = undefined;\r\n    shared/* default */.A.playMusic(linkToPlay);\r\n}\n;// ./eXserver/maps/_metadata.js\n\r\nshared/* default */.A.mapDifficulties = Object.freeze({\r\n    winroom: 0,\r\n    hub: 0,\r\n    pom: 0,\r\n    popb: 0.26,\r\n    poca: 1.01,\r\n    pospd: 2.77,\r\n    pos: 3.01,\r\n    pols: 5.01,\r\n    povv: 2.26,\r\n    poqt: 5.3,\r\n    podc: 6.01,\r\n    podd: 7.3,\r\n    posc: 0.56,\r\n    poph: 4.27,\r\n    powc: 1.92,\r\n    posh: 1.38,\r\n});\r\n\r\nshared/* default */.A.mapLeaderboardNames = Object.freeze({\r\n    winroom: 'Winroom',\r\n    hub: 'Hub',\r\n    pom: 'Planet of 🗺️',\r\n    popb: 'Planet of Peaceful Beginnings',\r\n    poca: 'Planet of Conveyor Abuse',\r\n    pospd: 'Planet of Speed (nyoom)',\r\n    pos: 'Planet of Safezones',\r\n    pols: 'Planet of Lost Sanity',\r\n    povv: 'Planet of The Vibing Vault',\r\n    poqt: 'Planet of Quick Thinking',\r\n    podc: 'Planet of Difficulty Chart',\r\n    posc: 'Planet of Simple Challenges',\r\n    poph: 'Planet of Prehistory',\r\n    posh: `Planet of ${Math.random() < 0.01 ? 'Suspicious' : 'Slight'} Hurdles`,\r\n    powc: `Planet of Wacky Craze`\r\n});\n;// ./eXclient/index.js\nshared/* default */.A.isExClient = true;\r\n\r\n\r\n// init rendering\r\n\r\n\r\n// handle client-server communication\r\n\r\n\r\n// game stuff\r\n\r\n\r\n// keyboard input\r\n\r\n\r\n// background music\r\n\r\n\r\n// mapName to difficulty dict\r\n\r\n\r\n// shared, like window but not accessible in console\r\n\r\n\r\n// joining game\r\nconst eXclient_gui = shared/* default */.A.gui = document.querySelector('.gui');\r\nshared/* default */.A.mapPath = '';\r\nshared/* default */.A.username = '';\r\nshared/* default */.A.authId = -1;\r\n\r\nshared/* default */.A.startGame = () => {\r\n    if(shared/* default */.A.isEditor === false) eXclient_gui.classList.remove('hidden');\r\n    lastTime = performance.now();\r\n    shared/* default */.A.respawnPlayer();\r\n    run();\r\n    console.log('game starting');\r\n}\r\n\r\n// gameloop\r\nlet lastTime=0, now=0;\r\nwindow.frames = 0; shared/* default */.A.accum = 0;\r\nshared/* default */.A.FRAME_TIME = 1000 / 60; shared/* default */.A.offtabSync = false;\r\nfunction run(){\r\n    requestAnimationFrame(run);\r\n\r\n    now = performance.now();\r\n    shared/* default */.A.accum += now - lastTime;\r\n    lastTime = now;\r\n\r\n    // Get the map from another player\r\n    if(shared/* default */.A.accum > 2000) {\r\n        if(shared/* default */.A.players.length <= 1){\r\n            shared/* default */.A.accum = 0;\r\n        } else {\r\n            shared/* default */.A.accum = -Infinity;\r\n            shared/* default */.A.offtabSync = true; \r\n            const buf = new Uint8Array(1);\r\n            buf[0] = 16;\r\n            shared/* default */.A.send(buf);\r\n        }\r\n    }\r\n\r\n    while(shared/* default */.A.accum >= 0){\r\n        shared/* default */.A.accum -= shared/* default */.A.FRAME_TIME;\r\n        components();\r\n    }\r\n\r\n    sendUpdatePack();\r\n    shared/* default */.A.render();\r\n}\r\n\r\nconst u12 = new Uint8Array(12);\r\nconst f12 = new Float32Array(u12.buffer);\r\n\r\nconst u8 = new Uint8Array(8);\r\nconst f8 = new Float32Array(u8.buffer);\r\n\r\nshared/* default */.A.u4 = new Uint8Array(4);\r\n\r\nlet eXclient_lastX=Infinity, eXclient_lastY=Infinity;\r\nlet lastRadius=Infinity, lastShipAngle = Infinity;\r\nlet lastDead = false;\r\nfunction sendUpdatePack(){\r\n    const player = shared/* default */.A.players[shared/* default */.A.selfId];\r\n    if(Math.abs(player.pos.x - eXclient_lastX) > .1 || Math.abs(player.pos.y - eXclient_lastY) > .1){\r\n        u12[0] = 4;// type 4 - player x and y\r\n        f12[1] = player.pos.x;\r\n        f12[2] = player.pos.y;\r\n        shared/* default */.A.send(u12);\r\n    }\r\n\r\n    if(player.grapple === true){\r\n        u12[0] = 11;\r\n        f12[1] = player.grappleX;\r\n        f12[2] = player.grappleY;\r\n        shared/* default */.A.send(u12);\r\n        u12[0] = 4;\r\n    }\r\n\r\n    if(player.ship === true && lastShipAngle !== player.shipAngle){\r\n        lastShipAngle = player.shipAngle;\r\n        u8[0] = 9;\r\n        f8[1] = player.shipAngle;\r\n        shared/* default */.A.send(u8);\r\n    }\r\n\r\n    if(player.deathTimer === true){\r\n        u8[0] = 13;\r\n        f8[1] = player.deathTime;\r\n        shared/* default */.A.send(u8);\r\n    }\r\n\r\n    if(player.dead !== lastDead){\r\n        lastDead = player.dead;\r\n        shared/* default */.A.u4[0] = 15;\r\n        shared/* default */.A.u4[1] = player.dead === true ? 1 : 0;\r\n        shared/* default */.A.send(shared/* default */.A.u4);\r\n    }\r\n\r\n    if(player.sat.r !== lastRadius){\r\n        lastRadius = player.sat.r;\r\n        u8[0] = 22;\r\n        f8[1] = player.sat.r;\r\n        shared/* default */.A.send(u8);\r\n    }\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///608\n")},763:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst shared = {};\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (shared);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzYzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbW5pc2VydmVyLy4vc2hhcmVkL3NoYXJlZC5qcz84NjRlIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHNoYXJlZCA9IHt9O1xyXG5leHBvcnQgZGVmYXVsdCBzaGFyZWQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///763\n")}},__webpack_module_cache__={},inProgress,dataWebpackPrefix;function __webpack_require__(g){var I=__webpack_module_cache__[g];if(void 0!==I)return I.exports;var n=__webpack_module_cache__[g]={id:g,exports:{}};return __webpack_modules__[g](n,n.exports,__webpack_require__),n.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.n=g=>{var I=g&&g.__esModule?()=>g.default:()=>g;return __webpack_require__.d(I,{a:I}),I},__webpack_require__.d=(g,I)=>{for(var n in I)__webpack_require__.o(I,n)&&!__webpack_require__.o(g,n)&&Object.defineProperty(g,n,{enumerable:!0,get:I[n]})},__webpack_require__.f={},__webpack_require__.e=g=>Promise.all(Object.keys(__webpack_require__.f).reduce(((I,n)=>(__webpack_require__.f[n](g,I),I)),[])),__webpack_require__.u=g=>g+".bundle.js",__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(g){if("object"==typeof window)return window}}(),__webpack_require__.o=(g,I)=>Object.prototype.hasOwnProperty.call(g,I),inProgress={},dataWebpackPrefix="omniserver:",__webpack_require__.l=(g,I,n,c)=>{if(inProgress[g])inProgress[g].push(I);else{var e,l;if(void 0!==n)for(var C=document.getElementsByTagName("script"),t=0;t<C.length;t++){var A=C[t];if(A.getAttribute("src")==g||A.getAttribute("data-webpack")==dataWebpackPrefix+n){e=A;break}}e||(l=!0,(e=document.createElement("script")).charset="utf-8",e.timeout=120,__webpack_require__.nc&&e.setAttribute("nonce",__webpack_require__.nc),e.setAttribute("data-webpack",dataWebpackPrefix+n),e.src=g),inProgress[g]=[I];var r=(I,n)=>{e.onerror=e.onload=null,clearTimeout(a);var c=inProgress[g];if(delete inProgress[g],e.parentNode&&e.parentNode.removeChild(e),c&&c.forEach((g=>g(n))),I)return I(n)},a=setTimeout(r.bind(null,void 0,{type:"timeout",target:e}),12e4);e.onerror=r.bind(null,e.onerror),e.onload=r.bind(null,e.onload),l&&document.head.appendChild(e)}},__webpack_require__.r=g=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(g,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(g,"__esModule",{value:!0})},(()=>{var g;__webpack_require__.g.importScripts&&(g=__webpack_require__.g.location+"");var I=__webpack_require__.g.document;if(!g&&I&&(I.currentScript&&"SCRIPT"===I.currentScript.tagName.toUpperCase()&&(g=I.currentScript.src),!g)){var n=I.getElementsByTagName("script");if(n.length)for(var c=n.length-1;c>-1&&(!g||!/^http(s?):/.test(g));)g=n[c--].src}if(!g)throw new Error("Automatic publicPath is not supported in this browser");g=g.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=g})(),(()=>{var g={792:0};__webpack_require__.f.j=(I,n)=>{var c=__webpack_require__.o(g,I)?g[I]:void 0;if(0!==c)if(c)n.push(c[2]);else{var e=new Promise(((n,e)=>c=g[I]=[n,e]));n.push(c[2]=e);var l=__webpack_require__.p+__webpack_require__.u(I),C=new Error;__webpack_require__.l(l,(n=>{if(__webpack_require__.o(g,I)&&(0!==(c=g[I])&&(g[I]=void 0),c)){var e=n&&("load"===n.type?"missing":n.type),l=n&&n.target&&n.target.src;C.message="Loading chunk "+I+" failed.\n("+e+": "+l+")",C.name="ChunkLoadError",C.type=e,C.request=l,c[1](C)}}),"chunk-"+I,I)}};var I=(I,n)=>{var c,e,[l,C,t]=n,A=0;if(l.some((I=>0!==g[I]))){for(c in C)__webpack_require__.o(C,c)&&(__webpack_require__.m[c]=C[c]);t&&t(__webpack_require__)}for(I&&I(n);A<l.length;A++)e=l[A],__webpack_require__.o(g,e)&&g[e]&&g[e][0](),g[e]=0},n=self.webpackChunkomniserver=self.webpackChunkomniserver||[];n.forEach(I.bind(null,0)),n.push=I.bind(null,n.push.bind(n))})(),__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__(608)})();