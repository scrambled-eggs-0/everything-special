(()=>{var __webpack_modules__={796:(g,I,n)=>{var c={"./arrow.png":[25,25],"./mouse.webp":[196,196]};function e(g){if(!n.o(c,g))return Promise.resolve().then((()=>{var I=new Error("Cannot find module '"+g+"'");throw I.code="MODULE_NOT_FOUND",I}));var I=c[g],e=I[0];return n.e(I[1]).then((()=>n.t(e,17)))}e.keys=()=>Object.keys(c),e.id=796,g.exports=e},674:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n___CSS_LOADER_EXPORT___.push([module.id, "@import url(https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap);"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    background-color: rgb(5,5,5);\r\n    font-size: 16px;\r\n    overflow: hidden;\r\n    font-family: \'Inter\', sans-serif;\r\n}\r\n\r\n.hidden {\r\n    display: none !important;\r\n}\r\n\r\n/*for comparing to eX and gamefeel. Not permanent*/\r\ncanvas, .gui {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    /* filter: saturate(75%);  */\r\n}\r\n\r\n.text-layer {\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 1600px;\r\n\theight: 900px;\r\n\tfilter: none !important;\r\n\tbackground: transparent;\r\n\toverflow: hidden;\r\n}\r\n\r\n.chatDiv {\r\n    z-index: 100;\r\n}\r\n\r\n.chat {\r\n    position: absolute;\r\n    left: 0px;\r\n    top: 250px;\r\n    width: 374px;\r\n    height: 30px;\r\n    transform-origin: center center;\r\n    border: none;\r\n    outline: none;\r\n    color: white;\r\n    font-size: 1rem;\r\n    padding: 5px;\r\n    caret-color: white;\r\n    /*background: rgba(129, 129, 129, 0.082);*/\r\n    background: linear-gradient(to right, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0));\r\n    font-family: \'Inter-Thick\', Inter;\r\n}\r\n\r\n.chat-message {\r\n    color: white;\r\n    font-size: 1.05rem;\r\n    background: transparent;\r\n    padding: 1px;\r\n\r\n    overflow-wrap: break-word;\r\n    width: 100%;\r\n}\r\n.system-message {\r\n    color: #c4c4c4;\r\n    font-size: 1rem;\r\n    background: transparent;\r\n    padding: 1px;\r\n    overflow-wrap: break-word; /*this doesnt work somehow*/\r\n    width: 100%;\r\n}\r\n\r\n.fade-out {\r\n    animation: fade-out 0.3s linear;\r\n}\r\n\r\n.fade-in {\r\n    animation: fade-in 0.3s linear;\r\n}\r\n\r\n@keyframes fade-out {\r\n    0% {\r\n        opacity: 1;\r\n    }\r\n    100% {\r\n        opacity: 0;\r\n    }\r\n}\r\n\r\n.peaceful {\r\n    color: #6cd95b;\r\n}\r\n.moderate {\r\n    color: #58ccb3;\r\n}\r\n.difficult {\r\n    color: #0a77bf;\r\n}\r\n.hardcore {\r\n    color: #3528e0;\r\n}\r\n.exhausting {\r\n    color: #8248d4;\r\n}\r\n.relentless {\r\n    color: #e32d8b;\r\n}\r\n@keyframes agonizingColor {\r\n    0% {\r\n        background-color: #ff0000;\r\n    }\r\n}\r\n.agonizing {\r\n    color: #ff5736;\r\n    animation-name: agonizingColor;\r\n    animation-duration: 3s;\r\n    animation-iteration-count: infinite;\r\n}\r\n@keyframes terrorizingColor {\r\n    0% {\r\n        background-color: #ff0000;\r\n    }\r\n}\r\n.terrorizing {\r\n    color: #fc3a3a;\r\n    animation-name: terrorizingColor;\r\n    animation-duration: 2s;\r\n    animation-iteration-count: infinite;\r\n}\r\n@keyframes cataclysmicColor {\r\n    0% {\r\n        background-color: #ff0000;\r\n    }\r\n}\r\n.cataclysmic {\r\n    color: #c95d5d;\r\n    animation-name: cataclysmicColor;\r\n    animation-duration: 1s;\r\n    animation-iteration-count: infinite;\r\n}\r\n\r\n.mention {\r\n    /*color: #a84040;*/\r\n    background-image: linear-gradient(\r\n        90deg,\r\n        rgba(255, 0, 0, 0.3),\r\n        rgba(255, 0, 0, 0)\r\n    );\r\n    animation-name: terrorizingColor;\r\n    animation-duration: 0.4s;\r\n    animation-iteration-count: 1;\r\n}\r\n\r\n.chat::placeholder {\r\n    color: white;\r\n    opacity: 1;\r\n}\r\n\r\n.leaderboard-div {\r\n    position: absolute;\r\n    left: calc(1600px - 299px);\r\n    transition: left 0.2s linear, opacity 0.2s linear;\r\n    opacity: 1;\r\n    top: -1px;\r\n    width: 300px;\r\n    height: 900px;\r\n    background: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.4));\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    padding: 0px;\r\n    color: white;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n    user-select: none;\r\n    font-family: \'Inter-Thicke\', Inter;\r\n}\r\n\r\n.hide {\r\n    left: 1600px !important;\r\n    opacity: 0;\r\n}\r\n\r\n.leaderboard-div::-webkit-scrollbar {\r\n    width: 10px;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    border-radius: 2px;\r\n}\r\n\r\n.leaderboard-div::-webkit-scrollbar-thumb {\r\n    background-color: rgba(255, 255, 255, 0.3);\r\n    border-radius: 2px;\r\n}\r\n\r\n.rainbow {\r\n    animation: colorRotate 4s linear 0s infinite;\r\n}\r\n\r\n@keyframes colorRotate {\r\n    0% {\r\n        color: hsl(180, 100%, 50%);\r\n    }\r\n    50% {\r\n        color: hsl(216, 100%, 50%);\r\n    }\r\n    100% {\r\n        color: hsl(180, 100%, 50%);\r\n    }\r\n}\r\n\r\n.guest {\r\n    opacity: 0.8;\r\n}\r\n\r\n.chat-div::-webkit-scrollbar {\r\n    width: 10px;\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.chat-div::-webkit-scrollbar-thumb {\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n}\r\n\r\n.chat-div {\r\n    position: absolute;\r\n    left: -1px;\r\n    top: -1px;\r\n    width: 375px;\r\n    height: 251px;\r\n    filter: none !important;\r\n    background: rgba(141, 141, 141, 0.205);\r\n    background: linear-gradient(to right, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0));\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n    padding: 2px;\r\n    overflow-x: hidden;\r\n    /* \tword-break: break-all; */\r\n    font-family: Inter-Thick, Inter;\r\n    /*\r\n    /*background-image: url(https://i1.sndcdn.com/artworks-Uii8SMJvNPxy8ePA-romBoQ-t500x500.jpg);*/\r\n    /*    opacity: 0.7; */\r\n}`, "",{"version":3,"sources":["webpack://./eXclient/style.css"],"names":[],"mappings":"AAEA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,4BAA4B;IAC5B,eAAe;IACf,gBAAgB;IAChB,gCAAgC;AACpC;;AAEA;IACI,wBAAwB;AAC5B;;AAEA,kDAAkD;AAClD;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,4BAA4B;AAChC;;AAEA;CACC,kBAAkB;CAClB,OAAO;CACP,MAAM;CACN,aAAa;CACb,aAAa;CACb,uBAAuB;CACvB,uBAAuB;CACvB,gBAAgB;AACjB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,+BAA+B;IAC/B,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,eAAe;IACf,YAAY;IACZ,kBAAkB;IAClB,0CAA0C;IAC1C,2EAA2E;IAC3E,iCAAiC;AACrC;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,uBAAuB;IACvB,YAAY;;IAEZ,yBAAyB;IACzB,WAAW;AACf;AACA;IACI,cAAc;IACd,eAAe;IACf,uBAAuB;IACvB,YAAY;IACZ,yBAAyB,EAAE,2BAA2B;IACtD,WAAW;AACf;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI;QACI,UAAU;IACd;IACA;QACI,UAAU;IACd;AACJ;;AAEA;IACI,cAAc;AAClB;AACA;IACI,cAAc;AAClB;AACA;IACI,cAAc;AAClB;AACA;IACI,cAAc;AAClB;AACA;IACI,cAAc;AAClB;AACA;IACI,cAAc;AAClB;AACA;IACI;QACI,yBAAyB;IAC7B;AACJ;AACA;IACI,cAAc;IACd,8BAA8B;IAC9B,sBAAsB;IACtB,mCAAmC;AACvC;AACA;IACI;QACI,yBAAyB;IAC7B;AACJ;AACA;IACI,cAAc;IACd,gCAAgC;IAChC,sBAAsB;IACtB,mCAAmC;AACvC;AACA;IACI;QACI,yBAAyB;IAC7B;AACJ;AACA;IACI,cAAc;IACd,gCAAgC;IAChC,sBAAsB;IACtB,mCAAmC;AACvC;;AAEA;IACI,kBAAkB;IAClB;;;;KAIC;IACD,gCAAgC;IAChC,wBAAwB;IACxB,4BAA4B;AAChC;;AAEA;IACI,YAAY;IACZ,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,0BAA0B;IAC1B,iDAAiD;IACjD,UAAU;IACV,SAAS;IACT,YAAY;IACZ,aAAa;IACb,2EAA2E;IAC3E,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,iBAAiB;IACjB,kCAAkC;AACtC;;AAEA;IACI,uBAAuB;IACvB,UAAU;AACd;;AAEA;IACI,WAAW;IACX,0CAA0C;IAC1C,kBAAkB;AACtB;;AAEA;IACI,0CAA0C;IAC1C,kBAAkB;AACtB;;AAEA;IACI,4CAA4C;AAChD;;AAEA;IACI;QACI,0BAA0B;IAC9B;IACA;QACI,0BAA0B;IAC9B;IACA;QACI,0BAA0B;IAC9B;AACJ;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,oCAAoC;AACxC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,SAAS;IACT,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,sCAAsC;IACtC,2EAA2E;IAC3E,aAAa;IACb,2BAA2B;IAC3B,uBAAuB;IACvB,sBAAsB;IACtB,gBAAgB;IAChB,YAAY;IACZ,kBAAkB;IAClB,4BAA4B;IAC5B,+BAA+B;IAC/B;kGAC8F;IAC9F,qBAAqB;AACzB","sourcesContent":["@import url(\'https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap\');\\r\\n\\r\\n* {\\r\\n    box-sizing: border-box;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    background-color: rgb(5,5,5);\\r\\n    font-size: 16px;\\r\\n    overflow: hidden;\\r\\n    font-family: \'Inter\', sans-serif;\\r\\n}\\r\\n\\r\\n.hidden {\\r\\n    display: none !important;\\r\\n}\\r\\n\\r\\n/*for comparing to eX and gamefeel. Not permanent*/\\r\\ncanvas, .gui {\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    /* filter: saturate(75%);  */\\r\\n}\\r\\n\\r\\n.text-layer {\\r\\n\\tposition: absolute;\\r\\n\\tleft: 0;\\r\\n\\ttop: 0;\\r\\n\\twidth: 1600px;\\r\\n\\theight: 900px;\\r\\n\\tfilter: none !important;\\r\\n\\tbackground: transparent;\\r\\n\\toverflow: hidden;\\r\\n}\\r\\n\\r\\n.chatDiv {\\r\\n    z-index: 100;\\r\\n}\\r\\n\\r\\n.chat {\\r\\n    position: absolute;\\r\\n    left: 0px;\\r\\n    top: 250px;\\r\\n    width: 374px;\\r\\n    height: 30px;\\r\\n    transform-origin: center center;\\r\\n    border: none;\\r\\n    outline: none;\\r\\n    color: white;\\r\\n    font-size: 1rem;\\r\\n    padding: 5px;\\r\\n    caret-color: white;\\r\\n    /*background: rgba(129, 129, 129, 0.082);*/\\r\\n    background: linear-gradient(to right, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0));\\r\\n    font-family: \'Inter-Thick\', Inter;\\r\\n}\\r\\n\\r\\n.chat-message {\\r\\n    color: white;\\r\\n    font-size: 1.05rem;\\r\\n    background: transparent;\\r\\n    padding: 1px;\\r\\n\\r\\n    overflow-wrap: break-word;\\r\\n    width: 100%;\\r\\n}\\r\\n.system-message {\\r\\n    color: #c4c4c4;\\r\\n    font-size: 1rem;\\r\\n    background: transparent;\\r\\n    padding: 1px;\\r\\n    overflow-wrap: break-word; /*this doesnt work somehow*/\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.fade-out {\\r\\n    animation: fade-out 0.3s linear;\\r\\n}\\r\\n\\r\\n.fade-in {\\r\\n    animation: fade-in 0.3s linear;\\r\\n}\\r\\n\\r\\n@keyframes fade-out {\\r\\n    0% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    100% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n.peaceful {\\r\\n    color: #6cd95b;\\r\\n}\\r\\n.moderate {\\r\\n    color: #58ccb3;\\r\\n}\\r\\n.difficult {\\r\\n    color: #0a77bf;\\r\\n}\\r\\n.hardcore {\\r\\n    color: #3528e0;\\r\\n}\\r\\n.exhausting {\\r\\n    color: #8248d4;\\r\\n}\\r\\n.relentless {\\r\\n    color: #e32d8b;\\r\\n}\\r\\n@keyframes agonizingColor {\\r\\n    0% {\\r\\n        background-color: #ff0000;\\r\\n    }\\r\\n}\\r\\n.agonizing {\\r\\n    color: #ff5736;\\r\\n    animation-name: agonizingColor;\\r\\n    animation-duration: 3s;\\r\\n    animation-iteration-count: infinite;\\r\\n}\\r\\n@keyframes terrorizingColor {\\r\\n    0% {\\r\\n        background-color: #ff0000;\\r\\n    }\\r\\n}\\r\\n.terrorizing {\\r\\n    color: #fc3a3a;\\r\\n    animation-name: terrorizingColor;\\r\\n    animation-duration: 2s;\\r\\n    animation-iteration-count: infinite;\\r\\n}\\r\\n@keyframes cataclysmicColor {\\r\\n    0% {\\r\\n        background-color: #ff0000;\\r\\n    }\\r\\n}\\r\\n.cataclysmic {\\r\\n    color: #c95d5d;\\r\\n    animation-name: cataclysmicColor;\\r\\n    animation-duration: 1s;\\r\\n    animation-iteration-count: infinite;\\r\\n}\\r\\n\\r\\n.mention {\\r\\n    /*color: #a84040;*/\\r\\n    background-image: linear-gradient(\\r\\n        90deg,\\r\\n        rgba(255, 0, 0, 0.3),\\r\\n        rgba(255, 0, 0, 0)\\r\\n    );\\r\\n    animation-name: terrorizingColor;\\r\\n    animation-duration: 0.4s;\\r\\n    animation-iteration-count: 1;\\r\\n}\\r\\n\\r\\n.chat::placeholder {\\r\\n    color: white;\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.leaderboard-div {\\r\\n    position: absolute;\\r\\n    left: calc(1600px - 299px);\\r\\n    transition: left 0.2s linear, opacity 0.2s linear;\\r\\n    opacity: 1;\\r\\n    top: -1px;\\r\\n    width: 300px;\\r\\n    height: 900px;\\r\\n    background: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.4));\\r\\n    display: flex;\\r\\n    justify-content: start;\\r\\n    align-items: center;\\r\\n    flex-direction: column;\\r\\n    padding: 0px;\\r\\n    color: white;\\r\\n    overflow-y: auto;\\r\\n    overflow-x: hidden;\\r\\n    user-select: none;\\r\\n    font-family: \'Inter-Thicke\', Inter;\\r\\n}\\r\\n\\r\\n.hide {\\r\\n    left: 1600px !important;\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n.leaderboard-div::-webkit-scrollbar {\\r\\n    width: 10px;\\r\\n    background-color: rgba(255, 255, 255, 0.1);\\r\\n    border-radius: 2px;\\r\\n}\\r\\n\\r\\n.leaderboard-div::-webkit-scrollbar-thumb {\\r\\n    background-color: rgba(255, 255, 255, 0.3);\\r\\n    border-radius: 2px;\\r\\n}\\r\\n\\r\\n.rainbow {\\r\\n    animation: colorRotate 4s linear 0s infinite;\\r\\n}\\r\\n\\r\\n@keyframes colorRotate {\\r\\n    0% {\\r\\n        color: hsl(180, 100%, 50%);\\r\\n    }\\r\\n    50% {\\r\\n        color: hsl(216, 100%, 50%);\\r\\n    }\\r\\n    100% {\\r\\n        color: hsl(180, 100%, 50%);\\r\\n    }\\r\\n}\\r\\n\\r\\n.guest {\\r\\n    opacity: 0.8;\\r\\n}\\r\\n\\r\\n.chat-div::-webkit-scrollbar {\\r\\n    width: 10px;\\r\\n    background-color: rgba(0, 0, 0, 0.4);\\r\\n}\\r\\n\\r\\n.chat-div::-webkit-scrollbar-thumb {\\r\\n    background-color: rgba(0, 0, 0, 0.8);\\r\\n}\\r\\n\\r\\n.chat-div {\\r\\n    position: absolute;\\r\\n    left: -1px;\\r\\n    top: -1px;\\r\\n    width: 375px;\\r\\n    height: 251px;\\r\\n    filter: none !important;\\r\\n    background: rgba(141, 141, 141, 0.205);\\r\\n    background: linear-gradient(to right, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0));\\r\\n    display: flex;\\r\\n    justify-content: flex-start;\\r\\n    align-items: flex-start;\\r\\n    flex-direction: column;\\r\\n    overflow-y: auto;\\r\\n    padding: 2px;\\r\\n    overflow-x: hidden;\\r\\n    /* \\tword-break: break-all; */\\r\\n    font-family: Inter-Thick, Inter;\\r\\n    /*\\r\\n    /*background-image: url(https://i1.sndcdn.com/artworks-Uii8SMJvNPxy8ePA-romBoQ-t500x500.jpg);*/\\r\\n    /*    opacity: 0.7; */\\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///674\n')},314:module=>{"use strict";eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += "}";\n      }\n      if (item[2]) {\n        content += "}";\n      }\n      if (item[4]) {\n        content += "}";\n      }\n      return content;\n    }).join("");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb21uaXNlcnZlci8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanM/MjRmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///314\n')},354:module=>{"use strict";eval('\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === "function") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    return [content].concat([sourceMapping]).join("\\n");\n  }\n  return [content].join("\\n");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb21uaXNlcnZlci8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzP2FmMTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///354\n')},72:module=>{"use strict";eval('\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb21uaXNlcnZlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcz8yZGJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///72\n')},659:module=>{"use strict";eval('\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU5LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb21uaXNlcnZlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanM/YjIxNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///659\n')},540:module=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb21uaXNlcnZlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcz9kZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///540\n')},56:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbW5pc2VydmVyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzP2RkY2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///56\n')},825:module=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n  var needLayer = typeof obj.layer !== "undefined";\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += "}";\n  }\n  if (obj.media) {\n    css += "}";\n  }\n  if (obj.supports) {\n    css += "}";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === "undefined") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODI1LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb21uaXNlcnZlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzP2U0NzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///825\n')},113:module=>{"use strict";eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbW5pc2VydmVyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanM/MWRkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///113\n")},681:()=>{eval("const mapDifficulties = window.mapDifficulties = Object.freeze({\r\n    popb: 0.1,\r\n    poca: 1.2,\r\n    pospd: 2.8,\r\n    pos: 4.1,\r\n    pols: 5.05,\r\n    povv: 0.9,\r\n    poqt: 4.3,\r\n    podc: 6.4,\r\n    posc: 0.2,\r\n    poph: 4.7,\r\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjgxLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29tbmlzZXJ2ZXIvLi9lWHNlcnZlci9tYXBzL19tZXRhZGF0YS5qcz85ZGE3Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1hcERpZmZpY3VsdGllcyA9IHdpbmRvdy5tYXBEaWZmaWN1bHRpZXMgPSBPYmplY3QuZnJlZXplKHtcclxuICAgIHBvcGI6IDAuMSxcclxuICAgIHBvY2E6IDEuMixcclxuICAgIHBvc3BkOiAyLjgsXHJcbiAgICBwb3M6IDQuMSxcclxuICAgIHBvbHM6IDUuMDUsXHJcbiAgICBwb3Z2OiAwLjksXHJcbiAgICBwb3F0OiA0LjMsXHJcbiAgICBwb2RjOiA2LjQsXHJcbiAgICBwb3NjOiAwLjIsXHJcbiAgICBwb3BoOiA0LjcsXHJcbn0pOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///681\n")},888:(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval("\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(72);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(825);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(659);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(56);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(540);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(113);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./eXclient/style.css\nvar style = __webpack_require__(674);\n;// ./eXclient/style.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\noptions.insert = insertBySelector_default().bind(null, \"head\");\noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(style/* default */.A, options);\n\n\n\n\n       /* harmony default export */ const eXclient_style = (style/* default */.A && style/* default */.A.locals ? style/* default */.A.locals : undefined);\n\n;// ./eXclient/render.js\nlet render_canvas = window.canvas = document.getElementById('canvas');\r\nlet render_ctx = window.ctx = render_canvas.getContext('2d');\r\n\r\nconst camera = window.camera = {\r\n    x: 0, y: 0, scale: 1,\r\n    numControlledBy: 0,\r\n    /*3d*/\r\n    z: 1,\r\n    basis1: [1, 0, 0],\r\n    basis2: [0, 1, 0],\r\n    normal: [0, 0, 1]\r\n}\r\n\r\nwindow.defaultColors = {\r\n    tile: '#1f2229',// the stroke and outside of arena\r\n    background: '#323645',// the fillcolor\r\n    vignette: {\r\n        inner: {size:0.1,r:0,g:0,b:0,opacity:0},\r\n        outer: {size:0.6,r:0,g:0,b:0,opacity:1},\r\n        innerInterp: {size:0.1,r:0,g:0,b:0,opacity:0},\r\n        outerInterp: {size:0.6,r:0,g:0,b:0,opacity:1},\r\n        holeFunctions: []\r\n    }\r\n}\r\n\r\nwindow.colors = {\r\n    tile: window.defaultColors.tile,\r\n    background: window.defaultColors.background,\r\n    vignette: {\r\n        inner: {size:0.1,r:0,g:0,b:0,opacity:0},\r\n        outer: {size:0.6,r:0,g:0,b:0,opacity:1},\r\n        innerInterp: {size:0.1,r:0,g:0,b:0,opacity:0},\r\n        outerInterp: {size:0.6,r:0,g:0,b:0,opacity:1},\r\n        holeFunctions: []\r\n    }\r\n}\r\n\r\nwindow.selfId = undefined;\r\nwindow.tileSize = 100;\r\nwindow.renderDebug = false;\r\nwindow.distortionsActive = false;\r\nwindow.skullImgLoaded = false;\r\nwindow.skullImg = undefined;\r\nconst fullscreen = {\r\n    ratio: 9 / 16,\r\n    zoom: 1800,\r\n}\r\n// const width = 1600;\r\n// const height = 900;\r\n\r\n// window.tileImage = undefined;\r\n// window.tileImageColors = {\r\n//     tile: '', background: ''\r\n// }\r\n\r\n// function generateTileImage({tile, background}) {\r\n//     const canv = document.createElement('canvas');\r\n//     const w = canvas.w + ctx.lineWidth + window.tileSize;\r\n//     const h = canvas.h + ctx.lineWidth + window.tileSize;\r\n    \r\n//     const cx = canv.getContext('2d');\r\n//     canv.width = w;\r\n//     canv.height = h;\r\n//     cx.imageSmoothingEnabled = false;\r\n\r\n//     // tile background\r\n//     cx.globalAlpha = 0.75;\r\n//     cx.strokeStyle = tile;\r\n//     cx.fillStyle = background;\r\n\r\n//     cx.lineWidth = 3;\r\n//     for (let x = -camera.x%tileSize; x < canvas.w + ctx.lineWidth + window.tileSize; x += window.tileSize) {\r\n//         ctx.beginPath();\r\n//         ctx.moveTo(x, 0);\r\n//         ctx.lineTo(x, canvas.h);\r\n//         ctx.stroke();\r\n//         ctx.closePath();\r\n//     }\r\n\r\n//     for (let y = -camera.y%tileSize; y < canvas.h + ctx.lineWidth + window.tileSize; y += window.tileSize) {\r\n//         ctx.beginPath();\r\n//         ctx.moveTo(0, y);\r\n//         ctx.lineTo(canvas.w, y);\r\n//         ctx.stroke();\r\n//         ctx.closePath();//\r\n//     }\r\n\r\n//     cx.globalAlpha = 1;\r\n//     return canv;\r\n// }\r\n\r\n// let tileImg;\r\n// function createTileImg(scale, thicc) {\r\n//     const tileSize = 100;\r\n//     // const size =\r\n//     //     Math.round(Math.max(canvas.width, canvas.height) / tileSize) *\r\n//     //         tileSize +\r\n//     //     200;\r\n//     const canv = document.createElement('canvas');\r\n//     if(scale < 0.1){\r\n//         return canv;\r\n//     }\r\n    \r\n//     const w = canvas.width/scale + tileSize;\r\n//     const h = canvas.height/scale + tileSize;\r\n    \r\n//     const cx = canv.getContext('2d');\r\n//     canv.width = w//size / scale;\r\n//     canv.height = h//size / scale;\r\n//     cx.imageSmoothingEnabled = false;\r\n\r\n//     // tile background\r\n//     cx.globalAlpha = 0.75;\r\n//     cx.strokeStyle = colors.tile//colors.background;\r\n//     cx.lineWidth = thicc ? 4 : 2;\r\n//     for (let y = 0; y <= h; y += tileSize) {\r\n//         for (let x = 0; x <= w; x += tileSize) {\r\n//             cx.strokeRect(x, y, tileSize, tileSize);\r\n//         }\r\n//     }\r\n//     cx.globalAlpha = 1;\r\n//     return canv;\r\n// }\r\n\r\nlet opaqIndex, len, lastPlayerX, lastPlayerY, lastPlayerRadius, diagonalStartOffset, diagonalDist, overRenderTiles = false, lastGA, j = false, lastNLDX = 0, lastNLDY = 0, cullingMinX=0, cullingMaxX=0, cullingMinY=0, cullingMaxY=0, canvSum=0;\r\nwindow.render = (os=window.obstacles, cols=window.colors, players=window.players) => {\r\n    document.body.style.backgroundColor = cols.tile;\r\n\r\n    overRenderTiles = false;\r\n    if(window.selfId !== undefined){\r\n        const me = players[window.selfId];\r\n\r\n        if(camera.numControlledBy === 0){\r\n            camera.x = me.pos.x;\r\n            camera.y = me.pos.y;\r\n        }\r\n\r\n        if(me.ship === true){\r\n            render_ctx.translate(render_canvas.w/2, render_canvas.h/2);\r\n            render_ctx.rotate(-Math.PI/2-me.shipAngle);\r\n            render_ctx.translate(-render_canvas.w/2, -render_canvas.h/2);\r\n            overRenderTiles = true;\r\n        }\r\n    }\r\n\r\n    // tile background\r\n    // ctx.strokeStyle = cols.tile;\r\n    // ctx.fillStyle = cols.background;\r\n\r\n    // if(tileImg === undefined){\r\n    //     tileImg = createTileImg(1);\r\n    // }\r\n\r\n    // const img = tileImg;\r\n    //ctx.translate(pos.x , pos.y + (gridOffset.y % 50));\r\n    // ctx.drawImage(img, (canvas.w/2-camera.x)%tileSize, (canvas.h/2-camera.y)%tileSize);\r\n    \r\n\r\n    if(overRenderTiles === true){\r\n        render_ctx.fillStyle = cols.tile;\r\n\r\n        canvSum = (render_canvas.w + render_canvas.h)/2;\r\n        render_ctx.fillRect(-canvSum,-canvSum,4*canvSum, 4*canvSum);\r\n\r\n        cullingMinX = camera.x-canvSum;\r\n        cullingMaxX = camera.x+canvSum;\r\n        cullingMinY = camera.y-canvSum;\r\n        cullingMaxY = camera.y+canvSum;\r\n\r\n        render_ctx.fillStyle = cols.background;\r\n        // add 1 to all dimensions so that we don't get gap artifacts on the edge of the arena\r\n        render_ctx.fillRect(-(camera.x-render_canvas.w/2)+1, -(camera.y-render_canvas.h/2)+1, window.mapDimensions.x-2, window.mapDimensions.y-2);\r\n\r\n        render_ctx.globalAlpha = 0.75;\r\n        render_ctx.lineWidth = 4.8;\r\n        render_ctx.strokeStyle = cols.tile;\r\n\r\n        // accounting for rotation and such\r\n        diagonalDist = Math.sqrt(render_canvas.w ** 2 + render_canvas.h ** 2);\r\n        diagonalStartOffset = (diagonalDist/2) % tileSize - tileSize - diagonalDist / 2;\r\n        for (let x = (render_canvas.w/2-camera.x)%tileSize + diagonalStartOffset; x < diagonalDist + render_ctx.lineWidth + window.tileSize; x += window.tileSize) {\r\n            render_ctx.beginPath();\r\n            render_ctx.moveTo(x, diagonalStartOffset);\r\n            render_ctx.lineTo(x, render_canvas.h - diagonalStartOffset);\r\n            render_ctx.stroke();\r\n            render_ctx.closePath();\r\n        }\r\n    \r\n        for (let y = (render_canvas.h/2-camera.y)%tileSize + diagonalStartOffset; y < diagonalDist + render_ctx.lineWidth + window.tileSize; y += window.tileSize) {\r\n            render_ctx.beginPath();\r\n            render_ctx.moveTo(diagonalStartOffset, y);\r\n            render_ctx.lineTo(render_canvas.w - diagonalStartOffset, y);\r\n            render_ctx.stroke();\r\n            render_ctx.closePath();\r\n        }\r\n    } else {\r\n        render_ctx.fillStyle = cols.tile;\r\n        render_ctx.fillRect(0,0,render_canvas.w, render_canvas.h);\r\n\r\n        cullingMinX = camera.x-render_canvas.w/2;\r\n        cullingMaxX = camera.x+render_canvas.w/2;\r\n        cullingMinY = camera.y-render_canvas.h/2;\r\n        cullingMaxY = camera.y+render_canvas.h/2;\r\n\r\n        render_ctx.fillStyle = cols.background;\r\n        // add 1 to all dimensions so that we don't get gap artifacts on the edge of the arena\r\n        render_ctx.fillRect(-(camera.x-render_canvas.w/2)+1, -(camera.y-render_canvas.h/2)+1, window.mapDimensions.x-2, window.mapDimensions.y-2);\r\n\r\n        render_ctx.globalAlpha = 0.75;\r\n        render_ctx.lineWidth = 4.8;\r\n        render_ctx.strokeStyle = cols.tile;\r\n\r\n        for (let x = (render_canvas.w/2-camera.x)%tileSize; x < render_canvas.w + render_ctx.lineWidth + window.tileSize; x += window.tileSize) {\r\n            render_ctx.beginPath();\r\n            render_ctx.moveTo(x, 0);\r\n            render_ctx.lineTo(x, render_canvas.h);\r\n            render_ctx.stroke();\r\n            render_ctx.closePath();\r\n        }\r\n    \r\n        for (let y = (render_canvas.h/2-camera.y)%tileSize; y < render_canvas.h + render_ctx.lineWidth + window.tileSize; y += window.tileSize) {\r\n            render_ctx.beginPath();\r\n            render_ctx.moveTo(0, y);\r\n            render_ctx.lineTo(render_canvas.w, y);\r\n            render_ctx.stroke();\r\n            render_ctx.closePath();\r\n        }\r\n    }\r\n\r\n    render_ctx.globalAlpha = 1;\r\n\r\n    // TODO: test if it's faster to draw tiles or image\r\n    // if(window.tileImageColors.tile !== window.colors.tile || window.tileImageColors.background !== window.colors.background){\r\n    //     // TODO: optimize even further with just generating lines and using clearRect and having another canvas in the background with the solid bg color fill\r\n    //     window.tileImage = generateTileImage(window.colors);\r\n    // }\r\n\r\n    // ctx.drawImage(window.tileImage, -camera.x % tileSize, -camera.y % tileSize);\r\n    render_ctx.translate(-(camera.x-render_canvas.w/2), -(camera.y-render_canvas.h/2));\r\n\r\n    // render obstacles\r\n    for(let i = 0; i < os.length; i++){\r\n        if(os[i].cr !== undefined) { os[i].cr(os[i]); continue; }\r\n\r\n        // culling\r\n        if(os[i].topLeft.x > cullingMaxX || os[i].topLeft.x + os[i].dimensions.x < cullingMinX || os[i].topLeft.y > cullingMaxY || os[i].topLeft.y + os[i].dimensions.y < cullingMinY) continue;\r\n\r\n        len = os[i].effect.length;\r\n        if(len === 1){\r\n            j = 0;\r\n            render_ctx.toFill = true;\r\n            render_ctx.toStroke = false;\r\n            render_ctx.lineWidth = 4; \r\n            render_ctx.beginPath();\r\n            os[i].renderShape(os[i]);\r\n            os[i].renderEffect[j](os[i]);\r\n            if(os[i].isText === true) renderTextSpecials(os[i], cols);\r\n            if(render_ctx.toFill === true) render_ctx.fill();\r\n            if(render_ctx.toStroke === true) render_ctx.stroke();\r\n            if(render_ctx.cleanUpFunction !== undefined) { render_ctx.cleanUpFunction(); render_ctx.cleanUpFunction = undefined; }\r\n            render_ctx.closePath();\r\n            render_ctx.globalAlpha = 1;\r\n        } else {\r\n            // so we want to fade between the effect renders. We render a previous one with 1 opacity and then raise the next one from 0-1 opacity, until the next one becomes the previous and the cycle repeats\r\n            os[i].renderEffectTimer += 1/128;\r\n            if(os[i].renderEffectTimer >= len) os[i].renderEffectTimer -= len;\r\n\r\n            opaqIndex = Math.floor(os[i].renderEffectTimer);\r\n            /*let fullIndex*/j = opaqIndex - 1;\r\n            if(/*fullIndex*/j === -1) /*fullIndex*/j = len-1;\r\n            // j = fullIndex;\r\n\r\n            // render full index\r\n            render_ctx.toFill = true;\r\n            render_ctx.toStroke = false;\r\n            render_ctx.lineWidth = 2;\r\n            render_ctx.beginPath();\r\n            os[i].renderShape(os[i]);\r\n            os[i].renderEffect[j](os[i]);\r\n            if(os[i].isText === true) renderTextSpecials(os[i], cols);\r\n            render_ctx.globalAlpha = 1;\r\n            if(render_ctx.toFill === true) render_ctx.fill();\r\n            if(render_ctx.toStroke === true) render_ctx.stroke();\r\n            if(render_ctx.cleanUpFunction !== undefined) { render_ctx.cleanUpFunction(); render_ctx.cleanUpFunction = undefined; }\r\n            render_ctx.closePath();\r\n\r\n            // render opaq index\r\n            j = opaqIndex;\r\n            render_ctx.toFill = true;\r\n            render_ctx.toStroke = false;\r\n            render_ctx.lineWidth = 2;\r\n            render_ctx.beginPath();\r\n            os[i].renderShape(os[i]);\r\n            os[i].renderEffect[j](os[i]);\r\n            if(os[i].isText === true) renderTextSpecials(os[i], cols);\r\n            render_ctx.globalAlpha = os[i].renderEffectTimer - opaqIndex;\r\n            if(render_ctx.toFill === true) render_ctx.fill();\r\n            if(render_ctx.toStroke === true) render_ctx.stroke();\r\n            if(render_ctx.cleanUpFunction !== undefined) { render_ctx.cleanUpFunction(); render_ctx.cleanUpFunction = undefined; }\r\n            render_ctx.closePath();\r\n            render_ctx.globalAlpha = 1;\r\n        }\r\n    }\r\n\r\n    // render players\r\n    for(let i = 0; i < players.length; i++){\r\n        const player = players[i];\r\n        if(player === undefined) continue;\r\n        render_ctx.fillStyle = player.dead === true ? 'red' : 'black';\r\n\r\n        const lastRadius = player.sat.r;\r\n        player.sat.r = Math.abs(player.renderRadius);\r\n        \r\n        render_ctx.beginPath();\r\n        player.renderShape(player);\r\n        \r\n        if(player.renderRadius >= 0) render_ctx.fill();\r\n        else {\r\n            // negative radius\r\n            const diameter = 2 * Math.PI * Math.abs(player.dead === true ? player.sat.r : lastPlayerRadius);\r\n            const timesAround = Math.max(3, Math.floor(diameter / 42));\r\n            lastNLDX = lastNLDX * 0.96 + 2/7*diameter/timesAround * 0.04;\r\n            lastNLDY = lastNLDY * 0.96 + 5/7*diameter/timesAround * 0.04;\r\n            render_ctx.setLineDash([lastNLDX, lastNLDY]);\r\n            render_ctx.lineDashOffset = (-window.frames / 1.56) % diameter;\r\n            render_ctx.strokeStyle = render_ctx.fillStyle;\r\n            render_ctx.lineWidth = 8;\r\n            render_ctx.lineCap = 'round';\r\n            render_ctx.stroke();\r\n            render_ctx.setLineDash([]);\r\n        }\r\n        if(player.god === true) {render_ctx.strokeStyle = 'purple'; render_ctx.lineWidth = 10; render_ctx.stroke(); }\r\n        if (player.ship === true) {\r\n            render_ctx.strokeStyle = '#0033ed';\r\n            render_ctx.lineWidth = 10;\r\n            render_ctx.lineCap = 'round';\r\n            render_ctx.moveTo(player.pos.x,player.pos.y);\r\n            render_ctx.lineTo(player.pos.x + Math.cos(player.shipAngle) * player.sat.r, player.pos.y + Math.sin(player.shipAngle) * player.sat.r);\r\n            render_ctx.stroke();\r\n        }\r\n        if(player.grapple === true){\r\n            render_ctx.beginPath();\r\n            render_ctx.strokeStyle = '#969696';\r\n            render_ctx.globalAlpha = 0.75;\r\n            render_ctx.lineWidth = 12;\r\n            render_ctx.arc(player.pos.x, player.pos.y, Math.abs(player.renderRadius) / 2, 0, Math.PI * 2);\r\n\r\n            if(player.grappleX === -1 && player.id === window.selfId && input.action1 === true){\r\n                render_ctx.strokeStyle = 'white';\r\n                render_ctx.stroke();\r\n                render_ctx.closePath();\r\n\r\n                // failed grapple - big circle\r\n                render_ctx.beginPath();\r\n                render_ctx.globalAlpha = 0.2;\r\n                render_ctx.arc(player.pos.x, player.pos.y, player.grappleRange, 0, Math.PI * 2);\r\n                render_ctx.stroke();\r\n                render_ctx.closePath();\r\n            } else if(player.grappleX !== -1){\r\n                render_ctx.strokeStyle = 'white';\r\n                render_ctx.stroke();\r\n                render_ctx.closePath();\r\n\r\n                // successful grapple - line to grap pt\r\n                render_ctx.beginPath();\r\n                render_ctx.moveTo(player.pos.x, player.pos.y);\r\n                render_ctx.lineTo(player.grappleX, player.grappleY);\r\n                render_ctx.stroke();\r\n                render_ctx.closePath();\r\n\r\n                // and circle at the point\r\n                render_ctx.lineWidth = 10;\r\n                render_ctx.beginPath();\r\n                render_ctx.arc(player.grappleX, player.grappleY, 10, 0, Math.PI * 2);\r\n                render_ctx.stroke();\r\n                render_ctx.closePath();\r\n            } else {\r\n                render_ctx.stroke();\r\n                render_ctx.closePath();\r\n            }\r\n            render_ctx.globalAlpha = 1;\r\n        }\r\n        if(player.deathTimer === true){\r\n            render_ctx.fillStyle = 'red';\r\n            render_ctx.font = '60px Inter';\r\n            render_ctx.textAlign = 'center';\r\n            render_ctx.textBaseline = 'middle';\r\n            render_ctx.shadowBlur = 2;\r\n            render_ctx.shadowColor = 'red';\r\n            render_ctx.fillText(~~(player.deathTime / 60), player.pos.x, player.pos.y);\r\n            render_ctx.shadowBlur = 0;\r\n        }\r\n        render_ctx.closePath();\r\n\r\n        render_ctx.fillStyle = 'white';\r\n        render_ctx.font = `${15 * ((Math.abs(player.renderRadius) + 0.5) / 25)}px Inter`;\r\n        render_ctx.textAlign = 'center';\r\n        render_ctx.textBaseline = 'middle';\r\n        render_ctx.fillText(\r\n            player.name,\r\n            player.pos.x,\r\n            player.pos.y + player.renderRadius * 4/3 + 3\r\n        );\r\n\r\n        player.sat.r = lastRadius;\r\n    }\r\n\r\n    // debug\r\n    if(window.renderDebug === true){\r\n        render_ctx.fillStyle = 'red';\r\n        render_ctx.strokeStyle = 'red';\r\n        render_ctx.lineWidth = 2;\r\n        for(let i = 0; i < os.length; i++){\r\n            if(os[i].topLeft.x > cullingMaxX || os[i].topLeft.x + os[i].dimensions.x < cullingMinX || os[i].topLeft.y > cullingMaxY || os[i].topLeft.y + os[i].dimensions.y < cullingMinY) continue;\r\n            render_ctx.beginPath();\r\n            render_ctx.arc(os[i].pos.x, os[i].pos.y, 10, 0, Math.PI * 2);\r\n            render_ctx.fill();\r\n            render_ctx.closePath();\r\n            render_ctx.strokeRect(os[i].topLeft.x, os[i].topLeft.y, os[i].dimensions.x, os[i].dimensions.y);\r\n        }\r\n\r\n        render_ctx.fillStyle = 'white';\r\n        render_ctx.textAlign = 'center';\r\n        render_ctx.textBaseline = 'middle';\r\n\r\n        for(let i = 0; i < players.length; i++){\r\n            const player = players[i];\r\n            if(player === undefined) continue;\r\n            render_ctx.font = `${1.2 * 15 * ((Math.abs(player.renderRadius) + 0.5) / 25)}px Inter`;\r\n            render_ctx.fillText(\r\n                `(${Math.round(player.pos.x/50)*50},${Math.round(player.pos.y/50)*50})`,\r\n                player.pos.x,\r\n                player.pos.y - player.renderRadius * 4/3 - 3 * 1.5\r\n            );\r\n        }\r\n    }\r\n\r\n    render_ctx.translate(camera.x-render_canvas.w/2, camera.y-render_canvas.h/2);\r\n\r\n    if(window.selfId !== undefined){\r\n        const me = players[window.selfId];\r\n        if(me.ship === true){\r\n            render_ctx.translate(render_canvas.w/2, render_canvas.h/2);\r\n            render_ctx.rotate(me.shipAngle+Math.PI/2);\r\n            render_ctx.translate(-render_canvas.w/2, -render_canvas.h/2);\r\n        }\r\n    }\r\n\r\n    // vignette\r\n    const v = window.colors.vignette;\r\n    for(let key in v.innerInterp){\r\n        v.innerInterp[key] = interpolate(v.innerInterp[key], v.inner[key], 0.03);\r\n    }\r\n    for(let key in v.outerInterp){\r\n        v.outerInterp[key] = interpolate(v.outerInterp[key], v.outer[key], 0.03);\r\n    }\r\n    \r\n    render_ctx.beginPath();\r\n    const grd = render_ctx.createRadialGradient(\r\n        render_canvas.w / 2,\r\n        render_canvas.h / 2,\r\n        (render_canvas.w * v.innerInterp.size),\r\n        render_canvas.w / 2,\r\n        render_canvas.h / 2,\r\n        (render_canvas.w * v.outerInterp.size)\r\n    );\r\n\r\n    grd.addColorStop(\r\n        0,\r\n        `rgba(${v.innerInterp.r},${v.innerInterp.g},${v.innerInterp.b},${v.innerInterp.opacity})`\r\n    );\r\n    grd.addColorStop(\r\n        1,\r\n        `rgba(${v.outerInterp.r},${v.outerInterp.g},${v.outerInterp.b},${v.outerInterp.opacity})`\r\n    );\r\n    render_ctx.fillStyle = grd;\r\n    render_ctx.rect(0,0,render_canvas.w,render_canvas.h);\r\n    if(v.holeFunctions.length !== 0){\r\n        if(window.selfId !== undefined){\r\n            const me = players[window.selfId];\r\n            if(me.ship === true){\r\n                render_ctx.translate(render_canvas.w/2, render_canvas.h/2);\r\n                render_ctx.rotate(-me.shipAngle-Math.PI/2);\r\n                render_ctx.translate(-render_canvas.w/2, -render_canvas.h/2);\r\n            }\r\n        }\r\n        render_ctx.translate(render_canvas.w/2-camera.x, render_canvas.h/2-camera.y);\r\n        for(let i = 0; i < v.holeFunctions.length; i++){\r\n            v.holeFunctions[i]();\r\n        }\r\n        render_ctx.translate(camera.x-render_canvas.w/2, camera.y-render_canvas.h/2);\r\n        if(window.selfId !== undefined){\r\n            const me = players[window.selfId];\r\n            if(me.ship === true){\r\n                render_ctx.translate(render_canvas.w/2, render_canvas.h/2);\r\n                render_ctx.rotate(me.shipAngle+Math.PI/2);\r\n                render_ctx.translate(-render_canvas.w/2, -render_canvas.h/2);\r\n            }\r\n        }\r\n    }\r\n    render_ctx.fill('evenodd');\r\n    render_ctx.closePath();\r\n\r\n    window.colors.vignette.inner = {size:0.1,r:0,g:0,b:0,opacity:0};\r\n    window.colors.vignette.outer = {size:0.6,r:0,g:0,b:0,opacity:1};\r\n    window.colors.vignette.holeFunctions.length=0;\r\n    // window.colors = {\r\n    //     tile: window.defaultColors.tile,\r\n    //     background: window.defaultColors.background,\r\n    //     vignette: {\r\n    //         inner: {size:0.1,r:0,g:0,b:0,opacity:0},\r\n    //         outer: {size:0.6,r:0,g:0,b:0,opacity:1},\r\n    //         innerInterp: {size:0.1,r:0,g:0,b:0,opacity:0},\r\n    //         outerInterp: {size:0.6,r:0,g:0,b:0,opacity:1}\r\n    //     }\r\n    // }\r\n\r\n    if(window.distortionsActive === true) window.renderGl();\r\n}\r\n\r\nfunction interpolate(start, end, t){\r\n    return (1-t) * start + t * end;\r\n}\r\n\r\nfunction renderTextSpecials(o, cols){\r\n    lastGA = render_ctx.globalAlpha;\r\n    render_ctx.textAlign = 'center';\r\n    render_ctx.textBaseline = 'middle';\r\n    render_ctx.font = `${o.fontSize}px Inter`;\r\n    render_ctx.translate(o.sat.points[0].x + o.sat.pos.x, o.sat.points[0].y + o.sat.pos.y);\r\n    if(o.rotation !== undefined) render_ctx.rotate(o.rotation);\r\n    if(render_ctx.globalAlpha < 0.5) render_ctx.globalAlpha = 0.5;\r\n    if(render_ctx.toFill === true) render_ctx.fillText(o.text, o.dimensions.x/2 - o.wOffset, o.dimensions.y/2 - o.hOffset);\r\n    if(render_ctx.toStroke === true) render_ctx.strokeText(o.text, o.dimensions.x/2 - o.wOffset, o.dimensions.y/2 - o.hOffset);\r\n    else if(render_ctx.toFill === false) {\r\n        render_ctx.globalAlpha = 1;\r\n        render_ctx.fillStyle = cols.tile;\r\n        render_ctx.fillText(o.text, o.dimensions.x/2 - o.wOffset, o.dimensions.y/2 - o.hOffset);\r\n    }\r\n    if(o.rotation !== undefined) render_ctx.rotate(-o.rotation);\r\n    render_ctx.translate(-o.sat.points[0].x - o.sat.pos.x, -o.sat.points[0].y - o.sat.pos.y);\r\n    render_ctx.globalAlpha = Math.min(0.5, lastGA);\r\n}\r\n\r\n// canvas resizing\r\nwindow.resizeFns = [];\r\nconst gui = document.querySelector('.gui');\r\nfunction resize(){\r\n    window.changeCameraScale(1);\r\n    const dpi = window.devicePixelRatio;\r\n    gui.style.width = render_canvas.style.width = Math.ceil(window.innerWidth) + 'px';\r\n    gui.style.height = render_canvas.style.height = Math.ceil(window.innerHeight) + 'px';\r\n    gui.width = render_canvas.width = Math.ceil(window.innerWidth) * dpi;\r\n    gui.height = render_canvas.height = Math.ceil(window.innerHeight) * dpi;\r\n    render_canvas.zoom = Math.max(0.1, Math.round((Math.max(render_canvas.height, render_canvas.width * fullscreen.ratio) / fullscreen.zoom * camera.scale) * 100) / 100);\r\n    // w and h are calced with zoom\r\n    render_canvas.w = render_canvas.width / render_canvas.zoom;\r\n    render_canvas.h = render_canvas.height / render_canvas.zoom;\r\n    render_ctx.scale(render_canvas.zoom, render_canvas.zoom);\r\n    render_ctx.lineJoin = 'round';\r\n    render_ctx.lineCap = 'round';\r\n\r\n    for(let i = 0; i < window.resizeFns.length; i++){\r\n        window.resizeFns[i]();\r\n    }\r\n}\r\n\r\nwindow.changeCameraScale = (scale) => {\r\n    render_ctx.translate(-(1-1/window.camera.scale)*render_canvas.w/2, -(1-1/window.camera.scale)*render_canvas.h/2);\r\n\r\n    render_ctx.translate(render_canvas.w/2, render_canvas.h/2);\r\n    render_ctx.scale(1/window.camera.scale, 1/window.camera.scale);\r\n    render_ctx.translate(-render_canvas.w/2, -render_canvas.h/2);\r\n\r\n    window.camera.scale = scale;\r\n    render_canvas.w = render_canvas.width / render_canvas.zoom / window.camera.scale;\r\n    render_canvas.h = render_canvas.height / render_canvas.zoom / window.camera.scale;\r\n\r\n    render_ctx.translate(render_canvas.w/2, render_canvas.h/2);\r\n    render_ctx.scale(window.camera.scale, window.camera.scale);\r\n    render_ctx.translate(-render_canvas.w/2, -render_canvas.h/2);\r\n    \r\n    render_ctx.translate((1-1/window.camera.scale)*render_canvas.w/2, (1-1/window.camera.scale)*render_canvas.h/2);\r\n}\r\n  \r\nwindow.addEventListener('resize', function () {\r\n    resize();\r\n});\r\nresize();\r\n\r\n// if there's ever more extras, make an array system\r\nlet nonLinearFns;\r\nwindow.initDistortion = async (vs, fs, uniformNames=[], uniformLambdas=[]) => {\r\n    if(nonLinearFns === undefined) nonLinearFns = (await __webpack_require__.e(/* import() */ 964).then(__webpack_require__.bind(__webpack_require__, 964))).default;\r\n    nonLinearFns.initNonlinearTransform(vs, fs, uniformNames, uniformLambdas);\r\n}\r\n\r\nwindow.unInitDistortion = () => {\r\n    // can't be active if not loaded\r\n    if(nonLinearFns === undefined) return;\r\n    nonLinearFns.unInitNonlinearTransform();\r\n}\r\n\r\nlet noiseFns;\r\nwindow.importNoise = async() => {\r\n    if(noiseFns !== undefined) return noiseFns;\r\n    return noiseFns = (await __webpack_require__.e(/* import() */ 417).then(__webpack_require__.bind(__webpack_require__, 417))).default;\r\n}\r\n\r\nlet importedYT = false;\r\nwindow.importYoutube = async() => {\r\n    if(importedYT === true) return;\r\n    const p1 = __webpack_require__.e(/* import() */ 494).then(__webpack_require__.bind(__webpack_require__, 494));\r\n    const p2 = new Promise((res) => {\r\n        const s = document.createElement('script');\r\n        s.src = \"https://www.youtube.com/iframe_api\";\r\n        document.body.appendChild(s);\r\n\r\n        window.onYouTubeIframeAPIReady = () => {\r\n            res();\r\n        }\r\n    })\r\n\r\n    importedYT = true;\r\n\r\n    return Promise.all([p1, p2]);\r\n}\r\n\r\nwindow.unTaintCanvas = () => {\r\n    const transform = render_ctx.getTransform();\r\n\r\n    const newCanvas = document.createElement('canvas');\r\n\r\n    document.body.insertBefore(newCanvas, render_canvas);\r\n\r\n    render_canvas.remove();\r\n\r\n    render_canvas = window.canvas = newCanvas;\r\n    render_ctx = window.ctx = render_canvas.getContext('2d');\r\n    resize();\r\n\r\n    render_ctx.setTransform(transform);\r\n}\r\n\r\n/* harmony default export */ const eXclient_render = ((/* unused pure expression or super */ null && (render)));\n;// ./eXclient/msgpackr.js\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t((e=\"undefined\"!=typeof globalThis?globalThis:e||self).msgpackr={})}(undefined,function(e){\"use strict\";try{$=new TextDecoder}catch(t){}var $,r,n,i,s,f,u,l,o,a=0,c={},x=0,d=0,h=[],_={useRecords:!1,mapsAsObjects:!0};class p{}let g=new p;g.name=\"MessagePack 0xC1\";var y=!1,b=2;try{Function(\"\")}catch(w){b=1/0}class m{constructor(e){e&&(!1===e.useRecords&&void 0===e.mapsAsObjects&&(e.mapsAsObjects=!0),!e.sequential||!1===e.trusted||(e.trusted=!0,e.structures||!1==e.useRecords||(e.structures=[],e.maxSharedStructures||(e.maxSharedStructures=0))),e.structures?e.structures.sharedLength=e.structures.length:e.getStructures&&((e.structures=[]).uninitialized=!0,e.structures.sharedLength=0),e.int64AsNumber&&(e.int64AsType=\"number\")),Object.assign(this,e)}unpack(e,t){if(r)return G(()=>(H(),this?this.unpack(e,t):m.prototype.unpack.call(_,e,t)));e.buffer||e.constructor!==ArrayBuffer||(e=\"undefined\"!=typeof Buffer?Buffer.from(e):new Uint8Array(e)),\"object\"==typeof t?(n=t.end||e.length,a=t.start||0):(a=0,n=t>-1?t:e.length),d=0,s=null,f=null,r=e;try{l=e.dataView||(e.dataView=new DataView(e.buffer,e.byteOffset,e.byteLength))}catch($){if(r=null,e instanceof Uint8Array)throw $;throw Error(\"Source must be a Uint8Array or Buffer but was a \"+(e&&\"object\"==typeof e?e.constructor.name:typeof e))}return this instanceof m?(c=this,this.structures?i=this.structures:(!i||i.length>0)&&(i=[])):(c=_,(!i||i.length>0)&&(i=[])),S(t)}unpackMultiple(e,t){let $,r=0;try{y=!0;let n=e.length,i=this?this.unpack(e,n):ee.unpack(e,n);if(t){if(!1===t(i,r,a))return;for(;a<n;)if(r=a,!1===t(S(),r,a))return}else{for($=[i];a<n;)r=a,$.push(S());return $}}catch(s){throw s.lastPosition=r,s.values=$,s}finally{y=!1,H()}}_mergeStructures(e,t){Object.isFrozen(e=e||[])&&(e=e.map(e=>e.slice(0)));for(let $=0,r=e.length;$<r;$++){let n=e[$];n&&(n.isShared=!0,$>=32&&(n.highByte=$-32>>5))}for(let i in e.sharedLength=e.length,t||[])if(i>=0){let s=e[i],f=t[i];f&&(s&&((e.restoreStructures||(e.restoreStructures=[]))[i]=s),e[i]=f)}return this.structures=e}decode(e,t){return this.unpack(e,t)}}function S(e){try{if(!c.trusted&&!y){let t=i.sharedLength||0;t<i.length&&(i.length=t)}let $;if(c.randomAccessStructure&&r[a]<64&&r[a]>=32&&o?($=o(r,a,n,c),r=null,!(e&&e.lazy)&&$&&($=$.toJSON()),a=n):$=k(),f&&(a=f.postBundlePosition,f=null),y&&(i.restoreStructures=null),a==n)i&&i.restoreStructures&&U(),i=null,r=null,u&&(u=null);else if(a>n)throw Error(\"Unexpected end of MessagePack data\");else if(!y){let s;try{s=JSON.stringify($,(e,t)=>\"bigint\"==typeof t?`${t}n`:t).slice(0,100)}catch(l){s=\"(JSON view not available \"+l+\")\"}throw Error(\"Data read, but end of buffer not reached \"+s)}return $}catch(x){throw i&&i.restoreStructures&&U(),H(),(x instanceof RangeError||x.message.startsWith(\"Unexpected end of buffer\")||a>n)&&(x.incomplete=!0),x}}function U(){for(let e in i.restoreStructures)i[e]=i.restoreStructures[e];i.restoreStructures=null}function k(){let e=r[a++];if(e<160){if(e<128){if(e<64)return e;{let t=i[63&e]||c.getStructures&&O()[63&e];return t?(t.read||(t.read=A(t,63&e)),t.read()):e}}if(e<144){if(e-=128,c.mapsAsObjects){let $={};for(let u=0;u<e;u++){let o=W();\"__proto__\"===o&&(o=\"__proto_\"),$[o]=k()}return $}{let _=new Map;for(let p=0;p<e;p++)_.set(k(),k());return _}}{let y=Array(e-=144);for(let b=0;b<e;b++)y[b]=k();return c.freezeData?Object.freeze(y):y}}if(e<192){let w=e-160;if(d>=a)return s.slice(a-x,(a+=w)-x);if(0==d&&n<140){let m=w<16?C(w):R(w);if(null!=m)return m}return T(w)}{let S;switch(e){case 192:return null;case 193:if(f){if((S=k())>0)return f[1].slice(f.position1,f.position1+=S);return f[0].slice(f.position0,f.position0-=S)}return g;case 194:return!1;case 195:return!0;case 196:if(void 0===(S=r[a++]))throw Error(\"Unexpected end of buffer\");return N(S);case 197:return S=l.getUint16(a),a+=2,N(S);case 198:return S=l.getUint32(a),a+=4,N(S);case 199:return D(r[a++]);case 200:return S=l.getUint16(a),a+=2,D(S);case 201:return S=l.getUint32(a),a+=4,D(S);case 202:if(S=l.getFloat32(a),c.useFloat32>2){let U=Q[(127&r[a])<<1|r[a+1]>>7];return a+=4,(U*S+(S>0?.5:-.5)>>0)/U}return a+=4,S;case 203:return S=l.getFloat64(a),a+=8,S;case 204:return r[a++];case 205:return S=l.getUint16(a),a+=2,S;case 206:return S=l.getUint32(a),a+=4,S;case 207:return\"number\"===c.int64AsType?(S=4294967296*l.getUint32(a),S+=l.getUint32(a+4)):\"string\"===c.int64AsType?S=l.getBigUint64(a).toString():\"auto\"===c.int64AsType?(S=l.getBigUint64(a))<=BigInt(2)<<BigInt(52)&&(S=Number(S)):S=l.getBigUint64(a),a+=8,S;case 208:return l.getInt8(a++);case 209:return S=l.getInt16(a),a+=2,S;case 210:return S=l.getInt32(a),a+=4,S;case 211:return\"number\"===c.int64AsType?(S=4294967296*l.getInt32(a),S+=l.getUint32(a+4)):\"string\"===c.int64AsType?S=l.getBigInt64(a).toString():\"auto\"===c.int64AsType?(S=l.getBigInt64(a))>=BigInt(-2)<<BigInt(52)&&S<=BigInt(2)<<BigInt(52)&&(S=Number(S)):S=l.getBigInt64(a),a+=8,S;case 212:if(114==(S=r[a++]))return J(63&r[a++]);{let I=h[S];if(I){if(I.read)return a++,I.read(k());if(I.noBuffer)return a++,I();return I(r.subarray(a,++a))}throw Error(\"Unknown extension \"+S)}case 213:if(114==(S=r[a]))return a++,J(63&r[a++],r[a++]);return D(2);case 214:return D(4);case 215:return D(8);case 216:return D(16);case 217:if(S=r[a++],d>=a)return s.slice(a-x,(a+=S)-x);return B(S);case 218:if(S=l.getUint16(a),d>=(a+=2))return s.slice(a-x,(a+=S)-x);return L(S);case 219:if(S=l.getUint32(a),d>=(a+=4))return s.slice(a-x,(a+=S)-x);return F(S);case 220:return S=l.getUint16(a),a+=2,z(S);case 221:return S=l.getUint32(a),a+=4,z(S);case 222:return S=l.getUint16(a),a+=2,E(S);case 223:return S=l.getUint32(a),a+=4,E(S);default:if(e>=224)return e-256;if(void 0===e){let v=Error(\"Unexpected end of MessagePack data\");throw v.incomplete=!0,v}throw Error(\"Unknown MessagePack token \"+e)}}}let I=/^[a-zA-Z_$][a-zA-Z\\d_$]*$/;function A(e,t){function $(){if($.count++>b){let r=e.read=Function(\"r\",\"return function(){return \"+(c.freezeData?\"Object.freeze\":\"\")+\"({\"+e.map(e=>\"__proto__\"===e?\"__proto_:r()\":I.test(e)?e+\":r()\":\"[\"+JSON.stringify(e)+\"]:r()\").join(\",\")+\"})}\")(k);return 0===e.highByte&&(e.read=v(t,e.read)),r()}let n={};for(let i=0,s=e.length;i<s;i++){let f=e[i];\"__proto__\"===f&&(f=\"__proto_\"),n[f]=k()}return c.freezeData?Object.freeze(n):n}return($.count=0,0===e.highByte)?v(t,$):$}let v=(e,t)=>function(){let $=r[a++];if(0===$)return t();let n=e<32?-(e+($<<5)):e+($<<5),s=i[n]||O()[n];if(!s)throw Error(\"Record id is not defined for \"+n);return s.read||(s.read=A(s,e)),s.read()};function O(){let e=G(()=>(r=null,c.getStructures()));return i=c._mergeStructures(e,i)}var T=P,B=P,L=P,F=P;function P(e){let t;if(e<16&&(t=C(e)))return t;if(e>64&&$)return $.decode(r.subarray(a,a+=e));let n=a+e,i=[];for(t=\"\";a<n;){let s=r[a++];if((128&s)==0)i.push(s);else if((224&s)==192){let f=63&r[a++];i.push((31&s)<<6|f)}else if((240&s)==224){let u=63&r[a++],l=63&r[a++];i.push((31&s)<<12|u<<6|l)}else if((248&s)==240){let o=63&r[a++],c=63&r[a++],x=63&r[a++],d=(7&s)<<18|o<<12|c<<6|x;d>65535&&(d-=65536,i.push(d>>>10&1023|55296),d=56320|1023&d),i.push(d)}else i.push(s);i.length>=4096&&(t+=M.apply(String,i),i.length=0)}return i.length>0&&(t+=M.apply(String,i)),t}function z(e){let t=Array(e);for(let $=0;$<e;$++)t[$]=k();return c.freezeData?Object.freeze(t):t}function E(e){if(c.mapsAsObjects){let t={};for(let $=0;$<e;$++){let r=W();\"__proto__\"===r&&(r=\"__proto_\"),t[r]=k()}return t}{let n=new Map;for(let i=0;i<e;i++)n.set(k(),k());return n}}var M=String.fromCharCode;function R(e){let t=a,$=Array(e);for(let n=0;n<e;n++){let i=r[a++];if((128&i)>0){a=t;return}$[n]=i}return M.apply(String,$)}function C(e){if(e<4){if(e<2){if(0===e)return\"\";{let t=r[a++];if((128&t)>1){a-=1;return}return M(t)}}{let $=r[a++],n=r[a++];if((128&$)>0||(128&n)>0){a-=2;return}if(e<3)return M($,n);let i=r[a++];if((128&i)>0){a-=3;return}return M($,n,i)}}{let s=r[a++],f=r[a++],u=r[a++],l=r[a++];if((128&s)>0||(128&f)>0||(128&u)>0||(128&l)>0){a-=4;return}if(e<6){if(4===e)return M(s,f,u,l);{let o=r[a++];if((128&o)>0){a-=5;return}return M(s,f,u,l,o)}}if(e<8){let c=r[a++],x=r[a++];if((128&c)>0||(128&x)>0){a-=6;return}if(e<7)return M(s,f,u,l,c,x);let d=r[a++];if((128&d)>0){a-=7;return}return M(s,f,u,l,c,x,d)}{let h=r[a++],_=r[a++],p=r[a++],g=r[a++];if((128&h)>0||(128&_)>0||(128&p)>0||(128&g)>0){a-=8;return}if(e<10){if(8===e)return M(s,f,u,l,h,_,p,g);{let y=r[a++];if((128&y)>0){a-=9;return}return M(s,f,u,l,h,_,p,g,y)}}if(e<12){let b=r[a++],w=r[a++];if((128&b)>0||(128&w)>0){a-=10;return}if(e<11)return M(s,f,u,l,h,_,p,g,b,w);let m=r[a++];if((128&m)>0){a-=11;return}return M(s,f,u,l,h,_,p,g,b,w,m)}{let S=r[a++],U=r[a++],k=r[a++],I=r[a++];if((128&S)>0||(128&U)>0||(128&k)>0||(128&I)>0){a-=12;return}if(e<14){if(12===e)return M(s,f,u,l,h,_,p,g,S,U,k,I);{let A=r[a++];if((128&A)>0){a-=13;return}return M(s,f,u,l,h,_,p,g,S,U,k,I,A)}}{let v=r[a++],O=r[a++];if((128&v)>0||(128&O)>0){a-=14;return}if(e<15)return M(s,f,u,l,h,_,p,g,S,U,k,I,v,O);let T=r[a++];if((128&T)>0){a-=15;return}return M(s,f,u,l,h,_,p,g,S,U,k,I,v,O,T)}}}}}function j(){let e=r[a++],t;if(e<192)t=e-160;else switch(e){case 217:t=r[a++];break;case 218:t=l.getUint16(a),a+=2;break;case 219:t=l.getUint32(a),a+=4;break;default:throw Error(\"Expected string\")}return P(t)}function N(e){return c.copyBuffers?Uint8Array.prototype.slice.call(r,a,a+=e):r.subarray(a,a+=e)}function D(e){let t=r[a++];if(h[t]){let $;return h[t](r.subarray(a,$=a+=e),e=>{a=e;try{return k()}finally{a=$}})}throw Error(\"Unknown extension type \"+t)}var V=Array(4096);function W(){let e=r[a++];if(!(e>=160)||!(e<192))return a--,k().toString();if(e-=160,d>=a)return s.slice(a-x,(a+=e)-x);if(!(0==d&&n<180))return T(e);let t=(e<<5^(e>1?l.getUint16(a):e>0?r[a]:0))&4095,$=V[t],i=a,f=a+e-3,u,o=0;if($&&$.bytes==e){for(;i<f;){if((u=l.getUint32(i))!=$[o++]){i=1879048192;break}i+=4}for(f+=3;i<f;)if((u=r[i++])!=$[o++]){i=1879048192;break}if(i===f)return a=i,$.string;f-=3,i=a}for($=[],V[t]=$,$.bytes=e;i<f;)u=l.getUint32(i),$.push(u),i+=4;for(f+=3;i<f;)u=r[i++],$.push(u);let c=e<16?C(e):R(e);return null!=c?$.string=c:$.string=T(e)}let J=(e,t)=>{let $=k().map(e=>e.toString()),r=e;void 0!==t&&(e=e<32?-((t<<5)+e):(t<<5)+e,$.highByte=t);let n=i[e];return n&&(n.isShared||y)&&((i.restoreStructures||(i.restoreStructures=[]))[e]=n),i[e]=$,$.read=A($,r),$.read()};h[0]=()=>{},h[0].noBuffer=!0;let q={Error,TypeError,ReferenceError};h[101]=()=>{let e=k();return(q[e[0]]||Error)(e[1])},h[105]=e=>{let t=l.getUint32(a-4);u||(u=new Map);let $=r[a],n;n=$>=144&&$<160||220==$||221==$?[]:{};let i={target:n};u.set(t,i);let s=k();return i.used?Object.assign(n,s):(i.target=s,s)},h[112]=e=>{let t=l.getUint32(a-4),$=u.get(t);return $.used=!0,$.target},h[115]=()=>new Set(k());let K=[\"Int8\",\"Uint8\",\"Uint8Clamped\",\"Int16\",\"Uint16\",\"Int32\",\"Uint32\",\"Float32\",\"Float64\",\"BigInt64\",\"BigUint64\"].map(e=>e+\"Array\"),Y=\"object\"==typeof globalThis?globalThis:window;h[116]=e=>{let t=e[0],$=K[t];if(!$)throw Error(\"Could not find typed array for code \"+t);return new Y[$](Uint8Array.prototype.slice.call(e,1).buffer)},h[120]=()=>{let e=k();return RegExp(e[0],e[1])};let Z=[];function G(e){let t=n,$=a,o=x,h=d,_=s,p=u,g=f,b=new Uint8Array(r.slice(0,n)),w=i,m=i.slice(0,i.length),S=c,U=y,k=e();return n=t,a=$,x=o,d=h,s=_,u=p,f=g,r=b,y=U,(i=w).splice(0,i.length,...m),c=S,l=new DataView(r.buffer,r.byteOffset,r.byteLength),k}function H(){r=null,u=null,i=null}h[98]=e=>{let t=(e[0]<<24)+(e[1]<<16)+(e[2]<<8)+e[3],$=a;return a+=t-e.length,f=Z,(f=[j(),j()]).position0=0,f.position1=0,f.postBundlePosition=a,a=$,k()},h[255]=e=>4==e.length?new Date((16777216*e[0]+(e[1]<<16)+(e[2]<<8)+e[3])*1e3):8==e.length?new Date(((e[0]<<22)+(e[1]<<14)+(e[2]<<6)+(e[3]>>2))/1e6+((3&e[3])*4294967296+16777216*e[4]+(e[5]<<16)+(e[6]<<8)+e[7])*1e3):12==e.length?new Date(((e[0]<<24)+(e[1]<<16)+(e[2]<<8)+e[3])/1e6+((128&e[4]?-281474976710656:0)+1099511627776*e[6]+4294967296*e[7]+16777216*e[8]+(e[9]<<16)+(e[10]<<8)+e[11])*1e3):new Date(\"invalid\");let Q=Array(147);for(let X=0;X<256;X++)Q[X]=+(\"1e\"+Math.floor(45.15-.30103*X));var ee=new m({useRecords:!1});let et=ee.unpack,e$=ee.unpackMultiple,er=ee.unpack,en={NEVER:0,ALWAYS:1,DECIMAL_ROUND:3,DECIMAL_FIT:4},ei=new Float32Array(1),es=new Uint8Array(ei.buffer,0,4),ef;try{ef=new TextEncoder}catch(eu){}let el,eo,ea=\"undefined\"!=typeof Buffer,ec=ea?function(e){return Buffer.allocUnsafeSlow(e)}:Uint8Array,ex=ea?Buffer:Uint8Array,ed=ea?4294967296:2144337920,eh,e_,ep,eg=0,ey,e0=null,e2,e1=/[\\u0080-\\uFFFF]/,e6=Symbol(\"record-id\");class e4 extends m{constructor(e){super(e),this.offset=0;let t,$,r,n,i=ex.prototype.utf8Write?function(e,t){return eh.utf8Write(e,t,4294967295)}:!!ef&&!!ef.encodeInto&&function(e,t){return ef.encodeInto(e,eh.subarray(t)).written},s=this;e||(e={});let f=e&&e.sequential,u=e.structures||e.saveStructures,l=e.maxSharedStructures;if(null==l&&(l=u?32:0),l>8160)throw Error(\"Maximum maxSharedStructure is 8160\");e.structuredClone&&void 0==e.moreTypes&&(this.moreTypes=!0);let o=e.maxOwnStructures;null==o&&(o=u?32:64),this.structures||!1==e.useRecords||(this.structures=[]);let a=l>32||o+l>64,c=l+64,x=l+o+64;if(x>8256)throw Error(\"Maximum maxSharedStructure + maxOwnStructure is 8192\");let d=[],h=0,_=0;this.pack=this.encode=function(e,i){if(eh||(ep=(eh=new ec(8192)).dataView||(eh.dataView=new DataView(eh.buffer,0,8192)),eg=0),(ey=eh.length-10)-eg<2048?(ep=(eh=new ec(eh.length)).dataView||(eh.dataView=new DataView(eh.buffer,0,eh.length)),ey=eh.length-10,eg=0):eg=eg+7&2147483640,t=eg,i&eT&&(eg+=255&i),n=s.structuredClone?new Map:null,s.bundleStrings&&\"string\"!=typeof e?(e0=[]).size=1/0:e0=null,r=s.structures){r.uninitialized&&(r=s._mergeStructures(s.getStructures()));let u=r.sharedLength||0;if(u>l)throw Error(\"Shared structures is larger than maximum shared structures, try increasing maxSharedStructures to \"+r.sharedLength);if(!r.transitions){r.transitions=Object.create(null);for(let o=0;o<u;o++){let a=r[o];if(!a)continue;let c,x=r.transitions;for(let d=0,h=a.length;d<h;d++){let _=a[d];(c=x[_])||(c=x[_]=Object.create(null)),x=c}x[e6]=o+64}this.lastNamedStructuresLength=u}f||(r.nextId=u+64)}$&&($=!1);try{s.randomAccessStructure&&e&&e.constructor&&e.constructor===Object?A(e):y(e);let g=e0;if(e0&&eS(t,y,0),n&&n.idsToInsert){let b=n.idsToInsert.sort((e,t)=>e.offset>t.offset?1:-1),w=b.length,m=-1;for(;g&&w>0;){let S=b[--w].offset+t;S<g.stringsPosition+t&&-1===m&&(m=0),S>g.position+t?m>=0&&(m+=6):(m>=0&&(ep.setUint32(g.position+t,ep.getUint32(g.position+t)+m),m=-1),g=g.previous,w++)}m>=0&&g&&ep.setUint32(g.position+t,ep.getUint32(g.position+t)+m),(eg+=6*b.length)>ey&&U(eg),s.offset=eg;let k=function e(t,$){let r,n=6*$.length,i=t.length-n;for(;r=$.pop();){let s=r.offset,f=r.id;t.copyWithin(s+n,s,i);let u=s+(n-=6);t[u++]=214,t[u++]=105,t[u++]=f>>24,t[u++]=f>>16&255,t[u++]=f>>8&255,t[u++]=255&f,i=s}return t}(eh.subarray(t,eg),b);return n=null,k}if(s.offset=eg,i&ev)return eh.start=t,eh.end=eg,eh;return eh.subarray(t,eg)}finally{if(r&&(p(),$&&s.saveStructures)){var I,v;let O=r.sharedLength||0,T=eh.subarray(t,eg),B=(I=r,v=s,I.isCompatible=e=>{let t=!e||(v.lastNamedStructuresLength||0)===e.length;return t||v._mergeStructures(e),t},I);if(!1===s.saveStructures(B,B.isCompatible))return s.pack(e,i);return s.lastNamedStructuresLength=O,T}i&eO&&(eg=t)}};let p=()=>{_<10&&_++;let e=r.sharedLength||0;if(r.length>e&&!f&&(r.length=e),h>1e4)r.transitions=null,_=0,h=0,d.length>0&&(d=[]);else if(d.length>0&&!f){for(let t=0,$=d.length;t<$;t++)d[t][e6]=0;d=[]}},g=e=>{var t=e.length;t<16?eh[eg++]=144|t:t<65536?(eh[eg++]=220,eh[eg++]=t>>8,eh[eg++]=255&t):(eh[eg++]=221,ep.setUint32(eg,t),eg+=4);for(let $=0;$<t;$++)y(e[$])},y=e=>{eg>ey&&(eh=U(eg));var $,r=typeof e;if(\"string\"===r){let s=e.length;if(e0&&s>=4&&s<4096){if((e0.size+=s)>21760){let f,u=(e0[0]?3*e0[0].length+e0[1].length:0)+10;eg+u>ey&&(eh=U(eg+u));let l;e0.position?(l=e0,eh[eg]=200,eg+=3,eh[eg++]=98,f=eg-t,eg+=4,eS(t,y,0),ep.setUint16(f+t-3,eg-t-f)):(eh[eg++]=214,eh[eg++]=98,f=eg-t,eg+=4),(e0=[\"\",\"\"]).previous=l,e0.size=0,e0.position=f}let o=e1.test(e);e0[o?0:1]+=e,eh[eg++]=193,y(o?-s:s);return}let a;a=s<32?1:s<256?2:s<65536?3:5;let c=3*s;if(eg+c>ey&&(eh=U(eg+c)),s<64||!i){let x,d,h,_=eg+a;for(x=0;x<s;x++)(d=e.charCodeAt(x))<128?eh[_++]=d:d<2048?(eh[_++]=d>>6|192,eh[_++]=63&d|128):(64512&d)==55296&&(64512&(h=e.charCodeAt(x+1)))==56320?(d=65536+((1023&d)<<10)+(1023&h),x++,eh[_++]=d>>18|240,eh[_++]=d>>12&63|128,eh[_++]=d>>6&63|128,eh[_++]=63&d|128):(eh[_++]=d>>12|224,eh[_++]=d>>6&63|128,eh[_++]=63&d|128);$=_-eg-a}else $=i(e,eg+a);$<32?eh[eg++]=160|$:$<256?(a<2&&eh.copyWithin(eg+2,eg+1,eg+1+$),eh[eg++]=217,eh[eg++]=$):$<65536?(a<3&&eh.copyWithin(eg+3,eg+2,eg+2+$),eh[eg++]=218,eh[eg++]=$>>8,eh[eg++]=255&$):(a<5&&eh.copyWithin(eg+5,eg+3,eg+3+$),eh[eg++]=219,ep.setUint32(eg,$),eg+=4),eg+=$}else if(\"number\"===r){if(e>>>0===e)e<32||e<128&&!1===this.useRecords||e<64&&!this.randomAccessStructure?eh[eg++]=e:e<256?(eh[eg++]=204,eh[eg++]=e):e<65536?(eh[eg++]=205,eh[eg++]=e>>8,eh[eg++]=255&e):(eh[eg++]=206,ep.setUint32(eg,e),eg+=4);else if(e>>0===e)e>=-32?eh[eg++]=256+e:e>=-128?(eh[eg++]=208,eh[eg++]=e+256):e>=-32768?(eh[eg++]=209,ep.setInt16(eg,e),eg+=2):(eh[eg++]=210,ep.setInt32(eg,e),eg+=4);else{let p;if((p=this.useFloat32)>0&&e<4294967296&&e>=-2147483648){eh[eg++]=202,ep.setFloat32(eg,e);let b;if(p<4||(b=e*Q[(127&eh[eg])<<1|eh[eg+1]>>7])>>0===b){eg+=4;return}eg--}eh[eg++]=203,ep.setFloat64(eg,e),eg+=8}}else if(\"object\"===r||\"function\"===r){if(e){if(n){let w=n.get(e);if(w){if(!w.id){let m=n.idsToInsert||(n.idsToInsert=[]);w.id=m.push(w)}eh[eg++]=214,eh[eg++]=112,ep.setUint32(eg,w.id),eg+=4;return}n.set(e,{offset:eg-t})}let k=e.constructor;if(k===Object)S(e,!0);else if(k===Array)g(e);else if(k===Map){if(this.mapAsEmptyObject)eh[eg++]=128;else for(let[I,A]of(($=e.size)<16?eh[eg++]=128|$:$<65536?(eh[eg++]=222,eh[eg++]=$>>8,eh[eg++]=255&$):(eh[eg++]=223,ep.setUint32(eg,$),eg+=4),e))y(I),y(A)}else{for(let v=0,O=el.length;v<O;v++)if(e instanceof eo[v]){let T=el[v];if(T.write){T.type&&(eh[eg++]=212,eh[eg++]=T.type,eh[eg++]=0);let B=T.write.call(this,e);B===e?Array.isArray(e)?g(e):S(e):y(B);return}let L=eh,F=ep,P=eg;eh=null;let z;try{z=T.pack.call(this,e,e=>(eh=L,L=null,(eg+=e)>ey&&U(eg),{target:eh,targetView:ep,position:eg-e}),y)}finally{L&&(eh=L,ep=F,eg=P,ey=eh.length-10)}z&&(z.length+eg>ey&&U(z.length+eg),eg=em(z,eh,eg,T.type));return}if(Array.isArray(e))g(e);else{if(e.toJSON){let E=e.toJSON();if(E!==e)return y(E)}if(\"function\"===r)return y(this.writeFunction&&this.writeFunction(e));S(e,!e.hasOwnProperty)}}}else eh[eg++]=192}else if(\"boolean\"===r)eh[eg++]=e?195:194;else if(\"bigint\"===r){if(e<BigInt(1)<<BigInt(63)&&e>=-(BigInt(1)<<BigInt(63)))eh[eg++]=211,ep.setBigInt64(eg,e);else if(e<BigInt(1)<<BigInt(64)&&e>0)eh[eg++]=207,ep.setBigUint64(eg,e);else if(this.largeBigIntToFloat)eh[eg++]=203,ep.setFloat64(eg,Number(e));else throw RangeError(e+\" was too large to fit in MessagePack 64-bit integer format, set largeBigIntToFloat to convert to float-64\");eg+=8}else if(\"undefined\"===r)this.encodeUndefinedAsNil?eh[eg++]=192:(eh[eg++]=212,eh[eg++]=0,eh[eg++]=0);else throw Error(\"Unknown type: \"+r)},b=this.variableMapSize||this.coercibleKeyAsNumber?e=>{let t=Object.keys(e),$=t.length;$<16?eh[eg++]=128|$:$<65536?(eh[eg++]=222,eh[eg++]=$>>8,eh[eg++]=255&$):(eh[eg++]=223,ep.setUint32(eg,$),eg+=4);let r;if(this.coercibleKeyAsNumber)for(let n=0;n<$;n++){let i=Number(r=t[n]);y(isNaN(i)?r:i),y(e[r])}else for(let s=0;s<$;s++)y(r=t[s]),y(e[r])}:(e,$)=>{eh[eg++]=222;let r=eg-t;eg+=2;let n=0;for(let i in e)($||e.hasOwnProperty(i))&&(y(i),y(e[i]),n++);eh[r+++t]=n>>8,eh[r+t]=255&n},w=!1===this.useRecords?b:e.progressiveRecords&&!a?(e,$)=>{let n,i=r.transitions||(r.transitions=Object.create(null)),s=eg++-t,f;for(let u in e)if($||e.hasOwnProperty(u)){if(n=i[u])i=n;else{let l=Object.keys(e),o=i;i=r.transitions;let a=0;for(let c=0,x=l.length;c<x;c++){let d=l[c];!(n=i[d])&&(n=i[d]=Object.create(null),a++),i=n}s+t+1==eg?(eg--,k(i,l,a)):I(i,l,s,a),f=!0,i=o[u]}y(e[u])}if(!f){let h=i[e6];h?eh[s+t]=h:I(i,Object.keys(e),s,0)}}:(e,t)=>{let $,n=r.transitions||(r.transitions=Object.create(null)),i=0;for(let s in e)(t||e.hasOwnProperty(s))&&(!($=n[s])&&($=n[s]=Object.create(null),i++),n=$);let f=n[e6];for(let u in f?f>=96&&a?(eh[eg++]=(31&(f-=96))+96,eh[eg++]=f>>5):eh[eg++]=f:k(n,n.__keys__||Object.keys(e),i),e)(t||e.hasOwnProperty(u))&&y(e[u])},m=\"function\"==typeof this.useRecords&&this.useRecords,S=m?(e,t)=>{m(e)?w(e,t):b(e,t)}:w,U=e=>{let $;if(e>16777216){if(e-t>ed)throw Error(\"Packed buffer would be larger than maximum buffer size\");$=Math.min(ed,4096*Math.round(Math.max((e-t)*(e>67108864?1.25:2),4194304)/4096))}else $=(Math.max(e-t<<2,eh.length-1)>>12)+1<<12;let r=new ec($);return ep=r.dataView||(r.dataView=new DataView(r.buffer,0,$)),e=Math.min(e,eh.length),eh.copy?eh.copy(r,0,t,e):r.set(eh.slice(t,e)),eg-=t,t=0,ey=r.length-10,eh=r},k=(e,t,n)=>{let i=r.nextId;i||(i=64),i<c&&this.shouldShareStructure&&!this.shouldShareStructure(t)?((i=r.nextOwnId)<x||(i=c),r.nextOwnId=i+1):(i>=x&&(i=c),r.nextId=i+1);let s=t.highByte=i>=96&&a?i-96>>5:-1;e[e6]=i,e.__keys__=t,r[i-64]=t,i<c?(t.isShared=!0,r.sharedLength=i-63,$=!0,s>=0?(eh[eg++]=(31&i)+96,eh[eg++]=s):eh[eg++]=i):(s>=0?(eh[eg++]=213,eh[eg++]=114,eh[eg++]=(31&i)+96,eh[eg++]=s):(eh[eg++]=212,eh[eg++]=114,eh[eg++]=i),n&&(h+=_*n),d.length>=o&&(d.shift()[e6]=0),d.push(e),y(t))},I=(e,$,r,n)=>{let i=eh,s=eg,f=ey,u=t;eh=e_,eg=0,t=0,eh||(e_=eh=new ec(8192)),ey=eh.length-10,k(e,$,n),e_=eh;let l=eg;if(eh=i,eg=s,ey=f,t=u,l>1){let o=eg+l-1;o>ey&&U(o);let a=r+t;eh.copyWithin(a+l,a+1,eg),eh.set(e_.slice(0,l),a),eg=o}else eh[r+t]=e_[0]},A=(e,n)=>{let i=e2(e,eh,t,eg,r,U,(e,t,r)=>{if(r)return $=!0;eg=t;let n=eh;return(y(e),p(),n!==eh)?{position:eg,targetView:ep,target:eh}:eg},this);if(0===i)return S(e,!0);eg=i}}useBuffer(e){eh=e,ep=new DataView(eh.buffer,eh.byteOffset,eh.byteLength),eg=0}clearSharedData(){this.structures&&(this.structures=[]),this.typedStructs&&(this.typedStructs=[])}}function eb(e,t,$,r){let n=e.byteLength;if(n+1<256){var{target:i,position:s}=$(4+n);i[s++]=199,i[s++]=n+1}else if(n+1<65536){var{target:i,position:s}=$(5+n);i[s++]=200,i[s++]=n+1>>8,i[s++]=n+1&255}else{var{target:i,position:s,targetView:f}=$(7+n);i[s++]=201,f.setUint32(s,n+1),s+=4}i[s++]=116,i[s++]=t,i.set(new Uint8Array(e.buffer,e.byteOffset,e.byteLength),s)}function ew(e,t){let $=e.byteLength;if($<256){var r,n,{target:r,position:n}=t($+2);r[n++]=196,r[n++]=$}else if($<65536){var{target:r,position:n}=t($+3);r[n++]=197,r[n++]=$>>8,r[n++]=255&$}else{var{target:r,position:n,targetView:i}=t($+5);r[n++]=198,i.setUint32(n,$),n+=4}r.set(e,n)}function em(e,t,$,r){let n=e.length;switch(n){case 1:t[$++]=212;break;case 2:t[$++]=213;break;case 4:t[$++]=214;break;case 8:t[$++]=215;break;case 16:t[$++]=216;break;default:n<256?(t[$++]=199,t[$++]=n):n<65536?(t[$++]=200,t[$++]=n>>8,t[$++]=255&n):(t[$++]=201,t[$++]=n>>24,t[$++]=n>>16&255,t[$++]=n>>8&255,t[$++]=255&n)}return t[$++]=r,t.set(e,$),$+=n}function eS(e,t,$){if(e0.length>0){ep.setUint32(e0.position+e,eg+$-e0.position-e),e0.stringsPosition=eg-e;let r=e0;e0=null,t(r[0]),t(r[1])}}eo=[Date,Set,Error,RegExp,ArrayBuffer,Object.getPrototypeOf(Uint8Array.prototype).constructor,p],el=[{pack(e,t,$){let r=e.getTime()/1e3;if((this.useTimestamp32||0===e.getMilliseconds())&&r>=0&&r<4294967296){let{target:n,targetView:i,position:s}=t(6);n[s++]=214,n[s++]=255,i.setUint32(s,r)}else if(r>0&&r<4294967296){let{target:f,targetView:u,position:l}=t(10);f[l++]=215,f[l++]=255,u.setUint32(l,4e6*e.getMilliseconds()+(r/1e3/4294967296>>0)),u.setUint32(l+4,r)}else if(isNaN(r)){if(this.onInvalidDate)return t(0),$(this.onInvalidDate());let{target:o,targetView:a,position:c}=t(3);o[c++]=212,o[c++]=255,o[c++]=255}else{let{target:x,targetView:d,position:h}=t(15);x[h++]=199,x[h++]=12,x[h++]=255,d.setUint32(h,1e6*e.getMilliseconds()),d.setBigInt64(h+4,BigInt(Math.floor(r)))}}},{pack(e,t,$){if(this.setAsEmptyObject)return t(0),$({});let r=Array.from(e),{target:n,position:i}=t(this.moreTypes?3:0);this.moreTypes&&(n[i++]=212,n[i++]=115,n[i++]=0),$(r)}},{pack(e,t,$){let{target:r,position:n}=t(this.moreTypes?3:0);this.moreTypes&&(r[n++]=212,r[n++]=101,r[n++]=0),$([e.name,e.message])}},{pack(e,t,$){let{target:r,position:n}=t(this.moreTypes?3:0);this.moreTypes&&(r[n++]=212,r[n++]=120,r[n++]=0),$([e.source,e.flags])}},{pack(e,t){this.moreTypes?eb(e,16,t):ew(ea?Buffer.from(e):new Uint8Array(e),t)}},{pack(e,t){let $=e.constructor;$!==ex&&this.moreTypes?eb(e,K.indexOf($.name),t):ew(e,t)}},{pack(e,t){let{target:$,position:r}=t(1);$[r]=193}}];let eU=new e4({useRecords:!1}),ek=eU.pack,eI=eU.pack,{NEVER:e8,ALWAYS:eA,DECIMAL_ROUND:e5,DECIMAL_FIT:e3}=en,ev=512,eO=1024,eT=2048;async function*eB(e,t){let $=new e4(t);for await(let r of e)yield $.pack(r)}let eL=function e(t,$={}){if(!t||\"object\"!=typeof t)throw Error(\"first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a promise\");let r=new m($),n,i=e=>{let t;n&&(e=Buffer.concat([n,e]),n=void 0);try{t=r.unpackMultiple(e)}catch($){if($.incomplete)n=e.slice($.lastPosition),t=$.values;else throw $}return t};return\"function\"==typeof t[Symbol.iterator]?function* e(){for(let $ of t)yield*i($)}():\"function\"==typeof t[Symbol.asyncIterator]?async function* e(){for await(let $ of t)yield*i($)}():void 0},eF=function e(t,$={}){if(t&&\"object\"==typeof t){if(\"function\"==typeof t[Symbol.iterator])return function* e(t,$){let r=new e4($);for(let n of t)yield r.pack(n)}(t,$);if(\"function\"==typeof t.then||\"function\"==typeof t[Symbol.asyncIterator])return eB(t,$);else throw Error(\"first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a Promise\")}throw Error(\"first argument must be an Iterable, Async Iterable, or a Promise for an Async Iterable\")};e.ALWAYS=eA,e.C1=g,e.DECIMAL_FIT=e3,e.DECIMAL_ROUND=e5,e.Decoder=m,e.Encoder=e4,e.FLOAT32_OPTIONS=en,e.NEVER=e8,e.Packr=e4,e.REUSE_BUFFER_MODE=ev,e.Unpackr=m,e.addExtension=function e(t){var $;if(t.Class){if(!t.pack&&!t.write)throw Error(\"Extension has no pack or write function\");if(t.pack&&!t.type)throw Error(\"Extension has no type (numeric code to identify the extension)\");eo.unshift(t.Class),el.unshift(t)}($=t).unpack?h[$.type]=$.unpack:h[$.type]=$},e.clearSource=H,e.decode=er,e.decodeIter=eL,e.encode=eI,e.encodeIter=eF,e.isNativeAccelerationEnabled=!1,e.mapsAsObjects=!0,e.pack=ek,e.roundFloat32=function e(t){ei[0]=t;let $=Q[(127&es[3])<<1|es[2]>>7];return($*t+(t>0?.5:-.5)>>0)/$},e.unpack=et,e.unpackMultiple=e$,e.useRecords=!1});\n;// ./client/utils.js\nconst until = (condition, checkInterval=400) => {\r\n    if(!!condition()) return true;\r\n    return new Promise(resolve => {\r\n        let interval = setInterval(() => {\r\n            if (!condition()) return;\r\n            clearInterval(interval);\r\n            resolve();\r\n        }, checkInterval)\r\n    })\r\n}\r\n\r\nconst SCROLL_PARAMS = Object.freeze({\r\n    sensitivity: 10 * 1300,\r\n    minAvgSpeed: 0.5 * 1300,\r\n    maxScrollTime: 150,\r\n    edgeMargin: 117 // out of 900\r\n});\r\n\r\nconst environment = window.environment = typeof location === 'undefined' ? 'server' : ((location.origin.endsWith('8080') || location.href.endsWith('editor')) ? 'editor' : 'client');\r\n\r\nconst memoizedColors = {};\r\n\r\nwindow.blendColor = blendColor;\r\nfunction blendColor(color1, color2, t) {\r\n\tconst memoizedIndex = color1 + '_' + color2 + '_' + t;\r\n\tif (memoizedColors[memoizedIndex] !== undefined) {\r\n\t\treturn memoizedColors[memoizedIndex];\r\n\t}\r\n\tconst rgb1 = {\r\n\t\tr: parseInt(color1.slice(1, 3), 16),\r\n\t\tg: parseInt(color1.slice(3, 5), 16),\r\n\t\tb: parseInt(color1.slice(5, 7), 16)\r\n\t}\r\n\tconst rgb2 = {\r\n\t\tr: parseInt(color2.slice(1, 3), 16),\r\n\t\tg: parseInt(color2.slice(3, 5), 16),\r\n\t\tb: parseInt(color2.slice(5, 7), 16)\r\n\t}\r\n\r\n\tconst result = rgbToHex(Math.floor(rgb1.r * (1 - t) + rgb2.r * t), Math.floor(rgb1.g * (1 - t) + rgb2.g * t), Math.floor(rgb1.b * (1 - t) + rgb2.b * t))\r\n\tmemoizedColors[memoizedIndex] = result;\r\n\treturn result;\r\n}\r\n\r\nfunction rgbToHex(r, g, b) {\r\n\treturn \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nfunction componentToHex(c) {\r\n\tvar hex = c.toString(16);\r\n\treturn hex.length == 1 ? \"0\" + hex : hex;\r\n}\r\n\r\n// function shortAngleDist(a0,a1) {\r\n// \tconst max = Math.PI*2;\r\n// \tconst da = (a1 - a0) % max;\r\n// \treturn 2*da % max - da;\r\n// }\r\n\r\nwindow.jewelBoxUrl = 'https://upload.wikimedia.org/wikipedia/commons/c/c3/A_Snapshot_of_the_Jewel_Box_cluster_with_the_ESO_VLT.jpg';\r\nwindow.decorationImgs = {};\r\nif(typeof Image !== 'undefined'){\r\n\twindow.arrowImg = new Image();\r\n\twindow.starImg = new Image();\r\n\twindow.starImg.crossOrigin = \"Anonymous\";\r\n\tif(environment === 'editor'){\r\n\t\t// editor\r\n\t\t(async() => {\r\n\t\t\tconst exps = await __webpack_require__.e(/* import() */ 254).then(__webpack_require__.bind(__webpack_require__, 230));\r\n\t\t\twindow.arrowImg = exps.default.arrowImg;\r\n\t\t\twindow.starImg = exps.default.starImg;\r\n\t\t})();\r\n\t} else {\r\n\t\t// client\r\n\t\twindow.arrowImg.src = './gfx/arrow.png';\r\n\t\twindow.starImg.src = window.jewelBoxUrl;\r\n\t}\r\n} else {\r\n\t// server\r\n\twindow.arrowImg = window.starImg = {};\r\n}\r\n\r\nwindow.colourRgb = (r,g,b) => {\r\n\tr = Math.max(Math.min(Number(r), 100), 0) * 2.55;\r\n\tg = Math.max(Math.min(Number(g), 100), 0) * 2.55;\r\n\tb = Math.max(Math.min(Number(b), 100), 0) * 2.55;\r\n\tr = ('0' + (Math.round(r) || 0).toString(16)).slice(-2);\r\n\tg = ('0' + (Math.round(g) || 0).toString(16)).slice(-2);\r\n\tb = ('0' + (Math.round(b) || 0).toString(16)).slice(-2);\r\n\treturn '#' + r + g + b;\r\n}\r\n\r\nif(environment === 'server') global.colourRgb = window.colourRgb;\r\n\r\nwindow.md = (a) => {return (a !== a || a === undefined || a === null) ? 0 : a;}; // make defined\r\nwindow.makeNumber = (a) => {return Number.isFinite(a) === true ? a : 0;};\r\nwindow.makeNotNaN = (a) => {return (a === a) ? a : 0;};\r\nwindow.makeNotNull = (a) => {return a === null ? 0 : a};\r\nwindow.makeNotUndefined = (a) => {return a === undefined ? 0 : a};\r\nwindow.rlt = (a) => {window.loopTrap = 1000; return a;};// reset loop trap\r\nwindow.makeType = (a,typeArr) => {\r\n\tif(typeArr.includes(generateConnectionType(a)) === true)return a;\r\n\treturn defaultTypeMap[typeof a];\r\n}\r\nwindow.generateConnectionType = (val) => {\r\n\tconst type = typeof val;\r\n\tif(type === 'number') return 'Number';\r\n\tif(type === 'string') {\r\n\t  // if(val[0] === '#') return 'Colour';\r\n\t  return ['String', 'Colour'];\r\n\t}\r\n\tif(type === 'boolean') return 'Boolean';\r\n\tif(Array.isArray(val) === true) return 'Array';\r\n\treturn null;\r\n}\r\nconst defaultTypeMap = {undefined: 0, string: '', boolean: true/*glass is half full*/, number: 0, object: []/*exclusively used for blockly, where arrays are the only object*/};\r\n\r\nconst encoder = new TextEncoder();\r\nfunction encodeAtPosition(string, u8array, position) {\r\n\treturn encoder.encodeInto(\r\n\t\tstring,\r\n\t\tposition ? u8array.subarray(position | 0) : u8array,\r\n\t);\r\n}\r\nconst decoder = new TextDecoder();\r\nfunction decodeText(u8array, startPos=0){\r\n\treturn decoder.decode(u8array).slice(startPos);\r\n}\r\n\r\n/* harmony default export */ const utils = ({ until, SCROLL_PARAMS, blendColor, environment, encodeAtPosition, decodeText });\n;// ./eXclient/networking.js\n\r\n\r\n// used for decoding chat messages\r\n\r\nconst {decodeText: networking_decodeText} = utils;\r\n\r\nconst HOST = location.origin.replace(/^http/, 'ws');\r\nlet ws, nextMsgFlag, gameStarted = false;\r\n\r\nconst messageQueue = [];\r\nwindow.send = (data) => {\r\n    messageQueue.push(data);\r\n}\r\n\r\nfunction initWS() {\r\n    ws = new WebSocket(HOST);\r\n    ws.binaryType = \"arraybuffer\"; // sends messages with binary and stuff o-o yes i am very smart\r\n\r\n    ws.addEventListener(\"message\", function (data) {\r\n        if(nextMsgFlag !== undefined){\r\n            messageMap[nextMsgFlag](data.data);\r\n            nextMsgFlag = undefined;\r\n            return;\r\n        }\r\n        const decoded = new Uint8Array(data.data);\r\n        messageMap[decoded[0]](decoded);\r\n    });\r\n\r\n    ws.onopen = () => {\r\n        console.log('connected to the server!');\r\n        window.send = (data) => {\r\n            ws.send(data);\r\n        }\r\n        for(let i = 0; i < messageQueue.length; i++){\r\n            send(messageQueue[i]);\r\n        }\r\n    }\r\n\r\n    ws.onclose = () => {\r\n        console.log('Websocket closed.');// Attempting to reconnect...\r\n        // TODO: reconnection.\r\n    }\r\n}\r\n\r\ninitWS();\r\n\r\nwindow.changeMap = function changeMap(url=`/maps/hub`, method='GET', headers=new Headers()){\r\n    headers.append('id', window.authId);\r\n    fetch(location.origin + url, {method, headers}).then(async (d) => {\r\n        const levelData = await d.text();\r\n        if(levelData === 'n') {console.error(`failed to load map url ${url}`); return;}\r\n        const [players, selfId] = JSON.parse(d.headers.get(\"X-Init-Data\"));\r\n\r\n        const prevScript = document.getElementById('gameScript');\r\n        if(prevScript !== null) prevScript.remove();\r\n\r\n        window.resetGame();\r\n        window.players.length = window.obstacles.length = 0;\r\n        const s = document.createElement('script');\r\n        s.id = \"gameScript\";\r\n        s.text = levelData;\r\n        document.body.appendChild(s);\r\n\r\n        for(let i = 0; i < players.length; i++){\r\n            if(players[i] === undefined) {window.players[i] = undefined; continue;}\r\n            const playerData = players[i];\r\n            const p = createPlayerFromData(playerData);\r\n            window.players[i] = p;\r\n        }\r\n\r\n        window.selfId = selfId;\r\n\r\n        window.won = false;\r\n        if(!gameStarted) {\r\n            window.startGame();\r\n            gameStarted = true;\r\n        } else {\r\n            window.respawnPlayer();\r\n        }\r\n    })\r\n}\r\n\r\n// first byte encodes the message type\r\nconst messageMap = [\r\n    // 0 - set auth id (not clientid)\r\n    (data) => {\r\n        const u32 = new Uint32Array(data.buffer);\r\n        window.authId = u32[1];\r\n\r\n        const username = localStorage.getItem('username');\r\n        const password = localStorage.getItem('password');\r\n        if(username === null || password === null){\r\n            // get tutorial\r\n            window.onkeydown({code: 'KeyZ', repeat: false, type: 'keydown'});\r\n            window.changeMap('/tutorial');\r\n        } else {\r\n            // log in\r\n            const headers = new Headers();\r\n            headers.append('u', username);\r\n            headers.append('p', password);\r\n            window.changeMap('/join', 'POST', headers);\r\n        }\r\n    },\r\n    // 1 - reload page (for hot refresh)\r\n    () => {\r\n        location.reload();\r\n    },\r\n    // 2 - change to create account page\r\n    (data) => {\r\n        location.replace(location.origin + '/create');\r\n    },\r\n    // 3 - flag next message as type\r\n    (data) => {\r\n        nextMsgFlag = data[1];\r\n    },\r\n    // 4 - player x and y\r\n    (data) => {\r\n        const raw = data.buffer;\r\n        const u16 = new Uint16Array(raw);\r\n        const id = u16[1];\r\n\r\n        if(id === window.selfId) return;\r\n\r\n        const f32 = new Float32Array(raw);\r\n        window.players[id].pos.x = f32[1];\r\n        window.players[id].pos.y = f32[2];\r\n    },\r\n    // 5 - new player\r\n    (data) => {\r\n        let p = createPlayerFromData(msgpackr.unpack(data));\r\n        window.players[p.id] = p;\r\n    },\r\n    // 6 - remove player\r\n    (data) => {\r\n        let id = new Uint16Array(data.buffer)[1];\r\n        window.players[id] = undefined;// make america undefined again\r\n    },\r\n    // 7 - chat message\r\n    (data) => {\r\n        const chatMsg = networking_decodeText(data, 2);\r\n        const type = ['normal', 'system', 'dev', 'guest'][data[1]];\r\n\r\n        const div = document.createElement('div');\r\n        if (type !== 'system') {\r\n            div.classList.add('chat-message');\r\n        } else {\r\n            div.classList.add('system-message');\r\n            // if (data.difficulty != undefined) {\r\n            //     div.classList.add(data.difficulty.toLowerCase());\r\n            // }\r\n        }\r\n        div.innerHTML = `${type === 'system'\r\n            ? '<span class=\"rainbow\">[SERVER]</span>'\r\n            : type === 'dev'\r\n            ? '<span class=\"rainbow\">[DEV]</span> '\r\n            : ''}${type === 'guest' ? '<span class=\"guest\">' : ''}${\r\n                chatMsg\r\n            }${type === 'guest' ? '</span>' : ''}`;\r\n        const chatMessageDiv = document.querySelector('.chat-div');\r\n        chatMessageDiv.appendChild(div);\r\n        chatMessageDiv.scrollTop = chatMessageDiv.scrollHeight;\r\n    },\r\n    // 8 - toggle godmode\r\n    (data) => {\r\n        const u16 = new Uint16Array(data.buffer);\r\n        const id = u16[1];\r\n\r\n        if(id === window.selfId) return;\r\n\r\n        window.players[id].god = data[1] === 1;\r\n    },\r\n    // 9 - set ship angle\r\n    (data) => {\r\n        const u16 = new Uint16Array(data.buffer);\r\n        const id = u16[1];\r\n        if(id === window.selfId) return;\r\n\r\n        const f32 = new Float32Array(data.buffer);\r\n        window.players[id].ship = true;\r\n        window.players[id].shipAngle = f32[1];\r\n    },\r\n    // 10 - disable ship\r\n    (data) => {\r\n        const u16 = new Uint16Array(data.buffer);\r\n        const id = u16[1];\r\n        if(id === window.selfId) return;\r\n\r\n        window.players[id].ship = false;\r\n    },\r\n    // 11 - set grapple\r\n    (data) => {\r\n        const u16 = new Uint16Array(data.buffer);\r\n        const id = u16[1];\r\n        if(id === window.selfId) return;\r\n\r\n        const f32 = new Float32Array(data.buffer);\r\n        window.players[id].grapple = true;\r\n        window.players[id].grappleX = f32[1];\r\n        window.players[id].grappleY = f32[2];\r\n    },\r\n    // 13 - disable grapple\r\n    (data) => {\r\n        const u16 = new Uint16Array(data.buffer);\r\n        const id = u16[1];\r\n        if(id === window.selfId) return;\r\n\r\n        window.players[id].grapple = false;\r\n    },\r\n    // 13 - set death timer\r\n    (data) => {\r\n        const u16 = new Uint16Array(data.buffer);\r\n        const id = u16[1];\r\n        if(id === window.selfId) return;\r\n\r\n        const f32 = new Float32Array(data.buffer);\r\n        window.players[id].deathTimer = true;\r\n        window.players[id].deathTime = f32[1];\r\n    },\r\n    // 14 - disable death timer\r\n    (data) => {\r\n        const u16 = new Uint16Array(data.buffer);\r\n        const id = u16[1];\r\n        if(id === window.selfId) return;\r\n\r\n        window.players[id].deathTimer = false;\r\n    },\r\n    // 15 - change dead\r\n    (data) => {\r\n        const u16 = new Uint16Array(data.buffer);\r\n        const id = u16[1];\r\n        if(id === window.selfId) return;\r\n\r\n        window.players[id].dead = data[1] === 1;\r\n    },\r\n]\r\n\r\nfunction createPlayerFromData(data){\r\n    const p = window.createPlayer();\r\n\r\n    // if this gets bigger we may want to\r\n    // for(let key in data)\r\n    p.pos.x = data.pos.x;\r\n    p.pos.y = data.pos.y;\r\n    p.name = data.name;\r\n    p.dead = data.dead;\r\n    p.id = data.id;\r\n    p.god = data.god;\r\n    p.ship = data.ship;\r\n    p.shipAngle = data.shipAngle;\r\n    p.grapple = data.grapple;\r\n    p.grappleX = data.grappleX;\r\n    p.grappleY = data.grappleY;\r\n    p.deathTimer = data.deathTimer;\r\n    p.deathTime = data.deathTime;\r\n\r\n    return p;\r\n}\n;// ./client/scroll.js\n\r\nconst { until: scroll_until, environment: scroll_environment } = utils;\r\n\r\nlet nextCode;\r\nconst nextCodeLoaded = () => { return nextCode !== undefined; };\r\nconst isServer = typeof location === 'undefined';\r\nlet reqUrl = isServer === true ? '' : `${location.origin}/game`;\r\nlet loadingCurrent = false;\r\nlet nextFileName = '';\r\nlet lastFileNameStack = [];\r\nlet forwardFileNameStack = [];\r\nwindow.levelFileName = '';\r\n\r\nwindow.isExClient = true;// TEMP\r\n\r\n// never get code from server in editor\r\nif(scroll_environment === 'editor' || scroll_environment === 'server' || window.isExClient === true){\r\n    getNextCode = async () => {\r\n        await scroll_until(() => { return false; })\r\n    };\r\n    scroll_scroll = () => {};\r\n} else if(location.href.includes('standalone') === true){\r\n    window.standalone = true;\r\n    const split = location.href.split('/');\r\n    reqUrl += '/' + split[split.length - 1];\r\n    scroll_scroll = () => {};\r\n} else if(localStorage.getItem('tutorialCompleted') === null) {\r\n    let getNextCodeLoaded = false;\r\n    getNextCode = async () => {\r\n        await scroll_until(() => {return getNextCodeLoaded !== false});\r\n        return getNextCode();\r\n    };\r\n    window.tutorial = true;\r\n    (async () => {\r\n        const exps = await __webpack_require__.e(/* import() */ 186).then(__webpack_require__.bind(__webpack_require__, 186));\r\n        getNextCode = exps.default;\r\n        getNextCodeLoaded = true;\r\n    })();\r\n}\r\n\r\n// get first code\r\ngetNextCode().then(async (code) => {\r\n    // load first request\r\n    nextCode = code;\r\n    replaceScript();\r\n\r\n    if(window.standalone === true){\r\n        getNextCode = async () => {\r\n            await scroll_until(() => { return false; })\r\n        };\r\n        return;\r\n    }\r\n\r\n    // load next code when it arrives\r\n    nextCode = await firstNextCode;\r\n})\r\n\r\n// get next code\r\nlet firstNextCode = getNextCode();\r\n\r\n// on scroll\r\nasync function scroll_scroll(up=false){\r\n    // don't allow scrolling if we're loading the current code\r\n    // it'll look the same to the user anyways\r\n    if(loadingCurrent === true) return;\r\n    if(up === true){\r\n        if(lastFileNameStack.length === 0) return;\r\n        var lastCode = nextCode;\r\n        forwardFileNameStack.push(window.levelFileName);\r\n        nextCode = await getLastCode(lastFileNameStack.pop());\r\n    } else if(window.levelFileName !== ''){\r\n        lastFileNameStack.push(window.levelFileName);\r\n        if(lastFileNameStack.length > 42) lastFileNameStack.shift();\r\n        if(forwardFileNameStack.length !== 0) nextCode = await getLastCode(forwardFileNameStack.pop());\r\n    }\r\n\r\n    window.scrollingUp = up === true;\r\n    window.lastObstacles = [];\r\n    for(let i = 0; i < obstacles.length; i++){\r\n        window.lastObstacles.push(obstacles[i]);\r\n    }\r\n    for(let key in window.colors){\r\n        window.lastColors[key] = window.colors[key];\r\n        window.colors[key] = window.defaultColors[key];\r\n    }\r\n    window.lastPlayerData = [player.pos.x, player.pos.y];\r\n\r\n    // if we already have the next code\r\n    if(nextCode !== undefined){\r\n        // append new script to run second game\r\n        replaceScript();\r\n\r\n        // animation timer\r\n        window.scrollAnimation = 0;\r\n\r\n        // fetch new next code\r\n        if(up === true) nextCode = lastCode;\r\n        else nextCode = await getNextCode();\r\n    } else {\r\n        // loading current, nextcode\r\n        loadingCurrent = true;\r\n\r\n        // load blank screen for now\r\n        removeScript();\r\n\r\n        // animation timer\r\n        window.scrollAnimation = 0;\r\n\r\n        // code is on its way, wait until it gets here\r\n        await scroll_until(nextCodeLoaded, 16.66);\r\n\r\n        // set code\r\n        replaceScript();\r\n\r\n        // unlock mutex\r\n        loadingCurrent = false;\r\n\r\n        // fetch new next code\r\n        nextCode = await getNextCode();\r\n    }\r\n}\r\n\r\nwindow.won = false;\r\nasync function getNextCode(){\r\n    const response = await fetch(reqUrl);\r\n    if (!response.ok) throw new Error(`Failed to fetch ${reqUrl}`);\r\n    nextFileName = response.headers.get('Fn');\r\n    return response.text();\r\n}\r\n\r\nasync function getLastCode(fileName){\r\n    const fileNameWithoutTheJS = fileName.slice(0, fileName.length-3);\r\n    const response = await fetch(reqUrl + '/' + fileNameWithoutTheJS);\r\n    if (!response.ok) throw new Error(`Failed to fetch ${reqUrl}`);\r\n    nextFileName = fileName;\r\n    return response.text();\r\n}\r\n\r\n// replaces code running with nextCode\r\nasync function replaceScript(){\r\n    removeScript();\r\n\r\n    window.resetGame();\r\n    stopMusic();\r\n\r\n    const scriptElement = document.createElement('script');\r\n    scriptElement.id = \"gameScript\";\r\n    scriptElement.text = nextCode;\r\n    document.body.appendChild(scriptElement);\r\n\r\n    nextCode = undefined;\r\n    window.levelFileName = nextFileName;\r\n}\r\n\r\nwindow.removeScript = function removeScript(){\r\n    const last = document.getElementById(\"gameScript\");\r\n    if(last !== null) last.remove();\r\n    window.resetGame();\r\n    stopMusic();\r\n}\r\n\r\nwindow.resetGame = () => {\r\n    window.obstacles.length = window.mouseUpFunctions.length = window.mouseDownFunctions.length = window.mouseMoveFunctions.length = window.resizeFns.length = 0;\r\n    if(window.environment !== 'editor') {window.respawnPlayer(); /*player.renderRadius = player.sat.r;*/ }\r\n    else {window.infiniteLoop = false;}\r\n    for(let key in window.defaultColors) { window.colors[key] = window.defaultColors[key]; }\r\n    if(window.colors.vignette !== undefined) window.colors.vignette = structuredClone(window.defaultColors.vignette);\r\n    window.mouseDownFunctions.push(() => {\r\n        if(player.dead === true) window.respawnPlayer();\r\n    })\r\n    if(window.addSideMenuEvtListeners !== undefined) window.addSideMenuEvtListeners(nextFileName);\r\n    window.spawnPosition.x = 100;\r\n    window.spawnPosition.y = 1500;\r\n    const player = window.players[window.selfId];\r\n    if(player !== undefined){\r\n        player.sat.r = 49.5;\r\n        player.speed = player.baseSpeed = 0.43;\r\n    }\r\n    window.idToObs = {};\r\n}\r\n\r\n/* harmony default export */ const client_scroll = (scroll_scroll);\n;// ./client/components.js\n\r\nconst { environment: components_environment, blendColor: components_blendColor, encodeAtPosition: components_encodeAtPosition } = utils;\r\n\r\nlet toScroll = false;\r\n\r\nwindow.respawnPlayer = () => {\r\n    const player = window.players[window.selfId];\r\n    if(player === undefined) return;\r\n    player.pos.x = window.spawnPosition.x;\r\n    player.pos.y = window.spawnPosition.y;\r\n    player.renderRadius = 0;\r\n    player.dead = false;\r\n    player.forces.length = 0;\r\n    if(dragging === true) {window.onmouseup(); dragging = true;}\r\n    else window.onmouseup();\r\n}\r\n\r\nconst SAT = window.SAT;\r\nSAT.Circle.prototype.rotate = function (angle) {\r\n    this.pos.rotate(angle);\r\n}\r\n\r\nfunction create(shape, simulates, effects, params){\r\n    const e = {\r\n        sat: satMap[shape](params),\r\n        simulate: [],\r\n        effect: [],\r\n        renderShape: renderShapeMap[shape],\r\n        renderEffect: effects.map(e => renderEffectMap[e]),\r\n    };\r\n    e.renderEffectTimer = 0;\r\n    e.pos = e.sat.pos;\r\n    if(shape === 0) e.sat.r = Math.max(e.sat.r, 0.001);\r\n    else if(shape === 3) {e.isText = true; e.text = params.text; e.fontSize = params.fontSize; }\r\n    else if(shape === 4){\r\n        e.sat.r = Math.max(e.sat.r, 0.001); e.innerRadius = Math.max(params.innerRadius, 0);\r\n        e.startSlice = params.startSlice; e.startSliceAngle = params.startSliceAngle;\r\n        e.endSlice = params.endSlice; e.endSliceAngle = params.endSliceAngle;\r\n        e.startSliceAngleRotateSpeed = params.startSliceAngleRotateSpeed;\r\n        e.endSliceAngleRotateSpeed = params.endSliceAngleRotateSpeed;\r\n        if(params.circleSliceRotate !== undefined) e.simulate.push(params.circleSliceRotate);\r\n    }\r\n    for(let key in window.satConstraintsMap[shape]){\r\n        // [min, max, mustBeInt, customValidator(e)]\r\n        const c = window.satConstraintsMap[shape][key];\r\n        if(c[2] === true) e[key] = Math.round(e[key]);\r\n        if(e[key] < c[0]) e[key] = c[0];\r\n        else if(e[key] > c[1]) e[key] = c[1];\r\n    }\r\n    e.dimensions = generateDimensions(e);\r\n    e.topLeft = generateTopLeftCoordinates(e);\r\n    for(let i = 0; i < simulates.length; i++){\r\n        e.simulate.push(simulateMap[simulates[i]]);\r\n        initSimulateMap[simulates[i]](e, params);\r\n        for(let key in window.simulateConstraintsMap[simulates[i]]){\r\n            // [min, max, mustBeInt, customValidator(e)]\r\n            const c = window.simulateConstraintsMap[simulates[i]][key];\r\n            if(c[2] === true) e[key] = Math.round(e[key]);\r\n            if(e[key] < c[0]) e[key] = c[0];\r\n            else if(e[key] > c[1]) e[key] = c[1];\r\n        }\r\n    }\r\n    for(let i = 0; i < effects.length; i++){\r\n        e.effect.push(effectMap[effects[i]]);\r\n        initEffectMap[effects[i]](e, params);\r\n        if(idleEffectMap[effects[i]] !== undefined) e.simulate.push(idleEffectMap[effects[i]]);\r\n        for(let key in window.effectConstraintsMap[effects[i]]){\r\n            // [min, max, mustBeInt, customValidator(e)]\r\n            const c = window.effectConstraintsMap[effects[i]][key];\r\n            if(c[2] === true) e[key] = Math.round(e[key]);\r\n            if(e[key] < c[0]) e[key] = c[0];\r\n            else if(e[key] > c[1]) e[key] = c[1];\r\n        }\r\n    }\r\n    if(params.sf !== undefined) e.simulate.push(params.sf);\r\n    if(params.ef !== undefined) {e.effect.push(params.ef); e.renderEffect.push(renderEffectMap[3]);}\r\n    if(params.sf !== undefined || params.ef !== undefined) {e.simulate.push(()=>{e.dimensions=generateDimensions(e);e.topLeft=generateTopLeftCoordinates(e);})};\r\n    if(params.cr !== undefined) e.cr = params.cr;\r\n    \r\n    components_obstacles.push(e);\r\n\r\n    // fixing polygon points if they're dynamically generated\r\n    if(params.fixPoly !== undefined){\r\n        if(components_environment === 'editor'){\r\n            e.sat.setPoints(window.fixPolygon(params.points).map(pt => new SAT.Vector(pt[0], pt[1])));\r\n            e.dimensions = generateDimensions(e);\r\n            e.topLeft = generateTopLeftCoordinates(e);\r\n        } else {\r\n            (async()=>{\r\n                await __webpack_require__.e(/* import() */ 281).then(__webpack_require__.bind(__webpack_require__, 281));\r\n                e.sat.setPoints(window.fixPolygon(params.points).map(pt => new SAT.Vector(pt[0], pt[1])));\r\n                e.dimensions = generateDimensions(e);\r\n                e.topLeft = generateTopLeftCoordinates(e);\r\n            })();\r\n        }\r\n    }\r\n}\r\nwindow.C = create;\r\nwindow.idToObs = {};\r\nwindow.tickFns = [];\r\n\r\nfunction components_interpolate(start, end, t){\r\n    return (1-t) * start + t * end;\r\n}\r\n\r\nlet res = new SAT.Response();\r\nlet angle, collided = false, grappleForceObj={};\r\nfunction simulate(){\r\n    // player simulation\r\n    const player = window.players[window.selfId];\r\n\r\n    if(window.isExClient === true){\r\n        player.renderRadius = components_interpolate(player.renderRadius, player.sat.r, 1 / 5.4);\r\n    } else {\r\n        player.renderRadius = player.renderRadius * 0.83 + player.sat.r * 0.17;\r\n    }\r\n\r\n    if(window.isExClient === true && player.dead === false) {\r\n        player.xa = (input.right - input.left) * player.speed;\r\n        player.ya = (input.down - input.up) * player.speed;\r\n\r\n        if(input.shift === true) {\r\n            if(player.god === true){\r\n                player.xa *= 5;\r\n                player.ya *= 5;\r\n            } else {\r\n                player.xa *= 0.5;\r\n                player.ya *= 0.5;\r\n            }\r\n        }\r\n\r\n        if(player.ship === false){\r\n            player.xv += player.xa * player.axisSpeedMultX;\r\n            player.yv += player.ya * player.axisSpeedMultY;\r\n        } else {\r\n            player.shipAngle += player.xa * player.shipTurnSpeed;\r\n\r\n            player.xv -= Math.cos(player.shipAngle) * player.ya * player.axisSpeedMultX;\r\n            player.yv -= Math.sin(player.shipAngle) * player.ya * player.axisSpeedMultY;\r\n        }\r\n\r\n        player.pos.x += player.xv;\r\n        player.pos.y += player.yv;\r\n\r\n        player.xv *= player.friction;\r\n        player.yv *= player.friction;\r\n    } else if(window.dragging === true && player.dead === false){\r\n        if(player.axisSpeedMultX === 0 || player.axisSpeedMultY === 0) angle = Math.atan2((window.mouseY - player.pos.y), (window.mouseX - player.pos.x));\r\n        else angle = Math.atan2((window.mouseY - player.pos.y) * player.axisSpeedMultX, (window.mouseX - player.pos.x) * player.axisSpeedMultY);\r\n        player.xv = Math.cos(angle) * player.speed * player.axisSpeedMultX;\r\n        player.yv = Math.sin(angle) * player.speed * player.axisSpeedMultY;\r\n        if(Math.abs(player.xv) > Math.abs(player.pos.x - window.mouseX)) player.xv = window.mouseX - player.pos.x;\r\n        if(Math.abs(player.yv) > Math.abs(player.pos.y - window.mouseY)) player.yv = window.mouseY - player.pos.y;\r\n        player.pos.x += player.xv;\r\n        player.pos.y += player.yv; \r\n    } else {\r\n        player.xv = player.yv = 0;\r\n    }\r\n    player.axisSpeedMultX = player.axisSpeedMultY = 1;\r\n\r\n    if(player.stopForces === true){\r\n        player.stopForces = false;\r\n        player.forces.length = 0;\r\n    } else {\r\n        for(let i = 0; i < player.forces.length; i+=3){\r\n            player.pos.x += player.forces[i];\r\n            player.pos.y += player.forces[i+1];\r\n\r\n            player.forces[i] *= player.forces[i+2];\r\n            player.forces[i+1] *= player.forces[i+2];\r\n\r\n            if(Math.abs(player.forces[i]) < 0.01 && Math.abs(player.forces[i+1]) < 0.01){\r\n                player.forces.splice(i,3);\r\n                i-=3;\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n\r\n    if(player.dead === true){\r\n        player.forces.length = 0;\r\n        player.renderRadius = player.lastAliveRadius;\r\n        for(let i = 0; i < components_obstacles.length; i++){\r\n            // obstacle simulation\r\n            for(let j = 0; j < components_obstacles[i].simulate.length; j++){\r\n                components_obstacles[i].simulate[j](components_obstacles[i], player);\r\n            }\r\n        }\r\n    } else {\r\n        player.lastAliveRadius = player.sat.r;\r\n        if(player.god !== true){\r\n            if(player.pos.x - player.sat.r < 0) player.pos.x = player.sat.r;\r\n            else if(player.pos.x + player.sat.r > window.mapDimensions.x) player.pos.x = window.mapDimensions.x - player.sat.r;\r\n            if(player.pos.y - player.sat.r < 0) player.pos.y = player.sat.r;\r\n            else if(player.pos.y + player.sat.r > window.mapDimensions.y) player.pos.y = window.mapDimensions.y - player.sat.r;\r\n        \r\n            for(let i = 0; i < components_obstacles.length; i++){\r\n                // collision (done before simulation because that is what last rendered frame sees)\r\n                if(components_obstacles[i].sat.r !== undefined){\r\n                    if(components_obstacles[i].startSlice !== undefined){\r\n                        collided = testCircleSliceCircle(components_obstacles[i], player, res);\r\n                    } else {\r\n                        collided = SAT.testCircleCircle(components_obstacles[i].sat, player.sat, res);\r\n                    }\r\n                } else {\r\n                    collided = SAT.testPolygonCircle(components_obstacles[i].sat, player.sat, res);\r\n                }\r\n                if(collided === true){\r\n                    for(let j = 0; j < components_obstacles[i].effect.length; j++){\r\n                        components_obstacles[i].effect[j](player, res, components_obstacles[i], i);\r\n                    }\r\n                }\r\n                res.clear();// TODO: test if this is really needed\r\n        \r\n                // obstacle simulation\r\n                for(let j = 0; j < components_obstacles[i].simulate.length; j++){\r\n                    components_obstacles[i].simulate[j](components_obstacles[i], player);\r\n                }\r\n            }\r\n        } else {\r\n            // just do simulation if in godmode\r\n            for(let i = 0; i < components_obstacles.length; i++){\r\n                for(let j = 0; j < components_obstacles[i].simulate.length; j++){\r\n                    components_obstacles[i].simulate[j](components_obstacles[i], player);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(player.grapple === true){\r\n            if(input.action1 === true && player.grappleX === -1){\r\n                let resetRadius = player.sat.r;\r\n                player.sat.r = player.grappleRange;\r\n                let closestAngle = 0;\r\n                let priorityResetRadius = 0;\r\n                let grapPointPriority = false;\r\n                for(let i = 0; i < components_obstacles.length; i++){\r\n                    if(components_obstacles[i].isGrapplePoint === true && grapPointPriority === false){\r\n                        priorityResetRadius = player.sat.r;\r\n                        player.sat.r = player.grappleRange;\r\n                    }\r\n\r\n                    if(components_obstacles[i].sat.r !== undefined){\r\n                        if(components_obstacles[i].startSlice !== undefined){\r\n                            collided = testCircleSliceCircle(components_obstacles[i], player, res);\r\n                        } else {\r\n                            collided = SAT.testCircleCircle(components_obstacles[i].sat, player.sat, res);\r\n                        }\r\n                    } else {\r\n                        collided = SAT.testPolygonCircle(components_obstacles[i].sat, player.sat, res);\r\n                    }\r\n                    \r\n                    if(components_obstacles[i].isGrapplePoint === true){\r\n                        if(collided === true){\r\n                            grapPointPriority = true;\r\n                            player.sat.r -= res.overlap;\r\n                            closestAngle = Math.atan2(res.overlapN.y, res.overlapN.x);\r\n                        } else if(grapPointPriority === false){\r\n                            player.sat.r = priorityResetRadius;\r\n                        }\r\n                    } else if(collided === true && grapPointPriority === false){\r\n                        player.sat.r -= res.overlap;\r\n                        closestAngle = Math.atan2(res.overlapN.y, res.overlapN.x);\r\n                    }\r\n                    \r\n                    res.clear();// TODO: test if this is really needed\r\n                }\r\n\r\n                if(player.sat.r < player.grappleRange){\r\n                    player.sat.r = Math.max(player.sat.r, 0);\r\n                    player.grappleX = player.pos.x - Math.cos(closestAngle) * player.sat.r;\r\n                    player.grappleY = player.pos.y - Math.sin(closestAngle) * player.sat.r;\r\n                }\r\n                player.sat.r = resetRadius;\r\n            } else if(player.grappleX !== -1){\r\n                if(input.action1 === false){\r\n                    player.grappleX = player.grappleY = -1;\r\n                } else {\r\n                    let grappleLen = Math.sqrt((player.pos.x - player.grappleX) ** 2 + (player.pos.y - player.grappleY) ** 2);\r\n                    let grappleAngle = Math.atan2(player.grappleY - player.pos.y, player.grappleX - player.pos.x);\r\n\r\n                    player.forces.push(\r\n                        Math.cos(grappleAngle) * grappleLen * player.grappleForce,\r\n                        Math.sin(grappleAngle) * grappleLen * player.grappleForce,\r\n                        player.grappleFric\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if(player.touchingNormalIndexes.length !== 0 || player.lastTouchingNormalIndexes.length !== 0){\r\n        player.lastTouchingNormalIndexes = player.touchingNormalIndexes;\r\n        player.touchingNormalIndexes = [];\r\n    }\r\n\r\n    if(player.onSafe === true){\r\n        player.onSafe = false;\r\n        if(player.timeTrapOverrideSafe === true){\r\n            player.timeTrapOverrideSafe = false;\r\n        } else {\r\n            player.dead = false;\r\n        }\r\n    }\r\n\r\n    if(player.deathTimer === true){\r\n        player.deathTime--;\r\n        if(player.deathTime < 0 || player.dead === true){\r\n            player.deathTime = Infinity;\r\n            player.deathTimer = false;\r\n            player.dead = true;\r\n\r\n            window.u4[0] = 14;\r\n            send(window.u4);\r\n        }\r\n    }\r\n\r\n    // bounding the player by the walls\r\n    player.touchingWall = false;\r\n    if(player.sat.r > 900) player.sat.r = 900;\r\n\r\n    if(player.god !== true){\r\n        if(player.pos.x - player.sat.r < 0){\r\n            player.pos.x = player.sat.r;\r\n            player.touchingWall = true;\r\n        } else if(player.pos.x + player.sat.r > mapDimensions.x){\r\n            player.pos.x = mapDimensions.x - player.sat.r;\r\n            player.touchingWall = true;\r\n        }\r\n        if(player.pos.y - player.sat.r < 0){\r\n            player.pos.y = player.sat.r;\r\n            player.touchingWall = true;\r\n        } else if(player.pos.y + player.sat.r > mapDimensions.y){\r\n            player.pos.y = mapDimensions.y - player.sat.r;\r\n            player.touchingWall = true;\r\n        }\r\n    } else {\r\n        player.dead = false;\r\n    }\r\n\r\n    if(window.tickFns.length > 0){\r\n        for(let i = 0; i < window.tickFns.length; i++){\r\n            window.tickFns[i]();\r\n        }\r\n        window.tickFns.length = 0;\r\n    }\r\n\r\n    // scrolling if specified by a simulate type\r\n    if(toScroll === true){\r\n        toScroll = false;\r\n        if(window.dragging === true) window.onmouseup();\r\n        client_scroll();\r\n    }\r\n\r\n    window.frames++;\r\n}\r\n\r\nlet runningOverlapN = new SAT.Vector(), runningOverlapV = new SAT.Vector();\r\nfunction testCircleSliceCircle(circleSlice, circle, res){\r\n    let collisionAngle, collisionDistSq, gts, lte, angleOverflow, collided = false;\r\n\r\n    // do circle first, then slices. If we collide with the circle then we don't want to collide w/ slices\r\n    collisionAngle = Math.atan2(circle.pos.y - circleSlice.pos.y, circle.pos.x - circleSlice.pos.x);\r\n    if(collisionAngle < 0) collisionAngle += Math.PI * 2;\r\n\r\n    gts = circleSlice.startSliceAngle < collisionAngle;\r\n    lte = collisionAngle < circleSlice.endSliceAngle;\r\n    \r\n    angleOverflow = circleSlice.startSliceAngle > circleSlice.endSliceAngle;\r\n\r\n    if(angleOverflow === true ? (gts === true || lte === true) : (gts === true && lte === true)){\r\n        collided = SAT.testCircleCircle(circleSlice.sat, circle.sat, res);\r\n\r\n        if(collided === true){\r\n            collisionDistSq = (circle.pos.y - circleSlice.pos.y) ** 2 + (circle.pos.x - circleSlice.pos.x) ** 2;\r\n\r\n            if(collisionDistSq > ((circleSlice.innerRadius + circleSlice.sat.r + circle.sat.r) / 2) ** 2){\r\n                // normal circle collision\r\n                return true;\r\n            } else {\r\n                if(collisionDistSq <= (circleSlice.innerRadius - circle.sat.r) ** 2){\r\n                    // we're too far inside, no collision\r\n                    res.clear();\r\n                    res.overlapN.x = res.overlapN.y = 0;\r\n                    res.overlapV.x = res.overlapV.y = 0;\r\n                    return false;\r\n                } else {\r\n                    // we're inside the circle - bound the opp way\r\n                    res.overlapN = res.overlapN.scale(-1,-1);\r\n                    res.overlap = (circleSlice.sat.r - circleSlice.innerRadius + circle.sat.r * 2) - res.overlap;\r\n                    res.overlapV = new SAT.Vector(res.overlapN.x * res.overlap, res.overlapN.y * res.overlap);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if(Math.abs((circleSlice.startSliceAngle - circleSlice.endSliceAngle) % (Math.PI * 2)) < 0.001){\r\n        // circle slices are on top of each other. We missed collision with the circle, so we're done\r\n        return false;\r\n    }\r\n\r\n    runningOverlapN.x = runningOverlapN.y = 0;\r\n    runningOverlapV.x = runningOverlapV.y = 0;\r\n\r\n    // collision with startSlice\r\n    if(SAT.testPolygonCircle(circleSlice.startSlice, circle.sat, res) === true){\r\n        collided = true;\r\n        runningOverlapN.x += res.overlapN.x;\r\n        runningOverlapN.y += res.overlapN.y;\r\n        runningOverlapV.x += res.overlapV.x;\r\n        runningOverlapV.y += res.overlapV.y;\r\n        res.clear();\r\n        res.overlapN.x = res.overlapN.y = 0;\r\n        res.overlapV.x = res.overlapV.y = 0;\r\n    }\r\n    \r\n    // collision with endSlice\r\n    collided ||= SAT.testPolygonCircle(circleSlice.endSlice, circle.sat, res);\r\n\r\n    res.overlapN.x += runningOverlapN.x;\r\n    res.overlapN.y += runningOverlapN.y;\r\n    res.overlapN = res.overlapN.normalize();\r\n    res.overlapV.x += runningOverlapV.x;\r\n    res.overlapV.y += runningOverlapV.y;\r\n    res.overlap = res.overlapV.x / res.overlapN.x;\r\n\r\n    return collided;\r\n}\r\n\r\n// 0 - circle, 1 - polygon\r\nconst collisionMatrix = [\r\n    SAT.testCircleCircle, SAT.testCirclePolygon,\r\n    SAT.testPolygonCircle, SAT.testPolygonPolygon\r\n]\r\nwindow.collide = (a,b) => {\r\n    res.hasCollided = collisionMatrix[(a.sat.r === undefined) * 2 + (b.sat.r === undefined)](a.sat, b.sat, res);\r\n    return res;// make sure to clear after use!\r\n}\r\nwindow.boundAB = (a,b) => {\r\n    const res = window.collide(a,b);\r\n    if(res.hasCollided === true) {\r\n        a.pos.x -= res.overlapV.x;\r\n        a.pos.y -= res.overlapV.y;\r\n    }\r\n    res.clear();\r\n}\r\nwindow.isABColliding = (a,b) => {\r\n    if(a === undefined || b === undefined) return false;\r\n    const res = window.collide(a,b);\r\n    const hasCollided = res.hasCollided;\r\n    res.clear();\r\n    return hasCollided;\r\n}\r\n\r\nconst satMap = [\r\n    /*circle*/\r\n    (p) => {\r\n        // x,y,r\r\n        return new SAT.Circle(new SAT.Vector(p.x, p.y), p.r);\r\n    },\r\n    /*rectangle*/\r\n    (p) => {\r\n        // x,y,w,h\r\n        return new SAT.Box(new SAT.Vector(p.x, p.y), p.w, p.h).toPolygon();\r\n    },\r\n    /*polygon*/\r\n    (p) => {\r\n        // points: [[x,y], ...]\r\n        if(p.points.length < 2) p.points = window.satDefaultMap[2].points;\r\n        p.x = 0; p.y = 0;\r\n        const s = new SAT.Polygon(new SAT.Vector(), p.points.map(pt => new SAT.Vector(pt[0], pt[1])));\r\n        s.pos.x = p.x;\r\n        s.pos.y = p.y;\r\n        return s;\r\n    },\r\n    /*text*/\r\n    (p) => {\r\n        if(window.isServer === true) return new SAT.Box(new SAT.Vector(p.x, p.y), 100, 100).toPolygon();\r\n        ctx.textAlign = 'center';\r\n        ctx.textBaseline = 'middle';\r\n        ctx.font = `${p.fontSize}px Inter`;\r\n        const dimensions = ctx.measureText(p.text);\r\n        const w = dimensions.actualBoundingBoxRight + dimensions.actualBoundingBoxLeft;\r\n        const h = dimensions.actualBoundingBoxDescent + dimensions.actualBoundingBoxAscent;\r\n        const s = new SAT.Box(new SAT.Vector(p.x - w / 2, p.y - h / 2), w, h).toPolygon();\r\n        return s;\r\n    },\r\n    /*circleSlice*/\r\n    (p) => {\r\n        const sat = new SAT.Circle(new SAT.Vector(p.x, p.y), p.r);\r\n        const o = p;\r\n        o.startSliceAngle %= Math.PI * 2;\r\n        o.endSliceAngle %= Math.PI * 2;\r\n        if(o.startSliceAngle < 0) o.startSliceAngle += Math.PI * 2;\r\n        if(o.endSliceAngle < 0) o.endSliceAngle += Math.PI * 2;\r\n        o.startSlice = new SAT.Polygon(new SAT.Vector(), [\r\n            new SAT.Vector(Math.cos(o.startSliceAngle) * o.r, Math.sin(o.startSliceAngle) * o.r),\r\n            new SAT.Vector(Math.cos(o.startSliceAngle) * o.innerRadius, Math.sin(o.startSliceAngle) * o.innerRadius),\r\n        ]);\r\n        o.endSlice = new SAT.Polygon(new SAT.Vector(), [\r\n            new SAT.Vector(Math.cos(o.endSliceAngle) * o.r, Math.sin(o.endSliceAngle) * o.r),\r\n            new SAT.Vector(Math.cos(o.endSliceAngle) * o.innerRadius, Math.sin(o.endSliceAngle) * o.innerRadius),\r\n        ]);\r\n        o.startSlice.pos = o.endSlice.pos = sat.pos;\r\n        if(p.startSliceAngleRotateSpeed !== 0 || p.endSliceAngleRotateSpeed !== 0){\r\n            p.circleSliceRotate = (o) => {\r\n                o.startSliceAngle += o.startSliceAngleRotateSpeed;\r\n                o.endSliceAngle += o.endSliceAngleRotateSpeed;\r\n                o.startSliceAngle %= Math.PI * 2;\r\n                o.endSliceAngle %= Math.PI * 2;\r\n                if(o.startSliceAngle < 0) o.startSliceAngle += Math.PI * 2;\r\n                if(o.endSliceAngle < 0) o.endSliceAngle += Math.PI * 2;\r\n                o.startSlice.setPoints([\r\n                    new SAT.Vector(Math.cos(o.startSliceAngle) * o.sat.r, Math.sin(o.startSliceAngle) * o.sat.r),\r\n                    new SAT.Vector(Math.cos(o.startSliceAngle) * o.innerRadius, Math.sin(o.startSliceAngle) * o.innerRadius),\r\n                ]);\r\n                o.endSlice.setPoints([\r\n                    new SAT.Vector(Math.cos(o.endSliceAngle) * o.sat.r, Math.sin(o.endSliceAngle) * o.sat.r),\r\n                    new SAT.Vector(Math.cos(o.endSliceAngle) * o.innerRadius, Math.sin(o.endSliceAngle) * o.innerRadius),\r\n                ])\r\n                o.startSlice.pos = o.endSlice.pos = o.sat.pos;\r\n            }\r\n        }\r\n        return sat;\r\n    }\r\n];\r\n\r\n// font loading fix\r\nfunction fixFonts() {\r\n    const os = window.obstacles;\r\n    for(let i = 0; i < os.length; i++){\r\n        if(os[i].isText !== true) continue;\r\n        const oldDimensions = os[i].dimensions;\r\n        os[i].dimensions = generateDimensions(os[i]);\r\n        os[i].pos.x += (oldDimensions.x - os[i].dimensions.x) / 2;\r\n        os[i].pos.y += (oldDimensions.y - os[i].dimensions.y) / 2;\r\n        os[i].topLeft = generateTopLeftCoordinates(os[i]);\r\n    }\r\n}\r\nsetTimeout(fixFonts, 1000);\r\nsetTimeout(fixFonts, 3000);\r\n\r\nfunction generateDimensions(o){\r\n    const sat = o.sat;\r\n    if(sat.r !== undefined){\r\n        return {\r\n            x: sat.r * 2,\r\n            y: sat.r * 2\r\n        }\r\n    }\r\n    \r\n    if(o.isText === true){\r\n        ctx.textAlign = 'center';\r\n        ctx.textBaseline = 'middle';\r\n        ctx.font = `${o.fontSize}px Inter`;\r\n        const dimensions = ctx.measureText(o.text);\r\n        o.wOffset = (dimensions.actualBoundingBoxRight - dimensions.actualBoundingBoxLeft) / 2;\r\n        o.hOffset = (dimensions.actualBoundingBoxDescent - dimensions.actualBoundingBoxAscent) / 2; // *0.75?\r\n        return {\r\n            x: dimensions.actualBoundingBoxRight + dimensions.actualBoundingBoxLeft,\r\n            y: dimensions.actualBoundingBoxDescent + dimensions.actualBoundingBoxAscent,\r\n        }\r\n    }\r\n    \r\n    let top, right, bottom, left;\r\n    bottom = right = -Infinity;\r\n    top = left = Infinity;\r\n    for(let p of sat.points){\r\n        if(p.x < left) left = p.x;\r\n        if(p.x > right) right = p.x;\r\n        if(p.y > bottom) bottom = p.y;\r\n        if(p.y < top) top = p.y;\r\n    }\r\n\r\n    return {\r\n        x: right - left,\r\n        y: bottom - top\r\n    }\r\n}\r\nwindow.generateDimensions = generateDimensions;\r\n\r\nfunction generateTopLeftCoordinates(o){\r\n    let topLeftX = o.pos.x, topLeftY = o.pos.y;\r\n    if(o.sat.r !== undefined) {\r\n        topLeftX -= o.sat.r;\r\n        topLeftY -= o.sat.r; \r\n    } else {\r\n        let minX = Infinity;\r\n        let minY = Infinity;\r\n        for(let i = 0; i < o.sat.points.length; i++){\r\n            if(o.sat.points[i].x < minX) minX = o.sat.points[i].x;\r\n            if(o.sat.points[i].y < minY) minY = o.sat.points[i].y;\r\n        }\r\n        topLeftX += minX;\r\n        topLeftY += minY;\r\n    }\r\n    return {x: topLeftX, y: topLeftY};\r\n}\r\nwindow.generateTopLeftCoordinates = generateTopLeftCoordinates;\r\n\r\nwindow.satMapI2N = [\r\n    'circle',\r\n    'rectangle',\r\n    'polygon',\r\n    'text',\r\n    'circleSlice'\r\n];\r\n\r\nwindow.satConstraintsMap = [\r\n    undefined,\r\n    undefined,\r\n    undefined,\r\n    {fontSize: [1]},\r\n    undefined,\r\n];\r\n\r\nwindow.satDefaultMap = [\r\n    // circle\r\n    {\r\n        x: 450,\r\n        y: 800,\r\n        r: 120\r\n    },\r\n    // rectangle\r\n    {\r\n        x: 300,\r\n        y: 700,\r\n        w: 300,\r\n        h: 200\r\n    },\r\n    // polygon\r\n    {\r\n        points: [[300,700],[600,700],[450,900]],\r\n    },\r\n    // text\r\n    {\r\n        x: 450,\r\n        y: 800,\r\n        text: ['Why hello there', 'I am a text :D', 'Evades X', 'Taste the Edge.'][Math.floor(Math.random() * 4)],\r\n        fontSize: 80,\r\n    },\r\n    // circleSlice\r\n    {\r\n        x: 450,\r\n        y: 800,\r\n        r: 120,\r\n        innerRadius: 80,\r\n        startSliceAngle: 0,\r\n        endSliceAngle: 0,\r\n        startSliceAngleRotateSpeed: 0,\r\n        endSliceAngleRotateSpeed: 0\r\n    }\r\n]\r\n\r\nconst TAU = Math.PI * 2;\r\nconst renderShapeMap = [\r\n    /*circle*/\r\n    (o) => {\r\n        ctx.arc(o.pos.x, o.pos.y, o.sat.r, 0, TAU);\r\n    },\r\n    /*rectangle*/\r\n    (o) => {\r\n        // o.sat.calcPoints[0] is at 0,0 so we can drop that from the first two args\r\n        if(o.rotation !== undefined){\r\n            renderShapeMap[2](o);\r\n            return;\r\n        }\r\n        ctx.rect(o.pos.x, o.pos.y, o.dimensions.x, o.dimensions.y);\r\n    },\r\n    /*polygon*/\r\n    (o) => {\r\n        for(let i = 0; i < o.sat.points.length; i++){\r\n            ctx.lineTo(o.pos.x + o.sat.points[i].x, o.pos.y + o.sat.points[i].y);\r\n        }\r\n        ctx.lineTo(o.pos.x + o.sat.points[0].x, o.pos.y + o.sat.points[0].y);\r\n    },\r\n    /*text*/\r\n    (o) => {\r\n        // draw rectangle for clipping purposes\r\n        renderShapeMap[1](o);\r\n    },\r\n    /*circleSlice*/\r\n    (o) => {\r\n        ctx.moveTo(o.pos.x + Math.cos(o.startSliceAngle) * o.innerRadius, o.pos.y + Math.sin(o.startSliceAngle) * o.innerRadius);\r\n        ctx.lineTo(o.pos.x + Math.cos(o.startSliceAngle) * o.sat.r, o.pos.y + Math.sin(o.startSliceAngle) * o.sat.r);\r\n        ctx.arc(o.pos.x, o.pos.y, o.sat.r, o.startSliceAngle, o.endSliceAngle);\r\n        ctx.lineTo(o.pos.x + Math.cos(o.endSliceAngle) * o.innerRadius, o.pos.y + Math.sin(o.endSliceAngle) * o.innerRadius);\r\n        if(o.innerRadius !== 0)ctx.arc(o.pos.x, o.pos.y, o.innerRadius, o.endSliceAngle, o.startSliceAngle, true);\r\n    }\r\n]\r\n\r\nconst initSimulateMap = [\r\n    /*pathMove*/\r\n    (o, init) => {\r\n\t\to.path = init.path;// like [[x,y,speed], ...]\r\n\r\n        // filtering out consecutive duplicates\r\n        for(let i = o.path.length-1; i >= 1; i--){\r\n            if(o.path[i][0] === o.path[i-1][0] && o.path[i][1] === o.path[i-1][1]) o.path.splice(i,1);\r\n        }\r\n\r\n        if(o.path.length < 2) o.path = window.simulateDefaultMap[0].path;\r\n\r\n        o.currentPoint = Math.floor(init.currentPoint) % o.path.length;\r\n\r\n        o.pointOn = o.path[o.currentPoint];\r\n        o.speed = o.pointOn[2];\r\n        \r\n        let nextPointIndex = o.currentPoint + 1;\r\n        if (nextPointIndex === o.path.length) nextPointIndex = 0;\r\n        \r\n        o.pointTo = o.path[nextPointIndex];\r\n        angle = Math.atan2(o.pointTo[1] - o.pointOn[1], o.pointTo[0] - o.pointOn[0]);\r\n        o.xv = Math.cos(angle) * o.speed;\r\n        o.yv = Math.sin(angle) * o.speed;\r\n\r\n        o.timeRemain = Math.sqrt((o.pointOn[0] - o.pointTo[0])**2 + (o.pointOn[1] - o.pointTo[1])**2) / o.speed;\r\n        \r\n        const fractionalPointOffset = init.currentPoint - Math.floor(init.currentPoint);\r\n        if(fractionalPointOffset !== 0){\r\n            const newTimeRemain = o.timeRemain * (1 - fractionalPointOffset);\r\n            const delta = o.timeRemain - newTimeRemain;\r\n            o.pos.x += delta * o.xv;\r\n            o.pos.y += delta * o.yv;\r\n            o.timeRemain = newTimeRemain;\r\n        }\r\n\r\n        o.pos.x += o.pointOn[0] - o.path[0][0];\r\n        o.pos.y += o.pointOn[1] - o.path[0][1];\r\n    },\r\n    // /*rotate*/\r\n    (o, init) => {\r\n        o.pivotX = init.pivotX;\r\n        o.pivotY = init.pivotY;\r\n        o.rotation = 0;\r\n        if(init.initialRotation !== 0 && init.initialRotation !== undefined){\r\n            o.rotateSpeed = init.initialRotation;\r\n            simulateMap[1](o);\r\n        }\r\n        o.rotateSpeed = init.rotateSpeed;\r\n    },\r\n    // /*grow*/\r\n    (o, init) => {\r\n        o.growSpeed = init.growSpeed;\r\n        o.shrinkSpeed = init.shrinkSpeed;\r\n        o.maxGrowth = init.maxGrowth;\r\n        o.minGrowth = init.minGrowth;\r\n        o.growing = init.toStartGrowing;\r\n        o.growth = o.lastGrowth = init.startGrowth;\r\n    },\r\n    // /*custom*/\r\n    () => {},\r\n    // /*id*/\r\n    (o, init) => {\r\n        let id = init.id.toString().trim();\r\n        if(window.idToObs[id] !== undefined && components_environment === 'editor') alert(`Warning! Duplicate id \"${id}\" found! Duplicate ids override each other.`);\r\n        window.idToObs[id] = o;\r\n    },\r\n    // /*rotateHoming*/\r\n    (o, init) => {\r\n        o.toRest = init.toRest;\r\n        o.restAngles = init.restAngles;\r\n        o.homingRotateSpeed = init.homingRotateSpeed;\r\n        o.rotation = 0;\r\n        o.detectionRadiusSquared = init.detectionRadius ** 2;\r\n        o.spokeAngles = init.spokeAngles;// array of angles of spokes\r\n        o.pivotX = init.pivotX;\r\n        o.pivotY = init.pivotY;\r\n    }\r\n]\r\n\r\nconst simulateMap = [\r\n    /*pathMove*/\r\n    (o) => {\r\n        o.pos.x += o.xv;\r\n        o.pos.y += o.yv;\r\n\r\n        o.timeRemain--;\r\n        if (o.timeRemain <= 0) {\r\n            o.currentPoint++;\r\n            if (o.currentPoint === o.path.length) o.currentPoint = 0;\r\n            \r\n            o.pointOn = o.path[o.currentPoint];\r\n            o.speed = o.pointOn[2];\r\n    \r\n            // snapping back to the point that we should be on\r\n            o.pos.x += o.xv * o.timeRemain;\r\n            o.pos.y += o.yv * o.timeRemain;\r\n    \r\n            let nextPointIndex = o.currentPoint + 1;\r\n            if (nextPointIndex === o.path.length) nextPointIndex = 0;\r\n            \r\n            o.pointTo = o.path[nextPointIndex];\r\n    \r\n            angle = Math.atan2(o.pointTo[1] - o.pointOn[1], o.pointTo[0] - o.pointOn[0]);\r\n            o.xv = Math.cos(angle) * o.speed;\r\n            o.yv = Math.sin(angle) * o.speed;\r\n            \r\n            let dist = Math.sqrt((o.pointOn[0]-o.xv*o.timeRemain - o.pointTo[0])**2 + (o.pointOn[1]-o.yv*o.timeRemain - o.pointTo[1])**2);\r\n            \r\n            if((o.xv ** 2 + o.yv ** 2) * (o.timeRemain ** 2) > dist){\r\n                // we've overshot the next point, just stay on the inital point (no sync)\r\n                dist = Math.sqrt((o.pointOn[0] - o.pointTo[0])**2 + (o.pointOn[1] - o.pointTo[1])**2);\r\n            } else {\r\n                // correct to next pt (sync)\r\n                o.pos.x -= o.xv * o.timeRemain;\r\n                o.pos.y -= o.yv * o.timeRemain;\r\n            }\r\n\r\n            // time = distance / speed\r\n            o.timeRemain = dist / o.speed;\r\n        }\r\n\r\n        o.topLeft = window.generateTopLeftCoordinates(o);\r\n    },\r\n    /*rotate*/\r\n    (o) => {\r\n        if(o.sat.r !== undefined){\r\n            o.pos.x -= o.pivotX;\r\n            o.pos.y -= o.pivotY;\r\n            o.sat.rotate(o.rotateSpeed);\r\n            o.pos.x += o.pivotX;\r\n            o.pos.y += o.pivotY;\r\n        } else {\r\n            o.sat.translate(o.pos.x-o.pivotX, o.pos.y-o.pivotY);\r\n            o.sat.rotate(o.rotateSpeed);\r\n            o.sat.translate(o.pivotX-o.pos.x, o.pivotY-o.pos.y);\r\n        }\r\n        \r\n        o.rotation += o.rotateSpeed;\r\n        o.dimensions = generateDimensions(o);\r\n        o.topLeft = window.generateTopLeftCoordinates(o);\r\n    },\r\n    /*grow*/\r\n    (o) => {\r\n        if(o.growing === true) {\r\n            o.growth += o.growSpeed;\r\n            if(o.growth >= o.maxGrowth){\r\n                o.growing = false;\r\n                o.growth = o.maxGrowth;\r\n            }\r\n        }\r\n        else {\r\n            o.growth -= o.shrinkSpeed;\r\n            if(o.growth <= o.minGrowth){\r\n                o.growing = true;\r\n                o.growth = o.minGrowth;\r\n            }\r\n        }\r\n\r\n        const growthRatio = o.growth / o.lastGrowth;\r\n\r\n        if(o.sat.r !== undefined){\r\n            // circle\r\n            o.sat.r *= growthRatio;\r\n        } else {\r\n            // poly\r\n            let middleX = o.topLeft.x + o.dimensions.x/2;\r\n            let middleY = o.topLeft.y + o.dimensions.y/2; \r\n\r\n            for(let i = 0; i < o.sat.points.length; i++){\r\n                o.sat.points[i].x = (o.sat.points[i].x + o.pos.x - middleX) * growthRatio - o.pos.x + middleX;\r\n                o.sat.points[i].y = (o.sat.points[i].y + o.pos.y - middleY) * growthRatio - o.pos.y + middleY;\r\n            }\r\n            o.sat.setPoints(o.sat.points);\r\n\r\n            if(o.isText === true){\r\n                o.fontSize *= growthRatio;\r\n            }\r\n        }\r\n\r\n        o.topLeft = window.generateTopLeftCoordinates(o);\r\n        o.dimensions = generateDimensions(o);\r\n        o.lastGrowth = o.growth;\r\n    },\r\n    /*custom*/\r\n    () => {},\r\n    /*id*/\r\n    () => {},\r\n    /*rotateHoming*/\r\n    (o, p) => {\r\n        let middleX = o.topLeft.x + o.dimensions.x/2;\r\n        let middleY = o.topLeft.y + o.dimensions.y/2; \r\n\r\n        if(p.dead === true || (p.pos.x - middleX)**2 + (p.pos.y - middleY) ** 2 > o.detectionRadiusSquared) {\r\n            if(o.toRest === false) return;\r\n\r\n            let minSpokeAngularDist = Infinity;\r\n\r\n            for(let i = 0; i < o.restAngles.length; i++){\r\n                let angleDist = shortAngleDist(o.rotation, o.restAngles[i]);\r\n                if(Math.abs(angleDist) < Math.abs(minSpokeAngularDist)){\r\n                    minSpokeAngularDist = angleDist;\r\n                }\r\n            }\r\n\r\n            if(minSpokeAngularDist === Infinity) return;\r\n\r\n            if(Math.abs(minSpokeAngularDist) < o.homingRotateSpeed) o.rotateSpeed = minSpokeAngularDist;\r\n            else o.rotateSpeed = Math.sign(minSpokeAngularDist) * o.homingRotateSpeed;\r\n            simulateMap[1](o);\r\n            return;\r\n        }\r\n\r\n        angle = Math.atan2(p.pos.y - middleY, p.pos.x - middleX);\r\n\r\n        let minSpokeAngularDist = Infinity;\r\n\r\n        for(let i = 0; i < o.spokeAngles.length; i++){\r\n            let angleDist = shortAngleDist(o.spokeAngles[i] + o.rotation, angle);\r\n            if(Math.abs(angleDist) < Math.abs(minSpokeAngularDist)){\r\n                minSpokeAngularDist = angleDist;\r\n            }\r\n        }\r\n\r\n        if(minSpokeAngularDist === Infinity) return;\r\n\r\n        if(Math.abs(minSpokeAngularDist) < o.homingRotateSpeed) o.rotateSpeed = minSpokeAngularDist;\r\n        else o.rotateSpeed = Math.sign(minSpokeAngularDist) * o.homingRotateSpeed;\r\n\r\n        simulateMap[1](o);\r\n    }\r\n]\r\n\r\n// ---\r\n\r\n// ---\r\n\r\nfunction shortAngleDist(a0,a1) {\r\n    let da = (a1 - a0) % TAU;\r\n    return 2*da % TAU - da;\r\n}\r\n\r\nwindow.simulateMapI2N = [\r\n    'pathMove',\r\n    'rotate',\r\n    'grow',\r\n    'custom',\r\n    'id',\r\n    'rotateHoming',\r\n]\r\n\r\nwindow.simulateDefaultMap = [\r\n    // pathMove\r\n    {\r\n        currentPoint: 0,\r\n        path: [[0,0,1],[100,0,2],[0,100,3]],\r\n    },\r\n    // rotate\r\n    {\r\n        initialRotation: 0,\r\n        rotateSpeed: 0.01,\r\n        pivotX: 450,\r\n        pivotY: 800\r\n    },\r\n    // grow\r\n    {\r\n        growSpeed: 0.006,\r\n        shrinkSpeed: 0.006,\r\n        maxGrowth: 1.25,\r\n        minGrowth: 1,\r\n        startGrowth: 1,\r\n        toStartGrowing: true,\r\n    },\r\n    // custom\r\n    {},\r\n    // id\r\n    {\r\n        id: 'uniqueId'\r\n    },\r\n    // rotateHoming\r\n    {\r\n        toRest: true,\r\n        restAngles: [0, Math.PI],\r\n        homingRotateSpeed: 0.01,\r\n        detectionRadius: 200,\r\n        spokeAngles: [0, Math.PI],\r\n        pivotX: 450,\r\n        pivotY: 800\r\n    }\r\n]\r\n\r\nwindow.simulateConstraintsMap = [\r\n    {currentPoint: [0]},\r\n    undefined,\r\n    {growSpeed: [0], shrinkSpeed: [0], minGrowth: [0.001], maxGrowth: [0.001]},\r\n    undefined,\r\n    undefined,\r\n];\r\n\r\nconst initEffectMap = [\r\n    /*bound*/\r\n    () => {},\r\n    /*kill*/\r\n    (o, params) => {\r\n        o.boundPlayer = params.boundPlayer ?? false;\r\n    },\r\n    /*bounce*/\r\n    (o, params) => {\r\n        // bounciness, decay\r\n        o.bounciness = params.bounciness;\r\n        o.decay = params.decay;\r\n    },\r\n    /*custom*/\r\n    () => {},\r\n    /*customImage*/\r\n    (o, params) => {\r\n        o.img = typeof Image === 'undefined' ? {} : new Image();\r\n        o.img.src = params.url;\r\n        o.imgLoaded = false;\r\n        o.img.onload = () => {o.imgLoaded = true;}\r\n    },\r\n    /*stopForces*/\r\n    () => {},\r\n    /*winpad*/\r\n    (o, params) => {\r\n        o.isWinpad = true;\r\n    },\r\n    /*coin*/\r\n    (o, params) => {\r\n        o.collected = false;\r\n        o.coinAmount = params.coinAmount;\r\n        o.color = params.color;\r\n    },\r\n    /*coindoor*/\r\n    (o, params) => {\r\n        o.isCoindoor = true;\r\n        o.maxCoins = o.coins = params.coindoorCoinAmount;\r\n        o.coinDoorColor = params.coinDoorColor;\r\n    },\r\n    /*checkpoint*/\r\n    (o, params) => {\r\n        o.checkpointCollected = false;\r\n        o.checkpointOffsetX = params.checkpointOffsetX;\r\n        o.checkpointOffsetY = params.checkpointOffsetY;\r\n    },\r\n    /*breakable*/\r\n    (o, params) => {\r\n        o.maxStrength = params.maxStrength;//60\r\n        o.strength = o.maxStrength;\r\n        o.regenTime = params.regenTime;\r\n        o.lastBrokeTime = -1E99;\r\n        o.healSpeed = params.healSpeed;\r\n    },\r\n    /*safe*/\r\n    () => {},\r\n    /*tp*/\r\n    (o, params) => {\r\n        o.tpx = params.tpx;\r\n        o.tpy = params.tpy;\r\n    },\r\n    /*conveyor*/\r\n    (o, params) => {\r\n        o.conveyorForce = params.conveyorForce;\r\n        o.conveyorAngle = params.conveyorAngle * Math.PI / 180;\r\n        o.conveyorAngleRotateSpeed = params.conveyorAngleRotateSpeed * Math.PI/180;\r\n        o.conveyorFriction = params.conveyorFriction;\r\n    },\r\n    /*platformer*/\r\n    (o, params) => {\r\n        o.platformerForce = params.platformerForce;\r\n        o.platformerAngle = params.platformerAngle * Math.PI/180;\r\n        o.platformerAngleRotateSpeed = params.platformerAngleRotateSpeed * Math.PI/180;\r\n        o.platformerFriction = params.platformerFriction;\r\n\r\n        // o.maxJumps = params.maxJumps// TODO: IMPLEMENT JUMPS. also TODO: add a preserve jump parameter that makes jumps conserve even if you are not bounded that frame. If disabled, platformer only lets you jump when you're on a plat THAT FRAME\r\n        o.maxJumpCooldown = params.maxJumpCooldown;// in ticks\r\n        o.jumpCooldown = 0;\r\n        o.jumpForce = params.jumpForce;\r\n        o.jumpFriction = params.jumpDecay;\r\n\r\n        o.canJumpMidair = params.canJumpMidair;\r\n        o.midairStoredJump = false;\r\n        o.justJumped = false;\r\n\r\n        o.jumpForceObj = {playerForceId: undefined};\r\n\r\n        o.touchingPlatformer = false;\r\n    },\r\n    /*restrictAxis*/\r\n    (o, params) => {\r\n        o.axisSpeedMultX = params.axisSpeedMultX;\r\n        o.axisSpeedMultY = params.axisSpeedMultY;\r\n    },\r\n    /*snapGrid*/\r\n    (o, params) => {\r\n        o.toSnapX = params.toSnapX;\r\n        o.toSnapY = params.toSnapY;\r\n        o.snapDistanceX = params.snapDistanceX;\r\n        o.snapDistanceY = params.snapDistanceY;\r\n        o.snapCooldown = o.maxSnapCooldown = params.snapCooldown;\r\n        o.snapAngle = params.snapAngle * Math.PI / 180;\r\n        o.snapAngleRotateSpeed = params.snapAngleRotateSpeed * Math.PI/180;\r\n\r\n        o.interpolatePlayerData = {time: 0, nextX: -1, nextY: -1};\r\n        // o.snapDistanceX = Math.max(35, o.snapDistanceX);\r\n        // o.snapDistanceY = Math.max(35, o.snapDistanceY);\r\n        \r\n        o.snapMagnitude = Math.sqrt(o.snapDistanceX ** 2 + o.snapDistanceY ** 2); //(o.snapDistanceX + o.snapDistanceY)/2\r\n    },\r\n    /*timeTrap*/\r\n    (o, params) => {\r\n        o.timeTrapTime = o.timeTrapMaxTime = params.timeTrapMaxTime;\r\n        o.timeTrapRecoverySpeed = params.timeTrapRecoverySpeed;\r\n        o.timeTrapToKill = params.timeTrapToKill;\r\n        o.timeTrapToShowTenth = params.timeTrapToShowTenth;\r\n        o.timeTrapIntersecting = false;\r\n    },\r\n    /*changeSize*/\r\n    (o, params) => {\r\n        o.sizeMult = params.sizeMult;\r\n        o.sizeChangePermanent = params.sizeChangePermanent;\r\n        o.lastChangeSizeColliding = o.changeSizeColliding = false;\r\n    },\r\n    /*changeSpeed*/\r\n    (o, params) => {\r\n        o.speedMult = params.speedMult;\r\n        o.speedChangePermanent = params.speedChangePermanent;\r\n    },\r\n    /*solidColor*/\r\n    (o, params) => {\r\n        o.hex = params.hex;\r\n        o.alpha = params.alpha;\r\n    },\r\n    /*decoration*/\r\n    (o, params) => {\r\n        o.decoFilePath = params.decoFilePath;\r\n    },\r\n    /*changeMap*/\r\n    (o, params) => {\r\n        o.mapName = params.mapName;\r\n        o.difficulty = window.mapDifficulties[params.mapName] ?? 0;\r\n    },\r\n    /*tornado*/\r\n    (o, params) => {\r\n        o.tornadoStrength = params.tornadoStrength;\r\n    },\r\n    /*changeVignette*/\r\n    (o, params) => {\r\n        o.innerR = params.innerR;\r\n        o.innerG = params.innerG;\r\n        o.innerB = params.innerB;\r\n        o.innerSize = params.innerSize;\r\n        o.innerOpacity = params.innerOpacity;\r\n\r\n        o.outerR = params.outerR;\r\n        o.outerG = params.outerG;\r\n        o.outerB = params.outerB;\r\n        o.outerSize = params.outerSize;\r\n        o.outerOpacity = params.outerOpacity;\r\n    },\r\n    /*pushable*/\r\n    (o, params) => {\r\n        o.lastPushAngle = o.pushAngle = params.pushAngle * Math.PI / 180;\r\n        o.maxPushDistance = params.maxPushDistance;\r\n        o.idlePushBackSpeed = params.idlePushBackSpeed;\r\n        o.pushConversionRatio = params.pushConversionRatio;\r\n        o.positiveDirectionOnly = params.positiveDirectionOnly;\r\n        o.pushAngleVecX = Math.cos(o.pushAngle);\r\n        o.pushAngleVecY = Math.sin(o.pushAngle);\r\n        o.pushPercent = 0;\r\n    },\r\n    /*changeMusic*/\r\n    (o, params) => {\r\n        // either a youtube url (https://youtube.com/watch/...) or a local filepath\r\n        // that the client can access via a fetch req, e.g. sounds/... .mp3\r\n        o.musicPath = params.musicPath;\r\n        o.musicStartTime = params.musicStartTime;\r\n    },\r\n    /*changeShip*/\r\n    (o, params) => {\r\n        o.changeShipStateTo = params.changeShipStateTo;\r\n        o.initialShipAngle = params.initialShipAngle;\r\n        o.shipTurnSpeed = params.shipTurnSpeed;\r\n    },\r\n    /*changeGrapple*/\r\n    (o, params) => {\r\n        o.changeGrappleStateTo = params.changeGrappleStateTo;\r\n        o.grappleRange = params.grappleRange;\r\n        o.grappleForce = params.grappleForce;\r\n        o.grappleFric = params.grappleFric;\r\n    },\r\n    /*changeDeathTimer*/\r\n    (o, params) => {\r\n        o.changeDeathTimerStateTo = params.changeDeathTimerStateTo;\r\n        o.drainAmountWhileStandingOn = params.drainAmountWhileStandingOn;\r\n        o.deathTime = params.deathTime;\r\n\r\n        // for vignette\r\n        for(let key in window.effectDefaultMap[24]){\r\n            o[key] = window.effectDefaultMap[24][key];\r\n        }\r\n\r\n        o.innerR = o.outerR = 255;\r\n    }\r\n]\r\n\r\nlet freeVariable = -1;\r\nconst effectMap = [\r\n    /*bound*/\r\n    (p, res, o, id) => {\r\n        p.pos.x += res.overlapV.x;\r\n        p.pos.y += res.overlapV.y;\r\n        p.touchingNormalIndexes.push(id);\r\n    },\r\n    /*kill*/\r\n    (p, res, o) => {\r\n        if(res.overlap > 1) {\r\n            p.dead = true;\r\n            if(o.boundPlayer === true){\r\n                p.pos.x += res.overlapV.x;\r\n                p.pos.y += res.overlapV.y;\r\n            }\r\n        }\r\n    },\r\n    /*bounce*/\r\n    (p, res, o) => {\r\n        p.pos.x += res.overlapV.x;\r\n        p.pos.y += res.overlapV.y;\r\n\r\n        angle = Math.atan2(res.overlapV.y, res.overlapV.x);\r\n\r\n        p.forces.push(\r\n            Math.cos(angle) * o.bounciness,\r\n            Math.sin(angle) * o.bounciness,\r\n            o.decay\r\n        )\r\n    },\r\n    /*custom*/\r\n    () => {},\r\n    /*customImage*/\r\n    () => {},\r\n    /*stopForces*/\r\n    (p) => {\r\n        p.stopForces = true;\r\n    },\r\n    /*winpad*/\r\n    (p, res, o) => {\r\n        if(components_environment === 'editor' || window.standalone === true){\r\n            // respawn\r\n            window.respawnPlayer();\r\n            if(window.inClearCheckMode === true){\r\n                window.exitClearCheckMode();\r\n                uploadCode();\r\n            }\r\n        } else if(window.won !== true){\r\n            window.won = true;\r\n            if(window.isExClient === true){\r\n                window.changeMap('/maps/winroom');\r\n            } else {\r\n                // scroll\r\n                toScroll = true;\r\n\r\n                if(window.tutorial === true){\r\n                    window.beatCurrentTutorialMap();\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*coin*/\r\n    (p, res, o) => {\r\n        if(o.collected === true){\r\n            return;\r\n        }\r\n        o.collected = true;\r\n        for(let i = 0; i < components_obstacles.length; i++){\r\n            if(components_obstacles[i].isCoindoor === true && components_obstacles[i].coinDoorColor === o.color){\r\n                components_obstacles[i].coins -= o.coinAmount;\r\n            }\r\n        }\r\n    },\r\n    /*coindoor*/\r\n    (p, res, o) => {\r\n        if(o.coins > 0){\r\n            p.pos.x += res.overlapV.x;\r\n            p.pos.y += res.overlapV.y;\r\n        }\r\n    },\r\n    /*checkpoint*/\r\n    (p, res, o) => {\r\n        if(o.checkpointCollected === true) return;\r\n        o.checkpointCollected = true;\r\n        \r\n        window.spawnPosition.x = o.topLeft.x + o.dimensions.x / 2;\r\n        window.spawnPosition.y = o.topLeft.y + o.dimensions.y / 2;\r\n    },\r\n    /*breakable*/\r\n    (p, res, o, id) => {\r\n        if(o.strength > 0){\r\n            p.pos.x += res.overlapV.x;\r\n            p.pos.y += res.overlapV.y;\r\n            o.strength--;\r\n            if(o.strength < 0) o.strength = 0;\r\n            p.touchingNormalIndexes.push(id);\r\n        }\r\n\r\n        // breakable obs shouldn't regenerate on top of you\r\n        o.lastBrokeTime = window.frames;\r\n    },\r\n    /*safe*/\r\n    (p, res, o) => {\r\n        p.onSafe = true;\r\n    },\r\n    /*tp*/\r\n    (p, res, o) => {\r\n        // whoosh sound effect?\r\n        p.pos.x = o.tpx;\r\n        p.pos.y = o.tpy;\r\n        p.renderRadius = Math.min(p.renderRadius, p.sat.r / 2);\r\n    },\r\n    /*conveyor*/\r\n    (p, res, o) => {\r\n        p.forces.push(Math.cos(o.conveyorAngle) * o.conveyorForce, Math.sin(o.conveyorAngle) * o.conveyorForce, o.conveyorFriction);\r\n    },\r\n    /*platformer*/\r\n    (p, res, o, id) => {\r\n        o.touchingPlatformer = true;\r\n        o.jumpCooldown--;\r\n\r\n        // add conveyor force\r\n        p.forces.push(Math.cos(o.platformerAngle) * o.platformerForce, Math.sin(o.platformerAngle) * o.platformerForce, o.platformerFriction);\r\n\r\n        // idea: find the amount of x/y the player moves in the platformer and move the opposite to effectively lock the player's motion perpendicular to the platformer's direction\r\n        const playerVelAngle = Math.atan2(p.yv, p.xv);\r\n\r\n        const angleBetween = o.platformerAngle - playerVelAngle;\r\n\r\n        const distMovedOnPlatAngle = Math.cos(angleBetween) * Math.sqrt(p.yv ** 2 + p.xv ** 2) / p.friction;\r\n\r\n        p.pos.x -= Math.cos(o.platformerAngle) * distMovedOnPlatAngle;\r\n        p.pos.y -= Math.sin(o.platformerAngle) * distMovedOnPlatAngle;\r\n\r\n        const touchingNormalThisFrame = p.touchingNormalIndexes.length !== 0 || (p.lastTouchingNormalIndexes[p.lastTouchingNormalIndexes.length-1] >= id && o.justJumped === false) || p.touchingWall === true;\r\n        o.justJumped = false;\r\n\r\n        // checking if we were either intersecting with a normal last frame that's indexed after the obs or we are intersecting with a normal rn\r\n        if(o.jumpCooldown <= 0 && (touchingNormalThisFrame === true || (o.canJumpMidair === true && o.midairStoredJump === true))){\r\n            o.midairStoredJump = o.midairStoredJump || touchingNormalThisFrame;\r\n            o.canJump = true;\r\n            if(Math.abs(shortAngleDist(o.platformerAngle + Math.PI, playerVelAngle)) < Math.PI / 2 && Math.sqrt(p.xv**2+p.yv**2)>.01){\r\n                p.forces.push(-Math.cos(o.platformerAngle) * o.jumpForce, -Math.sin(o.platformerAngle) * o.jumpForce, o.jumpFriction);\r\n                o.jumpCooldown = o.maxJumpCooldown;\r\n                o.midairStoredJump = false;\r\n                o.justJumped = true;\r\n            }\r\n        } else {\r\n            o.canJump = false;\r\n        }\r\n    },\r\n    /*restrictAxis*/\r\n    (p, res, o) => {\r\n        p.axisSpeedMultX *= o.axisSpeedMultX;\r\n        p.axisSpeedMultY *= o.axisSpeedMultY;\r\n    },\r\n    /*snapGrid*/\r\n    (p, res, o) => {\r\n        // for those who haven't seen it, this is kind of my magnum opus of simulation functions.\r\n        // Developed a few years back later presented at a conference. Ask me (serum) about it!\r\n        // the basic idea of how it works is we have to snap to a rotated snap grid in space, so we\r\n        // translate the player to the snapGrid until its like the snap grid is unrotated. Then we snap\r\n        // by moduloing the x to the grid and then rotate back to get the final position.\r\n        o.snapCooldown--;\r\n\r\n        if(o.snapCooldown <= 0 && ((o.toSnapX === true && Math.abs(p.xv) > 0.01) || (o.toSnapY === true && Math.abs(p.yv) > 0.01))){\r\n            o.snapCooldown = o.maxSnapCooldown;\r\n            let playerSnapAngle = Math.atan2(o.toSnapY === true ? p.yv : 0, o.toSnapX === true ? p.xv : 0);\r\n            o.interpolatePlayerData = {\r\n                time: Math.min(o.maxSnapCooldown-1, 5),\r\n                nextX: p.pos.x + Math.cos(playerSnapAngle) * o.snapMagnitude * 0.95,\r\n                nextY: p.pos.y + Math.sin(playerSnapAngle) * o.snapMagnitude * 0.95\r\n            };\r\n        }\r\n\r\n        if(o.interpolatePlayerData.time > 1){\r\n            o.interpolatePlayerData.time--;\r\n            p.pos.x = p.pos.x * 0.8 + 0.2 * o.interpolatePlayerData.nextX;\r\n            p.pos.y = p.pos.y * 0.8 + 0.2 * o.interpolatePlayerData.nextY;\r\n        } else {\r\n            let middleX = o.topLeft.x + o.dimensions.x / 2;\r\n            let middleY = o.topLeft.y + o.dimensions.y / 2;\r\n            // in order to snap correctly, rotate both the p and the o the negative snapAngle relative to the o's center\r\n            // this means that the player will be relatively correct to the obs and the obs will be axis-aligned\r\n            let prt = {\r\n                angle: Math.atan2(p.pos.y - middleY, p.pos.x - middleX) - o.snapAngle,\r\n                distance: Math.sqrt((p.pos.y - middleY)**2 + (p.pos.x - middleX)**2)\r\n            }\r\n\r\n            prt.x = Math.cos(prt.angle) * prt.distance;\r\n            prt.y = Math.sin(prt.angle) * prt.distance;\r\n\r\n            // applying the transform just like the norotate snap that i coded earlier\r\n            // in other words, snap the relative p to the relative grid\r\n            if(o.toSnapX === true) prt.x = prt.x * 0.4 + 0.6 * (Math.round(prt.x / o.snapDistanceX) * o.snapDistanceX);\r\n            if(o.toSnapY === true) prt.y = prt.y * 0.4 + 0.6 * (Math.round(prt.y / o.snapDistanceY) * o.snapDistanceY);\r\n\r\n            prt.angle = Math.atan2(prt.y, prt.x) + o.snapAngle;\r\n            prt.distance = Math.sqrt(prt.y**2 + prt.x**2);\r\n\r\n            // rotating back\r\n            // translating the relative coordinates back to absolute ones\r\n            p.pos.x = Math.cos(prt.angle) * prt.distance + middleX;\r\n            p.pos.y = Math.sin(prt.angle) * prt.distance + middleY;\r\n\r\n            // checking if the original point was outside of the snapgrid as a result of rotation. If so, apply translations to make it right\r\n            // if(p.pos.x < o.topLeft.x - p.speed || p.pos.x > o.topLeft.x + o.dimensions.x + p.speed){\r\n            //     p.pos.x += Math.sign(p.xv) * o.snapDistanceX*0.6;\r\n            // }\r\n\r\n            // if(p.pos.y < o.topLeft.y - p.speed || p.pos.y > o.topLeft.y + o.dimensions.y + p.speed){\r\n            //     p.pos.y += Math.sign(p.yv) * o.snapDistanceY*0.6;\r\n            // }\r\n        }\r\n    },\r\n    /*timeTrap*/\r\n    (p, res, o) => {\r\n        o.timeTrapIntersecting = true;\r\n        o.timeTrapTime--;\r\n        if(o.timeTrapTime < 0){\r\n            if(o.timeTrapToKill === true) p.dead = p.timeTrapOverrideSafe = true;\r\n            o.timeTrapTime = 0;\r\n        }\r\n    },\r\n    /*changeSize*/\r\n    (p, res, o) => {\r\n        if(o.sizeMult < 1 && o.lastChangeSizeColliding === false){\r\n            // if the player would not be colliding with the obstacle with the smaller radius,\r\n            // don't scale the player to avoid frame 1 yes frame 2 no jitter effects\r\n\r\n            // basically, we do this by effectively decreasing the obstacle's border radius (so poly would just be smaller poly)\r\n            // if the player has not already collided. If the player is colliding, we already decreased the radius so there's no need to decrease the border\r\n            res.clear();\r\n            p.sat.r *= o.sizeMult;\r\n            if(o.sat.r !== undefined){\r\n                collided = SAT.testCircleCircle(o.sat, p.sat, res);\r\n            } else {\r\n                collided = SAT.testPolygonCircle(o.sat, p.sat, res);\r\n            }\r\n            p.sat.r /= o.sizeMult;\r\n            if(collided === false){\r\n                return;\r\n            }\r\n        }\r\n        if(o.sizeChangePermanent === true){\r\n            if(o.permanentSizeChangeDone === undefined){\r\n                o.permanentSizeChangeDone = true;\r\n                p.sat.r *= o.sizeMult;\r\n            }\r\n        }\r\n        o.changeSizeColliding = true;\r\n    },\r\n    /*changeSpeed*/\r\n    (p, res, o) => {\r\n        if(o.speedChangePermanent === true){\r\n            if(o.permanentSpeedChangeDone === undefined){\r\n                o.permanentSpeedChangeDone = true;\r\n                p.speed *= o.speedMult;\r\n            }\r\n        } else {\r\n            p.axisSpeedMultX *= o.speedMult;\r\n            p.axisSpeedMultY *= o.speedMult;\r\n        }\r\n    },\r\n    /*solidColor*/\r\n    (p, res, o) => {},\r\n    /*decoration*/\r\n    (p, res, o) => {},\r\n    /*changeMap*/\r\n    (p, res, o) => {\r\n        if(window.won === true) return;\r\n        window.won = true;\r\n        if(window.isExClient === true){\r\n            window.changeMap('/maps/' + o.mapName);\r\n        } else {\r\n            // TODO: send user to the specified omni\r\n        }\r\n    },\r\n    /*tornado*/\r\n    (p, res, o) => {\r\n        p.pos.x += Math.cos(Math.random() * 360) * o.tornadoStrength;\r\n        p.pos.y += Math.sin(Math.random() * 360) * o.tornadoStrength;\r\n    },\r\n    /*changeVignette*/\r\n    (p, res, o) => {\r\n        const v = window.colors.vignette;\r\n        v.inner.r = o.innerR;\r\n        v.inner.g = o.innerG;\r\n        v.inner.b = o.innerB;\r\n        v.inner.size = o.innerSize;\r\n        v.inner.opacity = o.innerOpacity;\r\n\r\n        v.outer.r = o.outerR;\r\n        v.outer.g = o.outerG;\r\n        v.outer.b = o.outerB;\r\n        v.outer.size = o.outerSize;\r\n        v.outer.opacity = o.outerOpacity;\r\n    },\r\n    /*pushable*/\r\n    (p, res, o) => {\r\n        if(o.pushAngle !== o.lastPushAngle){\r\n            o.lastPushAngle = o.pushAngle;\r\n            o.pushAngleVecX = Math.cos(o.pushAngle);\r\n            o.pushAngleVecY = Math.sin(o.pushAngle);\r\n        }\r\n\r\n        // dot product of the two vectors = amount they are pointing together\r\n        // freeVariable = pushDelta\r\n        freeVariable = -(o.pushAngleVecX * res.overlapV.x + o.pushAngleVecY * res.overlapV.y) * o.pushConversionRatio;\r\n\r\n        if(o.positiveDirectionOnly === false || freeVariable > 0){\r\n            o.pushPercent += freeVariable / o.maxPushDistance;\r\n\r\n            if(o.pushPercent > 1){\r\n                freeVariable -= (o.pushPercent-1) * o.maxPushDistance;\r\n                o.pushPercent = 1;\r\n            } else if(o.pushPercent < 0){\r\n                freeVariable -= o.pushPercent * o.maxPushDistance;\r\n                o.pushPercent = 0;\r\n            }\r\n\r\n            o.pos.x += o.pushAngleVecX * freeVariable;\r\n            o.pos.y += o.pushAngleVecY * freeVariable;\r\n        }\r\n\r\n        // test collision again to bound the player\r\n        res.clear();\r\n        if(o.sat.r !== undefined){\r\n            collided = SAT.testCircleCircle(o.sat, p.sat, res);\r\n        } else {\r\n            collided = SAT.testPolygonCircle(o.sat, p.sat, res);\r\n        }\r\n\r\n        if(collided === true){\r\n            p.pos.x += res.overlapV.x;\r\n            p.pos.y += res.overlapV.y;\r\n        }\r\n    },\r\n    /*changeMusic*/\r\n    (p, res, o) => {\r\n        window.playMusic(o.musicPath, o.musicStartTime);\r\n    },\r\n    /*changeShip*/\r\n    (p, res, o) => {\r\n        if(p.ship === o.changeShipStateTo) return;\r\n            \r\n        if(window.isExClient === true && o.changeShipStateTo === false) {\r\n            // send disable ship\r\n            window.u4[0] = 10;\r\n            send(window.u4);\r\n        }\r\n        if(p.ship === false && o.changeShipStateTo === true) {p.shipAngle = o.initialShipAngle; p.shipTurnSpeed = o.shipTurnSpeed; }\r\n        \r\n        p.ship = o.changeShipStateTo;\r\n    },\r\n    /*changeGrapple*/\r\n    (p, res, o) => {\r\n        if(p.grapple === true && o.changeGrappleStateTo === false){\r\n            if(window.isExClient === true){\r\n                // send disable grapple\r\n                window.u4[0] = 12;\r\n                send(window.u4);\r\n            }\r\n            p.grappleX = p.grappleY = -1;\r\n        }\r\n\r\n        p.grapple = o.changeGrappleStateTo;\r\n        p.grappleRange = o.grappleRange;\r\n        p.grappleForce = o.grappleForce;\r\n        p.grappleFric = o.grappleFric;\r\n    },\r\n    /*changeDeathTimer*/\r\n    (p, res, o) => {\r\n        if(window.isExClient === true && p.deathTimer === true && o.changeDeathTimerStateTo === false){\r\n            // send disable death timer\r\n            window.u4[0] = 14;\r\n            send(window.u4);\r\n        }\r\n\r\n        if(o.changeDeathTimerStateTo === true){\r\n            if(p.deathTimer === false) p.deathTime = o.deathTime;\r\n            else p.deathTime = Math.min(p.deathTime, o.deathTime);\r\n            p.deathTime -= o.drainAmountWhileStandingOn;\r\n\r\n            // changeVignette\r\n            effectMap[24](p, res, o);\r\n        }\r\n        p.deathTimer = o.changeDeathTimerStateTo;\r\n    }\r\n]\r\n\r\nconst idleEffectMap = [\r\n    // 'bound',\r\n    undefined,\r\n    // 'kill',\r\n    undefined,\r\n    // 'bounce',\r\n    undefined,\r\n    // 'custom'\r\n    undefined,\r\n    // 'customImage'\r\n    undefined,\r\n    // 'stopForces',\r\n    undefined,\r\n    // 'winpad',\r\n    undefined,\r\n    // 'coin',\r\n    undefined,\r\n    // 'coindoor',\r\n    undefined,\r\n    // 'checkpoint',\r\n    undefined,\r\n    // 'breakable',\r\n    (o) => {\r\n        if (o.strength < o.maxStrength && window.frames-o.lastBrokeTime > o.regenTime) {\r\n            o.strength += o.healSpeed;\r\n            if(o.strength >= o.maxStrength){\r\n                o.lastBrokeTime = window.frames;\r\n                o.strength = o.maxStrength;\r\n            }\r\n        }\r\n    },\r\n    // 'safe',\r\n    undefined,\r\n    // 'tp',\r\n    undefined,\r\n    // 'conveyor',\r\n    (o) => {\r\n        o.conveyorAngle += o.conveyorAngleRotateSpeed;\r\n    },\r\n    // 'platformer',\r\n    (o) => {\r\n        o.platformerAngle += o.platformerAngleRotateSpeed;\r\n    },\r\n    // 'restrictAxis',\r\n    undefined,\r\n    // 'snapGrid',\r\n    (o) => {\r\n        o.snapAngle += o.snapAngleRotateSpeed;\r\n    },\r\n    // 'timeTrap'\r\n    (o) => {\r\n        if(o.timeTrapIntersecting !== true) o.timeTrapTime += o.timeTrapRecoverySpeed;\r\n        if(o.timeTrapTime > o.timeTrapMaxTime) o.timeTrapTime = o.timeTrapMaxTime;\r\n        o.timeTrapIntersecting = false;\r\n    },\r\n    // 'changeSize'\r\n    (o, p) => {\r\n        if(o.sizeChangePermanent === true) return;\r\n\r\n        if(o.lastChangeSizeColliding === true && o.changeSizeColliding === false){\r\n            // exit\r\n            p.sat.r /= o.sizeMult;\r\n        } else if(o.lastChangeSizeColliding === false && o.changeSizeColliding === true){\r\n            // enter\r\n            p.sat.r *= o.sizeMult;\r\n        }\r\n\r\n        o.lastChangeSizeColliding = o.changeSizeColliding;\r\n        o.changeSizeColliding = false;\r\n    },\r\n    // 'changeSpeed'\r\n    undefined,\r\n    // 'solidColor'\r\n    undefined,\r\n    // 'decoration'\r\n    undefined,\r\n    // 'changeMap'\r\n    undefined,\r\n    // 'tornado'\r\n    undefined,\r\n    // 'changeVignette'\r\n    undefined,\r\n    // 'pushable'\r\n    (o, p) => {\r\n        // freeVariable = pushDelta\r\n        freeVariable = -o.idlePushBackSpeed;\r\n        o.pushPercent += freeVariable / o.maxPushDistance;\r\n\r\n        if(o.pushPercent > 1){\r\n            freeVariable -= (o.pushPercent-1) * o.maxPushDistance;\r\n            o.pushPercent = 1;\r\n        } else if(o.pushPercent < 0){\r\n            freeVariable -= o.pushPercent * o.maxPushDistance;\r\n            o.pushPercent = 0;\r\n        }\r\n\r\n        o.pos.x += freeVariable * Math.cos(o.pushAngle);\r\n        o.pos.y += freeVariable * Math.sin(o.pushAngle);\r\n    },\r\n    // changeMusic\r\n    undefined,\r\n    // changeShip\r\n    undefined,\r\n    // changeGrapple\r\n    undefined,\r\n    // changeDeathTimer\r\n    undefined,\r\n]\r\n\r\nwindow.effectConstraintsMap = [\r\n    /*bound*/\r\n    undefined,\r\n    /*kill*/\r\n    undefined,\r\n    /*bounce*/\r\n    {decay: [undefined, 1]},\r\n    /*custom*/\r\n    undefined,\r\n    /*customImage*/\r\n    undefined,\r\n    /*stopForces*/\r\n    undefined,\r\n    /*winpad*/\r\n    undefined,\r\n    /*coin*/\r\n    {coinAmount: [1]},\r\n    /*coindoor*/\r\n    {coins: [1], maxCoins: [1]},\r\n    /*checkpoint*/\r\n    undefined,\r\n    /*breakable*/\r\n    {maxStrength: [1], regenTime: [0], healSpeed: [0]},\r\n    /*safe*/\r\n    undefined,\r\n    /*tp*/\r\n    undefined,\r\n    /*conveyor*/\r\n    {conveyorFriction: [undefined, 1]},\r\n    /*platformer*/\r\n    {platformerFriction: [undefined, 1], jumpFriction: [undefined, 1]},\r\n    /*restrictAxis*/\r\n    undefined,\r\n    /*snapGrid*/\r\n    {snapDistanceX: [0.1], snapDistanceY: [0.1], snapCooldown: [0]},\r\n    /*timeTrap*/\r\n    {timeTrapTime: [0], timeTrapMaxTime: [0]},\r\n    /*changeSize*/\r\n    undefined,\r\n    /*changeSpeed*/\r\n    undefined,\r\n    /*solidColor*/\r\n    undefined,\r\n    /*decoration*/\r\n    undefined,\r\n    /*changeMap*/\r\n    undefined,\r\n    /*tornado*/\r\n    undefined,\r\n    /*changeVignette*/\r\n    undefined,\r\n    /*pushable*/\r\n    {maxPushDistance: [0]},\r\n    /*changeMusic*/\r\n    undefined,\r\n    /*changeShip*/\r\n    undefined,\r\n    /*changeGrapple*/\r\n    undefined,\r\n    /*changeDeathTimer*/\r\n    undefined,\r\n]\r\n\r\nwindow.effectMapI2N = [\r\n    'bound',\r\n    'kill',\r\n    'bounce',\r\n    'custom',\r\n    'customImage',\r\n    'stopForces',\r\n    'winpad',\r\n    'coin',\r\n    'coindoor',\r\n    'checkpoint',\r\n    'breakable',\r\n    'safe',\r\n    'tp',\r\n    'conveyor',\r\n    'platformer',\r\n    'restrictAxis',\r\n    'snapGrid',\r\n    'timeTrap',\r\n    'changeSize',\r\n    'changeSpeed',\r\n    'solidColor',\r\n    'decoration',\r\n    'changeMap',\r\n    'tornado',\r\n    'changeVignette',\r\n    'pushable',\r\n    'changeMusic',\r\n    'changeShip',\r\n    'changeGrapple',\r\n    'changeDeathTimer',\r\n]\r\n\r\nwindow.effectDefaultMap = [\r\n    // bound\r\n    {},\r\n    // kill\r\n    {\r\n        boundPlayer: false,\r\n    },\r\n    // bounce\r\n    {\r\n        bounciness: 1,\r\n        decay: 0.98\r\n    },\r\n    // custom\r\n    {},\r\n    // customImage\r\n    {\r\n        url: 'http://tinyurl.com/dwayne-t-rj'\r\n    },\r\n    // stopForces\r\n    {},\r\n    // winpad\r\n    {},\r\n    // coin\r\n    {\r\n        coinAmount: 1,\r\n        color: '#d6d611'\r\n    },\r\n    // coindoor\r\n    {\r\n        coindoorCoinAmount: 3,\r\n        coinDoorColor: '#d6d611'\r\n    },\r\n    // checkpoint\r\n    {\r\n        checkpointOffsetX: 0,\r\n        checkpointOffsetY: 0\r\n    },\r\n    // breakable\r\n    {\r\n        maxStrength: 60,\r\n        regenTime: 100,\r\n        healSpeed: 1\r\n    },\r\n    // safe\r\n    {},\r\n    // tp\r\n    {\r\n        tpx: 100,\r\n        tpy: 100\r\n    },\r\n    // conveyor\r\n    {\r\n        conveyorForce: 0.3,\r\n        conveyorAngle: 90,\r\n        conveyorAngleRotateSpeed: 0,\r\n        conveyorFriction: 0.8\r\n    },\r\n    // platformer\r\n    {\r\n        platformerForce: 1,\r\n        platformerAngle: 90,\r\n        platformerAngleRotateSpeed: 0,\r\n        platformerFriction: 0.875,\r\n        maxJumpCooldown: 30,\r\n        jumpForce: 20,\r\n        jumpDecay: 0.95,\r\n        // maxJumps: 1\r\n    },\r\n    // restrictAxis\r\n    {\r\n        axisSpeedMultX: 0,\r\n        axisSpeedMultY: 1\r\n    },\r\n    // snapGrid\r\n    {\r\n        toSnapX: true,\r\n        toSnapY: true,\r\n        snapDistanceX: 100,\r\n        snapDistanceY: 100,\r\n        snapCooldown: 40,\r\n        snapAngle: 0,\r\n        snapAngleRotateSpeed: 0\r\n    },\r\n    // timeTrap\r\n    {\r\n        timeTrapMaxTime: 300,\r\n        timeTrapRecoverySpeed: 1.5,\r\n        timeTrapToKill: true,\r\n        timeTrapToShowTenth: false\r\n    },\r\n    // changeSize\r\n    {\r\n        sizeMult: 1.5,\r\n        sizeChangePermanent: false\r\n    },\r\n    // changeSpeed\r\n    {\r\n        speedMult: 2.5,\r\n        speedChangePermanent: false\r\n    },\r\n    // solidColor\r\n    {\r\n        hex: '#FFFFFF',\r\n        alpha: 1\r\n    },\r\n    // decoration\r\n    {},\r\n    // changeMap\r\n    {mapName: 'hub'},\r\n    // tornado\r\n    {tornadoStrength: 1},\r\n    // changeVignette\r\n    {\r\n        innerR: 0, innerG: 0, innerB: 0, innerSize: 0.1, innerOpacity: 0,\r\n        outerR: 0, outerG: 0, outerB: 0, outerSize: 0.5, outerOpacity: 1\r\n    },\r\n    // pushable\r\n    {\r\n        pushAngle: 180,\r\n        maxPushDistance: 100,\r\n        idlePushBackSpeed: 0.25,\r\n        positiveDirectionOnly: false,\r\n        pushConversionRatio: 0.8\r\n    },\r\n    // changeMusic\r\n    {musicPath: 'https://www.youtube.com/watch?v=OidXKRVVV70', musicStartTime: 0},\r\n    // changeShip\r\n    {changeShipStateTo: true, initialShipAngle: 0, shipTurnSpeed: Math.PI / 100},\r\n    // changeGrapple\r\n    {changeGrappleStateTo: true, grappleRange: 488, grappleForce: 0.01, grappleFric: 0.4},\r\n    // changeDeathTimer\r\n    {changeDeathTimerStateTo: true, drainAmountWhileStandingOn: 0, deathTime: 10},\r\n]\r\n\r\nconst renderEffectMap = [\r\n    /*bound*/\r\n    (o) => { \r\n        ctx.fillStyle = window.colors.tile;\r\n    },\r\n    /*kill*/\r\n    (o) => {\r\n        ctx.fillStyle = o.boundPlayer === true ? '#c70000' : '#9e0000';\r\n        ctx.strokeStyle = 'black';\r\n        ctx.toStroke = true;\r\n        ctx.lineWidth = 4;\r\n    },\r\n    /*bounce*/\r\n    (o) => {\r\n        ctx.fillStyle = 'blue';\r\n    },\r\n    /*custom*/\r\n    (o) => {\r\n        ctx.toFill = false;\r\n\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.save();\r\n            ctx.clip();\r\n\r\n            ctx.drawImage(window.starImg, o.topLeft.x, o.topLeft.y, o.dimensions.x, o.dimensions.y);\r\n\r\n            ctx.restore();\r\n        }\r\n    },\r\n    /*customImage*/\r\n    (o) => {\r\n        ctx.toFill = false;\r\n        if(o.imgLoaded === false) return;\r\n\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.save();\r\n            ctx.clip();\r\n\r\n            ctx.drawImage(o.img, o.topLeft.x, o.topLeft.y, o.dimensions.x, o.dimensions.y);\r\n\r\n            ctx.restore();\r\n        }\r\n    },\r\n    /*stopForces*/\r\n    (o) => {\r\n        ctx.fillStyle = 'orange';\r\n        ctx.strokeStyle = 'black';\r\n        ctx.lineWidth = 6;\r\n        ctx.globalAlpha = 0.1;\r\n        ctx.toStroke = true;\r\n    },\r\n    /*winpad*/\r\n    (o) => {\r\n        ctx.fillStyle = `hsl(${window.frames*1000/60/12},50%,50%)`;\r\n        ctx.shadowColor = ctx.fillStyle;\r\n        ctx.shadowBlur = 15;\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.shadowBlur = 0;\r\n        }\r\n    },\r\n    /*coin*/\r\n    (o) => {\r\n        ctx.fillStyle = o.color;\r\n        if(o.collected === true){\r\n            ctx.globalAlpha = 0.2;\r\n        } else {\r\n            ctx.globalAlpha = 0.8;\r\n        }\r\n        if(o.coinAmount !== 1){\r\n            ctx.cleanUpFunction = () => {\r\n                let middleX = o.topLeft.x + o.dimensions.x/2;\r\n                let middleY = o.topLeft.y + o.dimensions.y/2; \r\n\r\n                ctx.fillStyle = window.colors.tile;//'#313131';\r\n                ctx.font = `${Math.min(60, o.dimensions.x/4, o.dimensions.y/4)}px Inter`;\r\n                ctx.textAlign = 'center';\r\n                ctx.textBaseline = 'middle';\r\n                ctx.fillText(\r\n                    Math.max(0, o.coinAmount),\r\n                    middleX,\r\n                    middleY\r\n                );\r\n            }\r\n        }\r\n    },\r\n    /*coindoor*/\r\n    (o) => {\r\n        ctx.fillStyle = window.colors.tile;\r\n        ctx.globalAlpha = o.coins <= 0 ? 0.5 : 1;\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.fillStyle = o.coinDoorColor;\r\n\r\n            let middleX = o.topLeft.x + o.dimensions.x/2;\r\n            let middleY = o.topLeft.y + o.dimensions.y/2; \r\n\r\n            ctx.beginPath();\r\n            ctx.roundRect(middleX-o.dimensions.x/4, middleY-o.dimensions.y/4, o.dimensions.x/2, o.dimensions.y/2, Math.min(o.dimensions.x,o.dimensions.y)/20);\r\n            ctx.fill();\r\n            ctx.closePath();\r\n    \r\n            ctx.fillStyle = window.colors.tile;//'#313131'//'#484a00';\r\n            ctx.font = `${Math.min(60, o.dimensions.x/4, o.dimensions.y/4)}px Inter`;\r\n            ctx.textAlign = 'center';\r\n            ctx.textBaseline = 'middle';\r\n            ctx.fillText(\r\n                Math.max(0, o.coins),\r\n                middleX,\r\n                middleY\r\n            );\r\n        }\r\n    },\r\n    /*checkpoint*/\r\n    (o) => {\r\n        if (o.checkpointCollected === true) {\r\n            ctx.fillStyle = '#0fba09';\r\n            ctx.globalAlpha = 0.15;\r\n        } else {\r\n            ctx.fillStyle = '#05962b';\r\n            ctx.globalAlpha = 0.8;\r\n        }\r\n        // ctx.cleanUpFunction = () => {\r\n        //     ctx.globalAlpha /= 5;\r\n        //     const grd = ctx.createRadialGradient(o.pos.x, o.pos.y, 0, o.pos.x, o.pos.y, (o.dimensions.x + o.dimensions.y)/3);\r\n\r\n        //     grd.addColorStop(0, \"rgba(255,255,255,1)\");\r\n        //     grd.addColorStop(1, \"rgba(255,255,255,0)\");\r\n\r\n        //     ctx.fillStyle = grd;\r\n        //     renderEffectMap[7](o);\r\n        // }\r\n    },\r\n    /*breakable*/\r\n    (o) => {\r\n        ctx.fillStyle = window.colors.tile;// to make it into hex\r\n        ctx.fillStyle = components_blendColor('#000000', ctx.fillStyle, 0.5);\r\n        ctx.globalAlpha = o.strength / o.maxStrength;\r\n    },\r\n    /*safe*/\r\n    (o) => {\r\n        // #8c8c8c hex, .25 globalAlpha\r\n        ctx.fillStyle = 'rgba(140,140,140,.25)';\r\n        ctx.strokeStyle = 'black';\r\n        ctx.lineWidth = 4;\r\n        ctx.toStroke = true;\r\n\r\n        // ctx.fillStyle = window.safeColor || \"#8c8c8c\",\r\n        // ctx.globalAlpha = .25,\r\n        // ctx.beginPath(),\r\n        // ctx.arc(pos.x, pos.y, obstacle.r, 0, 2 * Math.PI),\r\n        // ctx.fill(),\r\n        // ctx.strokeStyle = \"black\",\r\n        // ctx.lineWidth = lineWidth,\r\n        // ctx.globalAlpha = 1,\r\n        // ctx.stroke();\r\n    },\r\n    /*tp*/\r\n    (o) => {\r\n        ctx.fillStyle = '#38ab30';\r\n    },\r\n    /*conveyor*/\r\n    (o) => {\r\n        ctx.fillStyle = window.colors.tile;\r\n        ctx.globalAlpha = 0.1;\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.save();\r\n            ctx.clip();\r\n\r\n            ctx.globalAlpha = 1;\r\n            for(let x = o.topLeft.x + 50; x <= o.topLeft.x + o.dimensions.x + 50; x += 100){\r\n                for(let y = o.topLeft.y + 50; y <= o.topLeft.y + o.dimensions.y + 50; y += 100){\r\n                    ctx.translate(x,y);\r\n                    ctx.rotate(o.conveyorAngle+Math.PI/2);\r\n                    ctx.drawImage(window.arrowImg, -50, -50, 100, 100);\r\n                    ctx.rotate(-o.conveyorAngle-Math.PI/2);\r\n                    ctx.translate(-x,-y);\r\n                }\r\n            }\r\n\r\n            ctx.restore();\r\n            // ctx.beginPath();\r\n            // ctx.fillStyle = 'red';\r\n            // ctx.arc(o.topLeft.x, o.topLeft.y, 30, 0, Math.PI * 2);\r\n            // ctx.fill();\r\n            // ctx.closePath();\r\n        }\r\n    },\r\n    /*platformer*/\r\n    (o) => {\r\n        ctx.fillStyle = window.colors.tile;\r\n        ctx.globalAlpha = 0.1;\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.save();\r\n            ctx.clip();\r\n\r\n            const offsetX = (window.frames*1000/60 * o.platformerForce * Math.cos(o.platformerAngle) / 10) % 100 - 100;\r\n            const offsetY = (window.frames*1000/60 * o.platformerForce * Math.sin(o.platformerAngle) / 10) % 100 - 100;\r\n\r\n            ctx.globalAlpha = 1;\r\n            for(let x = o.topLeft.x + offsetX + 50; x <= o.topLeft.x + o.dimensions.x + 50; x += 100){\r\n                for(let y = o.topLeft.y + offsetY + 50; y <= o.topLeft.y + o.dimensions.y + 50; y += 100){\r\n                    ctx.translate(x,y);\r\n                    ctx.rotate(o.platformerAngle+Math.PI/2);\r\n                    ctx.drawImage(window.arrowImg, -50, -50, 100, 100);\r\n                    ctx.rotate(-o.platformerAngle-Math.PI/2);\r\n                    ctx.translate(-x,-y);\r\n                }\r\n            }\r\n\r\n            ctx.restore();\r\n\r\n            // rendering 👍 if player can jump\r\n            // if there ever is to be more emojis like this, then make an array of emojis that i can push to that render on top of each other every frame (w/ priority? sorted?)\r\n            if(o.canJump === true && o.touchingPlatformer === true){\r\n                const player = window.players[window.selfId];\r\n                if(player !== undefined){\r\n                    ctx.globalAlpha = 1;\r\n                    ctx.fillStyle = 'white';\r\n                    ctx.font = `56px Inter`;\r\n                    ctx.textAlign = 'center';\r\n                    ctx.textBaseline = 'middle';\r\n                    ctx.fillText('👍', player.pos.x, player.pos.y - player.sat.r - 50);\r\n                }\r\n            }\r\n            o.touchingPlatformer = false;\r\n        }\r\n    },\r\n    /*restrictAxis*/\r\n    (o) => {\r\n        if(o.axisSpeedMultX < 0 && o.axisSpeedMultY < 0){\r\n            ctx.strokeStyle = 'red';\r\n        } else if(o.axisSpeedMultX < 0 || o.axisSpeedMultY < 0){\r\n            ctx.strokeStyle = '#ff6969';\r\n        } else if(o.axisSpeedMultY > 1 || o.axisSpeedMultY > 1){\r\n            ctx.strokeStyle = '#c5c500';\r\n        } else {\r\n            ctx.strokeStyle = 'white';\r\n        }\r\n        ctx.lineWidth = 4;\r\n        ctx.toFill = false;\r\n        ctx.toStroke = true;\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.lineWidth = 3;\r\n            ctx.save();\r\n\r\n            ctx.translate(o.topLeft.x + o.dimensions.x / 2, o.topLeft.y + o.dimensions.y / 2);\r\n\r\n            ctx.clip();\r\n\r\n            ctx.globalAlpha = o.axisSpeedMultX > 1 ? 0.8 : (Math.max(0.3,o.axisSpeedMultX < 0 ? -o.axisSpeedMultX : 1-o.axisSpeedMultX));\r\n            ctx.strokeStyle = o.axisSpeedMultX < 0 ? 'red' : (o.axisSpeedMultX > 1 ? '#c5c500' : 'white');\r\n\r\n            ctx.beginPath();\r\n            for(let x = -o.dimensions.x/2; x <= o.dimensions.x/2; x += 50){\r\n                ctx.moveTo(x,-o.dimensions.y/2);\r\n                ctx.lineTo(x,o.dimensions.y/2);\r\n            }\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n\r\n            ctx.globalAlpha = o.axisSpeedMultY > 1 ? 0.8 : (Math.max(0.3,o.axisSpeedMultY < 0 ? -o.axisSpeedMultY : 1-o.axisSpeedMultY));\r\n            ctx.strokeStyle = o.axisSpeedMultY < 0 ? 'red' : (o.axisSpeedMultY > 1 ? '#c5c500' : 'white');\r\n\r\n            ctx.beginPath();\r\n            for(let y = -o.dimensions.y/2; y <= o.dimensions.y/2; y += 50){\r\n                ctx.moveTo(-o.dimensions.x/2,y);\r\n                ctx.lineTo(o.dimensions.x/2,y);\r\n            }\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n\r\n            ctx.restore();\r\n        }\r\n    },\r\n    /*snapGrid*/\r\n    (o) => {\r\n        ctx.fillStyle = '#00008a';\r\n        ctx.globalAlpha = 0.1;\r\n        ctx.toClip = true;\r\n\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.save();\r\n            ctx.clip();\r\n\r\n            ctx.strokeStyle = components_blendColor('#0f0000', '#000000', Math.max(0,o.snapCooldown) / o.maxSnapCooldown);\r\n            ctx.lineWidth = 4;\r\n            ctx.globalAlpha = 0.17;\r\n\r\n            let middleX = o.topLeft.x + o.dimensions.x/2;\r\n            let middleY = o.topLeft.y + o.dimensions.y/2; \r\n            ctx.translate(middleX, middleY);\r\n\r\n            o.snapRotateMovementExpansion = {\r\n                base: (Math.max(o.dimensions.x,o.dimensions.y)**2/Math.sqrt(o.dimensions.x**2+o.dimensions.y**2))\r\n            }\r\n            o.snapRotateMovementExpansion.x = Math.ceil(o.snapRotateMovementExpansion.base/o.snapDistanceX+1)*o.snapDistanceX;\r\n            o.snapRotateMovementExpansion.y = Math.ceil(o.snapRotateMovementExpansion.base/o.snapDistanceY+1)*o.snapDistanceY;\r\n\r\n            ctx.rotate(o.snapAngle);\r\n\r\n            let renderPath = new Path2D();\r\n            if(o.toSnapX === true){\r\n                for(let x = -o.snapRotateMovementExpansion.x; x <= o.snapRotateMovementExpansion.x; x += o.snapDistanceX){\r\n                    renderPath.rect(-10 + x, -o.snapRotateMovementExpansion.x - 10, 20, 2 * o.snapRotateMovementExpansion.x + 20);\r\n                    // ctx.moveTo(x,-o.snapRotateMovementExpansion);\r\n                    // ctx.lineTo(x,o.snapRotateMovementExpansion);\r\n                }\r\n            }\r\n\r\n            if(o.toSnapY === true){\r\n                for(let y = -o.snapRotateMovementExpansion.y; y <= o.snapRotateMovementExpansion.y; y += o.snapDistanceY){\r\n                    renderPath.rect(-o.snapRotateMovementExpansion.y - 10, -10 + y, 2 * o.snapRotateMovementExpansion.y + 20, 20);\r\n                    // ctx.moveTo(-o.snapRotateMovementExpansion,y);\r\n                    // ctx.lineTo(o.snapRotateMovementExpansion,y);\r\n                }\r\n            }\r\n            ctx.stroke(renderPath);\r\n            ctx.closePath();\r\n            \r\n            // drawing snapMagnitude indicator\r\n            const player = window.players[window.selfId];\r\n            if(player.pos.x + o.snapMagnitude < middleX - o.dimensions.x/2 || player.pos.x - o.snapMagnitude > middleX + o.dimensions.x/2 || player.pos.y + o.snapMagnitude < middleY - o.dimensions.y/2 || player.pos.y - o.snapMagnitude > middleY + o.dimensions.y/2){\r\n                ctx.restore();\r\n                return;\r\n            }\r\n            ctx.strokeStyle = 'grey';\r\n            ctx.fillStyle = 'black';\r\n            ctx.globalAlpha = 0.2;\r\n            ctx.beginPath();\r\n\r\n            ctx.clip(renderPath);\r\n\r\n            ctx.rotate(-o.snapAngle);\r\n            ctx.translate(-middleX,-middleY);\r\n\r\n            ctx.arc(player.pos.x, player.pos.y, o.snapMagnitude, 0, Math.PI*2);\r\n            ctx.stroke();\r\n            ctx.fill();\r\n            ctx.closePath();\r\n\r\n            ctx.restore();\r\n        }\r\n    },\r\n    /*timeTrap*/\r\n    (o) => {\r\n        let middleX = o.topLeft.x + o.dimensions.x/2;\r\n        let middleY = o.topLeft.y + o.dimensions.y/2; \r\n\r\n        let grd = ctx.createRadialGradient(middleX, middleY, 0, middleX, middleY, Math.min(100, (o.dimensions.x + o.dimensions.y)/3));\r\n\r\n        if(o.timeTrapToKill === false){\r\n            grd.addColorStop(0, \"rgba(199,199,199,0)\");\r\n            grd.addColorStop(1, \"rgba(199,199,199,1)\");\r\n        } else {\r\n            grd.addColorStop(0, \"rgba(199,0,0,0)\");\r\n            grd.addColorStop(1, \"rgba(199,0,0,1)\");\r\n        }\r\n\r\n        ctx.fillStyle = grd;\r\n        ctx.globalAlpha = Math.max(0.12, 0.5 - o.timeTrapTime / o.timeTrapMaxTime / 2);\r\n        \r\n        ctx.cleanUpFunction = () => {\r\n            ctx.globalAlpha = Math.max(0.3, o.timeTrapTime / o.timeTrapMaxTime / 3);\r\n            ctx.fillStyle = 'white';\r\n            ctx.font = `${Math.min(o.dimensions.x, o.dimensions.y)/2}px Inter`;\r\n            ctx.textAlign = 'center';\r\n            ctx.textBaseline = 'middle';\r\n\r\n            ctx.fillText(o.timeTrapToShowTenth === true ? Math.round(o.timeTrapTime/60 * 10) / 10 : Math.round(o.timeTrapTime/60), middleX, middleY);\r\n        }\r\n    },\r\n    /*changeSize*/\r\n    (o) => {\r\n        if(o.sizeChangePermanent === true){\r\n            ctx.toStroke = true;\r\n            ctx.lineWidth = 10;\r\n            ctx.lineDashOffset = -window.frames*1000/60 / 15;\r\n            if (o.sizeMult > 1){\r\n                ctx.strokeStyle = '#0e30ad';\r\n            } else {\r\n                ctx.strokeStyle = '#1c1852';\r\n            }\r\n            ctx.setLineDash([30, 40]);\r\n\r\n            ctx.cleanUpFunction = () => {\r\n                ctx.setLineDash([]);\r\n            }\r\n        }\r\n        \r\n        if(o.permanentSizeChangeDone === true) {\r\n            ctx.toFill = false;\r\n        } else {\r\n            if (o.sizeMult > 1){\r\n                ctx.fillStyle = '#0e30ad';\r\n            } else {\r\n                ctx.fillStyle = '#1c1852';\r\n            }\r\n        }\r\n        \r\n        ctx.globalAlpha = 0.28;\r\n    },\r\n    /*changeSpeed*/\r\n    (o) => {\r\n        if(o.speedChangePermanent === true){\r\n            ctx.toStroke = true;\r\n            ctx.lineWidth = 10;\r\n            ctx.lineDashOffset = -window.frames*1000/60 / 15;\r\n            ctx.strokeStyle = '#eba500';\r\n            ctx.setLineDash([30, 40]);\r\n\r\n            ctx.cleanUpFunction = () => {\r\n                ctx.setLineDash([]);\r\n            }\r\n        }\r\n\r\n        if(o.permanentSpeedChangeDone === true) {\r\n            ctx.toFill = false;\r\n        } else {\r\n            ctx.fillStyle = '#eba500';\r\n            ctx.toStroke = true;\r\n            ctx.lineWidth = 3;\r\n            ctx.strokeStyle = ctx.fillStyle;\r\n        }\r\n        ctx.globalAlpha = 0.25;\r\n\r\n        // permanents should dissapear upon use i think\r\n    },\r\n    /*solidColor*/\r\n    (o) => {\r\n        ctx.fillStyle = o.hex;\r\n        if(o.isText === true)ctx.globalAlpha = 0;\r\n        else ctx.globalAlpha = o.alpha;\r\n    },\r\n    /*decoration*/\r\n    (o) => {\r\n        ctx.toFill = false;\r\n\r\n        const decoImg = decorationImgs[o.decoFilePath];\r\n        if(decoImg === undefined){\r\n            decorationImgs[o.decoFilePath] = 'loading';\r\n            let img = new Image();\r\n            if(o.decoFilePath.slice(0,4) === 'http'){\r\n                img.src = o.decoFilePath;\r\n                img.onload = () => {\r\n                    decorationImgs[o.decoFilePath] = img;\r\n                }\r\n            } else {\r\n                if(components_environment === 'editor'){\r\n                    __webpack_require__(796)(`./${o.decoFilePath}`).then(data => {\r\n                        img.src = data.default;\r\n                        decorationImgs[o.decoFilePath] = img;\r\n                    });\r\n                } else {\r\n                    img.src = `./gfx/decorations/${o.decoFilePath}`;\r\n                    img.onload = () => {\r\n                        decorationImgs[o.decoFilePath] = img;\r\n                    }\r\n                }\r\n            }\r\n            return;\r\n        } else if(decoImg === 'loading') {\r\n            return;\r\n        }\r\n\r\n        let middleX = o.topLeft.x + o.dimensions.x/2;\r\n        let middleY = o.topLeft.y + o.dimensions.y/2; \r\n        const maxDimension = Math.max(o.dimensions.x, o.dimensions.y);\r\n\r\n        ctx.translate(middleX, middleY);\r\n        if(o.rotation !== undefined) ctx.rotate(o.rotation);\r\n        ctx.drawImage(decoImg, -maxDimension / 2, -maxDimension / 2, maxDimension, maxDimension);\r\n        if(o.rotation !== undefined) ctx.rotate(-o.rotation);\r\n        ctx.translate(-middleX, -middleY);\r\n    },\r\n    /*changeMap*/\r\n    (o) => {\r\n        // ctx.fillStyle = `hsl(${window.frames*1000/60/12},50%,50%)`;\r\n        // ctx.shadowColor = ctx.fillStyle;\r\n        // ctx.shadowBlur = 15;\r\n        // ctx.cleanUpFunction = () => {\r\n        //     ctx.shadowBlur = 0;\r\n        // }\r\n\r\n        let t = (1+Math.sin(window.frames*1000/60 / 600))/2 * (o.difficulty % 1);\r\n\r\n        ctx.fillStyle = components_blendColor(difficultyImageColors[Math.floor(o.difficulty)],difficultyImageColors[Math.min(8,Math.ceil(o.difficulty))],t);\r\n\r\n        ctx.cleanUpFunction = () => {\r\n            if(o.dimensions.x > o.dimensions.y){\r\n                ctx.translate(o.dimensions.x - o.dimensions.y + o.topLeft.x, o.topLeft.y);\r\n            } else {\r\n                ctx.translate(o.topLeft.x, o.dimensions.y - o.dimensions.x + o.topLeft.y);\r\n            }\r\n\r\n            ctx.lineCap = 'round';\r\n            ctx.globalAlpha = t;\r\n            difficultyImageMap[Math.min(8,Math.ceil(o.difficulty))](Math.min(o.dimensions.x, o.dimensions.y));\r\n\r\n            ctx.globalAlpha = 1 - t;\r\n            difficultyImageMap[Math.floor(o.difficulty)](Math.min(o.dimensions.x, o.dimensions.y));\r\n            ctx.lineCap = 'square';\r\n            ctx.globalAlpha = 1;\r\n\r\n            if(o.dimensions.x > o.dimensions.y){\r\n                ctx.translate(-(o.dimensions.x - o.dimensions.y + o.topLeft.x), -o.topLeft.y);\r\n            } else {\r\n                ctx.translate(-o.topLeft.x, -(o.dimensions.y - o.dimensions.x + o.topLeft.y));\r\n            }\r\n\r\n            ctx.font = `${o.dimensions.x / 3.5}px Inter`;\r\n            ctx.fillStyle = 'white';\r\n            ctx.textAlign = 'center';\r\n            ctx.textBaseline = 'middle';\r\n\r\n            ctx.globalAlpha = Math.min(1,((window.players[window.selfId].pos.y + canvas.h/2) - (o.topLeft.y)) / (o.dimensions.y));\r\n            ctx.fillText(\r\n                o.mapName.toUpperCase().replace('O','o'),\r\n                o.topLeft.x + o.dimensions.x / 2,\r\n                o.topLeft.y - o.dimensions.y / 4\r\n            );\r\n            ctx.globalAlpha = 1;\r\n\r\n            // // line marking - scrapped\r\n            // ctx.fillStyle = 'black';\r\n            // ctx.fillRect(\r\n            //     topX,\r\n            //     topY + (1 - o.difficulty%1) * (o.dimensions.y*0.95),\r\n            //     o.dimensions.x / 5,\r\n            //     o.dimensions.y * .05\r\n            // )\r\n        }\r\n    },\r\n    /*tornado*/\r\n    (o) => {\r\n        ctx.fillStyle = '#c0bbc9';\r\n        ctx.globalAlpha = 0.25;\r\n    },\r\n    /*changeVignette*/\r\n    (o) => {\r\n        ctx.toFill = false;\r\n    },\r\n    /*pushable*/\r\n    (o) => {\r\n        ctx.fillStyle = window.colors.tile;\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.save();\r\n            ctx.clip();\r\n\r\n            ctx.strokeStyle = 'white';\r\n            ctx.lineWidth = 3;\r\n            ctx.globalAlpha = 0.25;\r\n            ctx.beginPath();\r\n            ctx.lineTo(o.topLeft.x, o.topLeft.y);\r\n            ctx.lineTo(o.topLeft.x + o.dimensions.x, o.topLeft.y + o.dimensions.y);\r\n            ctx.stroke();\r\n            ctx.beginPath();\r\n            ctx.lineTo(o.topLeft.x + o.dimensions.x, o.topLeft.y);\r\n            ctx.lineTo(o.topLeft.x, o.topLeft.y + o.dimensions.y);\r\n            ctx.stroke();\r\n            ctx.globalAlpha = 1;\r\n            ctx.lineWidth = 3;\r\n\r\n            ctx.restore();\r\n\r\n            // TODO: white lines where the angles are? oneDirectional parameter?\r\n            // also TODO: \r\n        }\r\n    },\r\n    /*changeMusic*/\r\n    (o) => {\r\n        ctx.toFill = false;\r\n    },\r\n    /*changeShip*/\r\n    (o) => {\r\n        ctx.fillStyle = o.changeShipStateTo === true ? 'rgba(0,0,255,0.3)' : 'rgba(255,255,0,0.3)';\r\n        ctx.strokeStyle = o.changeShipStateTo === true ? 'blue' : 'yellow';\r\n        ctx.lineDashOffset = -window.frames*1000/60 * 150 / 1000;\r\n        ctx.lineWidth = 4;\r\n        ctx.setLineDash([30, 30]);\r\n        ctx.toStroke = true;\r\n\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.setLineDash([]);\r\n        }\r\n    },\r\n    /*changeGrapple*/\r\n    (o) => {\r\n        let middleX = o.topLeft.x + o.dimensions.x/2;\r\n        let middleY = o.topLeft.y + o.dimensions.y/2; \r\n\r\n        let grd = ctx.createRadialGradient(middleX, middleY, 0, middleX, middleY, Math.sqrt(o.dimensions.x**2 + o.dimensions.y**2)/2);\r\n\r\n        let t;\r\n        if(o.changeGrappleStateTo === true){\r\n            t = (window.frames*1000/60 / 1600) % 0.33;\r\n            grd.addColorStop(1, \"rgba(127,127,255,0)\");\r\n            grd.addColorStop((0.67+t), \"rgba(127,127,255,1)\");\r\n\r\n            grd.addColorStop((0.66+t), \"rgba(127,127,255,0)\");\r\n            grd.addColorStop((0.34+t), \"rgba(127,127,255,1)\");\r\n\r\n            grd.addColorStop((0.33+t), \"rgba(127,127,255,0)\");\r\n            grd.addColorStop((0.0101+t), \"rgba(127,127,255,1)\");\r\n\r\n            if(0.01+t > 0)grd.addColorStop(0.01+t, \"rgba(127,127,255,0)\");\r\n            grd.addColorStop(0, \"rgba(127,127,255,1)\");\r\n        } else {\r\n            t = 0.33 - (window.frames*1000/60 / 1600) % 0.33;\r\n            grd.addColorStop(1, \"rgba(255,255,127,0)\");\r\n            grd.addColorStop((0.67+t), \"rgba(255,255,127,1)\");\r\n\r\n            grd.addColorStop((0.66+t), \"rgba(255,255,127,0)\");\r\n            grd.addColorStop((0.34+t), \"rgba(255,255,127,1)\");\r\n\r\n            grd.addColorStop((0.33+t), \"rgba(255,255,127,0)\");\r\n            grd.addColorStop((0.0101+t), \"rgba(255,255,127,1)\");\r\n\r\n            if(0.01+t > 0)grd.addColorStop(0.01+t, \"rgba(255,255,127,0)\");\r\n            grd.addColorStop(0, \"rgba(255,255,127,1)\");\r\n        }\r\n\r\n        ctx.fillStyle = grd;\r\n        // ctx.globalAlpha = Math.abs(Math.sin(window.frames*1000/60 / 760));\r\n    },\r\n    /*changeDeathTimer*/\r\n    (o) => {\r\n        if(window.skullImg === undefined){\r\n            window.skullImg = new Image();\r\n            window.skullImg.src = 'https://svgsilh.com/svg/1294357.svg';\r\n            window.skullImg.onload = () => {\r\n                window.skullImgLoaded = true;\r\n            }\r\n            return;\r\n        }\r\n\r\n        ctx.fillStyle = o.changeDeathTimerStateTo === true ? 'red' : 'white';\r\n        ctx.globalAlpha = 0.4;\r\n\r\n        if(window.skullImgLoaded === false) return;\r\n\r\n        ctx.cleanUpFunction = () => {\r\n            ctx.globalAlpha = 1;\r\n            let middleX = o.topLeft.x + o.dimensions.x/2;\r\n            let middleY = o.topLeft.y + o.dimensions.y/2; \r\n\r\n            let minDimension = Math.min(o.dimensions.x, o.dimensions.y);\r\n\r\n            ctx.drawImage(window.skullImg, middleX - minDimension/2, middleY - minDimension/2, minDimension, minDimension);\r\n        }\r\n    },\r\n]\r\n\r\nconst difficultyImageColors = window.difficultyImageColors = [\r\n    /*0 - Peaceful*/\r\n    \"#6cd95b\",\r\n    /*1 - Moderate*/\r\n    \"#58ccb3\",\r\n    /*2 - Difficult*/\r\n    \"#0a77bf\",\r\n    /*3 - Hardcore*/\r\n    \"#3528e0\",\r\n    /*4 - Exhausting*/\r\n    \"#a142c9\",\r\n    /*5 - Relentless*/\r\n    \"#e32d8b\",\r\n    /*6 - Agonizing*/\r\n    \"#fc5434\",\r\n    /*7 - Terrorizing*/\r\n    \"#fc3a3a\",\r\n    /*8 - Cataclysmic*/\r\n    \"#c95d5d\"\r\n]\r\n\r\nconst difficultyImageMap = window.difficultyImageMap = [\r\n    /*0 - Peaceful*/\r\n    (size) => {\r\n        ctx.globalAlpha *= 0.3;\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.lineWidth = size * 3 / 40;\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(size/2, size/2, size / 4, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    },\r\n    /*1 - Moderate*/\r\n    (size) => {\r\n        ctx.strokeStyle = \"#288a75\";\r\n        ctx.lineWidth = size * 3 / 40;\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(size * 5/12, size * 5/12, size / 4, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(size * 7/12, size * 7/12, size / 4, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    },\r\n    /*2 - Difficult*/\r\n    (size) => {\r\n        ctx.globalAlpha *= 0.3;\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.lineWidth = size * 3 / 40;\r\n        ctx.strokeRect(size / 4, size / 4, size / 2, size / 2);\r\n    },\r\n    /*3 - Hardcore*/\r\n    (size) => {\r\n        ctx.globalAlpha *= 0.3;\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.lineWidth = size * 3 / 40;\r\n        ctx.strokeRect(size / 6, size / 6, size * 5 / 12, size * 5 / 12);\r\n        ctx.strokeRect(size * 5 / 12, size * 5 / 12, size * 5 / 12, size * 5 / 12);\r\n    },\r\n    /*4 - Exhausting*/\r\n    (size) => {\r\n        ctx.globalAlpha *= 0.3;\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.lineWidth = size * 3 / 40;\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 5 / 24, size * 12 / 24);\r\n        ctx.lineTo(size * 12 / 24, size * 19 / 24);\r\n        ctx.lineTo(size * 19 / 24, size * 12 / 24);\r\n        ctx.lineTo(size * 12 / 24, size * 5 / 24);\r\n        ctx.lineTo(size * 5 / 24, size * 12 / 24);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    },\r\n    /*5 - Relentless*/\r\n    (size) => {\r\n        ctx.strokeStyle = \"#991d5d\";\r\n        ctx.lineWidth = size * 3 / 40;\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 1 / 6, size * 3 / 6);\r\n        ctx.lineTo(size * 3 / 6, size * 5 / 6);\r\n        ctx.lineTo(size * 5 / 6, size * 3 / 6);\r\n        ctx.lineTo(size * 3 / 6, size * 1 / 6);\r\n        ctx.lineTo(size * 1 / 6, size * 3 / 6);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n\r\n        ctx.strokeRect(size * 5 / 24, size * 5 / 24, size * 14 / 24, size * 14 / 24);\r\n    },\r\n    /*6 - Agonizing*/\r\n    (size) => {\r\n        ctx.fillStyle = \"#d94a2e\";\r\n        ctx.fillRect(0, size * 80 / 120, size * 120 / 120, size * 40 / 120);\r\n        ctx.fillRect(size * 40 / 120, size * 60 / 120, size * 40 / 120, size * 20 / 120);\r\n        ctx.beginPath();\r\n        ctx.lineTo(0, size * 80 / 120);\r\n        ctx.lineTo(size * 20 / 120, size * 40 / 120);\r\n        ctx.lineTo(size * 40 / 120, size * 80 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 40 / 120, size * 60 / 120);\r\n        ctx.lineTo(size * 60 / 120, size * 20 / 120);\r\n        ctx.lineTo(size * 80 / 120, size * 60 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 80 / 120, size * 80 / 120);\r\n        ctx.lineTo(size * 100 / 120, size * 40 / 120);\r\n        ctx.lineTo(size * 120 / 120, size * 80 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    },\r\n    /*7 - Terrorizing*/\r\n    (size) => {\r\n        ctx.fillStyle = \"#d63131\";\r\n\r\n        ctx.fillRect(size * 40 / 120, 0, size * 40 / 120, size * 20 / 120);\r\n        ctx.fillRect(size * 40 / 120, size * 100 / 120, size * 40 / 120, size * 20 / 120);\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(0, size * 120 / 120);\r\n        ctx.lineTo(size * 20 / 120, size * 80 / 120);\r\n        ctx.lineTo(size * 40 / 120, size * 120 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 40 / 120, size * 100 / 120);\r\n        ctx.lineTo(size * 60 / 120, size * 60 / 120);\r\n        ctx.lineTo(size * 80 / 120, size * 100 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 80 / 120, size * 120 / 120);\r\n        ctx.lineTo(size * 100 / 120, size * 80 / 120);\r\n        ctx.lineTo(size * 120 / 120, size * 120 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    \r\n        ctx.beginPath();\r\n        ctx.lineTo(0, 0);\r\n        ctx.lineTo(size * 20 / 120, size * 40 / 120);\r\n        ctx.lineTo(size * 40 / 120, 0);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 40 / 120, size * 20 / 120);\r\n        ctx.lineTo(size * 60 / 120, size * 60 / 120);\r\n        ctx.lineTo(size * 80 / 120, size * 20 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 80 / 120, 0);\r\n        ctx.lineTo(size * 100 / 120, size * 40 / 120);\r\n        ctx.lineTo(size * 120 / 120, 0);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    },\r\n    /*8 - Cataclysmic*/\r\n    (size) => {\r\n        ctx.fillStyle = \"#8c4141\";\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(0, 0);\r\n        ctx.lineTo(size * 40 / 120, 0);\r\n        ctx.lineTo(0, size * 40 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 40 / 120, 0);\r\n        ctx.lineTo(size * 60 / 120, size * 20 / 120);\r\n        ctx.lineTo(size * 80 / 120, 0);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 120 / 120, 0);\r\n        ctx.lineTo(size * 80 / 120, 0);\r\n        ctx.lineTo(size * 120 / 120, size * 40 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 120 / 120, size * 40 / 120);\r\n        ctx.lineTo(size * 100 / 120, size * 60 / 120);\r\n        ctx.lineTo(size * 120 / 120, size * 80 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 120 / 120, size * 120 / 120);\r\n        ctx.lineTo(size * 80 / 120, size * 120 / 120);\r\n        ctx.lineTo(size * 120 / 120, size * 80 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(size * 40 / 120, size * 120 / 120);\r\n        ctx.lineTo(size * 60 / 120, size * 100 / 120);\r\n        ctx.lineTo(size * 80 / 120, size * 120 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(0, size * 120 / 120);\r\n        ctx.lineTo(size * 40 / 120, size * 120 / 120);\r\n        ctx.lineTo(0, size * 80 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.lineTo(0, size * 80 / 120);\r\n        ctx.lineTo(size * 20 / 120, size * 60 / 120);\r\n        ctx.lineTo(0, size * 40 / 120);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    },\r\n];\r\n\r\n// an obstacle is an ECS\r\nconst components_obstacles = window.obstacles = [];\r\n\r\nwindow.spawnPosition = {x: 100, y: 1500};\r\n// a player is also an ecs\r\nwindow.createPlayer = () => {\r\n    create(0/*circle*/, [], [], /*no simulate/ effects*/ {x: window.spawnPosition.x, y: window.spawnPosition.y, r: /*24.5*/49.5})\r\n    const player = components_obstacles.pop();\r\n    player.axisSpeedMultX = player.axisSpeedMultY = 1;\r\n    player.touchingNormalIndexes = [];\r\n    player.lastTouchingNormalIndexes = [];\r\n    player.renderRadius = player.lastAliveRadius = player.sat.r;\r\n    player.xv = player.yv = player.xa = player.ya = 0;\r\n    player.speed = player.baseSpeed = 7.167;\r\n    player.dead = false;\r\n    player.onSafe = false;\r\n    player.touchingWall = false;\r\n    player.stopForces = false;\r\n    player.forces = [];\r\n    player.id = undefined;\r\n    player.dev = true; /*dev only for players[selfId]*/ player.god = false;\r\n    player.friction = 0.4;\r\n    player.ship = false; player.shipAngle = 0; player.shipTurnSpeed = Math.PI / 100;\r\n    player.deathTime = 0; player.deathTimer = false;\r\n    player.grappleX = -1; player.grappleY = -1; player.grapple = false;\r\n    player.grappleRange = 488; player.grappleForce = 0.01; player.grappleFric = 0.414;\r\n    player.timeTrapOverrideSafe = false;\r\n    return player;\r\n}\r\n\r\nwindow.players = [];\r\n\r\nif(window.isExClient !== true) {window.players.push(window.createPlayer()); window.selfId = 0; window.mapDimensions = components_environment === 'server' ? {x:2000,y:2000} : {x:900,y:1600}}\r\nif(window.isExClient === true || components_environment === 'server') window.mapDimensions = {x: 2000, y: 2000};\r\n\r\n/* harmony default export */ const components = (simulate);\n;// ./eXclient/input.js\nwindow.mouse = {\r\n    screen: {\r\n        x: -1,\r\n        y: -1\r\n    },\r\n    world: {\r\n        x: -1,\r\n        y: -1\r\n    }\r\n}\r\n\r\nwindow.mouseX = -1;\r\nwindow.mouseY = -1;\r\nwindow.scrollLocked = false;\r\nwindow.mouseDownFunctions = [];\r\nwindow.mouseMoveFunctions = [];\r\nwindow.mouseUpFunctions = [];\r\nwindow.mouseOut = false;\r\nwindow.pageX = -1;\r\nwindow.pageY = -1;\r\n\r\nwindow.dragging = false;\r\n\r\nwindow.onmousedown = (e) => {}\r\n\r\nwindow.onmousemove = (e) => {}\r\n\r\nwindow.onmouseup = () => {}\r\n\r\nwindow.oncontextmenu = (e) => { return e.preventDefault(); };\r\n\r\nconst Controls = {\r\n    KeyW: 'up',\r\n    KeyS: 'down',\r\n    KeyA: 'left',\r\n    KeyD: 'right',\r\n    ArrowUp: 'up',\r\n    ArrowDown: 'down',\r\n    ArrowLeft: 'left',\r\n    ArrowRight: 'right',\r\n    ShiftLeft: 'shift',\r\n    ShiftRight: 'shift',\r\n    KeyC: 'action1',\r\n    KeyJ: 'action1',\r\n    KeyY: 'action1'\r\n};\r\n\r\nwindow.input = {\r\n    up: false,\r\n    down: false,\r\n    left: false,\r\n    right: false,\r\n    shift: false,\r\n    action1: false,// grapple\r\n};\r\n\r\nlet chatOpen = false, zenMode = false;\r\nwindow.onkeydown = handleKey;\r\nwindow.onkeyup = handleKey;\r\n\r\n\r\nconst {encodeAtPosition: input_encodeAtPosition} = utils;\r\n\r\nconst chat = document.querySelector('.chat');\r\nconst chatDiv = document.querySelector('.chatDiv');\r\nconst visChatDiv = document.querySelector('.chat-div');\r\n\r\nfunction handleKey(e){\r\n    if(chatOpen === true){\r\n        if(e.type === 'keydown' && e.code === 'Enter'){\r\n            let msg = chat.value.trim();\r\n            if(msg === '/reset'){\r\n                window.changeMap('/maps/hub');\r\n            }\r\n            else if(msg.slice(0,6) === '/tpmap'){\r\n                window.changeMap(`/maps/` + msg.slice(7).toLowerCase());\r\n            }\r\n            else if(msg.slice(0,6) === '/scale'){\r\n                const num = parseFloat(msg.slice(7));\r\n                changeCameraScale(num);\r\n            }\r\n            else if(msg.slice(0,4) === '/map'){\r\n                window.initImportMap(msg.slice(5));\r\n            }\r\n            // TEMP PLEASE REMOVE\r\n            else if(window.zones !== undefined && msg.slice(0,7).toLowerCase() === '/tpzone'){\r\n                const num = parseInt(msg.slice(8));\r\n                for(let i = 0; i < window.zones.length; i++){\r\n                    if(window.zones[i].zone === num){\r\n                        window.players[window.selfId].pos.x = window.zones[i].x;\r\n                        window.players[window.selfId].pos.y = window.zones[i].y;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else if(msg.length !== 0){\r\n                msg = window.username + ': ' + msg;\r\n                const buf = new Uint8Array(msg.length + 2);\r\n                buf[0] = 7;// type 0 - set username and join game\r\n                // ['normal', 'system', 'dev', 'guest']\r\n                if(window.players[window.selfId].dev === true) buf[1] = 2;\r\n                else if(window.players[window.selfId].guest === true) buf[1] = 3; \r\n                input_encodeAtPosition(msg, buf, 2);\r\n                send(buf);\r\n            }\r\n            chat.value = '';\r\n            chat.blur();\r\n            chatDiv.classList.add('hidden');\r\n            chatOpen = false;\r\n        }\r\n        // TODO\r\n    } else {\r\n        if (e.repeat) return e.preventDefault();\r\n\r\n        if(e.type === 'keydown'){\r\n            if(e.code === 'KeyO' && window.players[window.selfId].dev === true){\r\n                window.players[window.selfId].god = !window.players[window.selfId].god;\r\n                const buf = new Uint8Array(2);\r\n                buf[0] = 8;\r\n                buf[1] = window.players[window.selfId].god;\r\n                send(buf);\r\n                return e.preventDefault();\r\n            } else if(e.code === 'KeyR' && window.players[window.selfId].dead === true){\r\n                window.respawnPlayer();\r\n            } else if(e.code === 'Enter'){\r\n                chatOpen = true;\r\n                chatDiv.classList.remove('hidden');\r\n                chat.focus();\r\n            } else if (e.code === 'KeyZ') {\r\n                if (!zenMode) {\r\n                    chat.blur();\r\n                    if (!visChatDiv.classList.contains('hidden')) {\r\n                        visChatDiv.classList.add('hidden');\r\n                    }\r\n                    // if (!ref.lb.classList.contains('hide')) {\r\n                    //     ref.lb.classList.add('hide');\r\n                    // }\r\n                } else {\r\n                    if (visChatDiv.classList.contains('hidden')) {\r\n                        visChatDiv.classList.remove('hidden');\r\n                        visChatDiv.scrollTop = visChatDiv.scrollHeight;\r\n                    }\r\n                    // if (ref.lb.classList.contains('hide')) {\r\n                    //     ref.lb.classList.remove('hide');\r\n                    // }\r\n                }\r\n                zenMode = !zenMode;\r\n            } else if (e.code === 'KeyU'){\r\n                window.renderDebug = !window.renderDebug;\r\n            }\r\n        }\r\n\r\n        if (Controls[e.code] != undefined) {\r\n            window.input[Controls[e.code]] = e.type === 'keydown';\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}\r\n\r\nlet importMapFn;\r\nwindow.initImportMap = async (str) => {\r\n    if(importMapFn === undefined) importMapFn = (await __webpack_require__.e(/* import() */ 78).then(__webpack_require__.bind(__webpack_require__, 78))).default;\r\n    importMapFn(str);\r\n}\n;// ./client/sound.js\n\r\nconst { until: sound_until } = utils;\r\n\r\nwindow.hasLoadedNewMusic = false;\r\nlet lastLoadedLink;\r\nlet audioIframe;\r\nlet lastPlayTime = 0;\r\n\r\n// TODO: optimize? \"sub\" time takes about 1ms, so we could optimize by statically creating an element\r\nwindow.stopMusic = async (toAwait=false) => {\r\n    if(toAwait === true){\r\n        let returnBig = false;\r\n        let callTime = Date.now();\r\n        await sound_until(() => {\r\n            if(audioIframe === undefined) return false;\r\n            // we only want to stop music if we played it before this fn is called\r\n            if(lastPlayTime > callTime){\r\n                returnBig = true;\r\n            }\r\n            return true;\r\n        });\r\n        if(returnBig === true) return; \r\n    } else if(audioIframe === undefined) {\r\n        return;\r\n    }\r\n\r\n    audioIframe.remove();\r\n    audioIframe = undefined;\r\n    lastLoadedLink = undefined;\r\n}\r\n\r\nwindow.playMusic = async (link, startTime=0) => {\r\n    window.hasLoadedNewMusic = true;\r\n\r\n    await sound_until(() => {return navigator.userActivation.hasBeenActive === true});\r\n    if(link === lastLoadedLink) return;\r\n\r\n    stopMusic();\r\n    lastLoadedLink = link;\r\n\r\n    \r\n    audioIframe = document.createElement('iframe');\r\n    audioIframe.frameborder = \"0\";\r\n    audioIframe.setAttribute(\"frameBorder\", \"0\");\r\n    audioIframe.width = 0;\r\n    audioIframe.height = 0;\r\n    \r\n    const videoId = link.split('?v=')[1];\r\n    audioIframe.src = `https://www.youtube.com/embed/${videoId}?autoplay=1&loop=1&playlist=${videoId}&enablejsapi=1${startTime === 0 ? '' : \"&start=\" + startTime}`;\r\n    \r\n    audioIframe.allow = \"autoplay\";\r\n    audioIframe.security = \"restricted\";\r\n\r\n    audioIframe.style.position = \"fixed\";\r\n    audioIframe.classList.add('yt');\r\n    audioIframe.id = videoId;\r\n\r\n    // this is about 1ms...\r\n    // console.time(\"sub\");\r\n    document.body.appendChild(audioIframe);\r\n    // console.timeEnd(\"sub\");\r\n\r\n    lastPlayTime = Date.now();\r\n}\r\n\r\nwindow.playMusicIndefinitely = async (link) => {\r\n    lastLoadedLink = undefined;\r\n    await window.playMusic(link);\r\n    audioIframe = undefined;\r\n}\r\n\r\nwindow.reloadMusic = () => {\r\n    let linkToPlay = lastLoadedLink;\r\n    lastLoadedLink = undefined;\r\n    window.playMusic(linkToPlay);\r\n}\n// EXTERNAL MODULE: ./eXserver/maps/_metadata.js\nvar _metadata = __webpack_require__(681);\n;// ./eXclient/index.js\nwindow.isExClient = true;\r\n\r\n\r\n// init rendering\r\n\r\n\r\n// handle client-server communication\r\n\r\n\r\n// game stuff\r\n\r\n\r\n// keyboard input\r\n\r\n\r\n// background music\r\n\r\n\r\n// mapName to difficulty dict\r\n\r\n\r\n// joining game\r\nconst eXclient_gui = window.gui = document.querySelector('.gui');\r\nwindow.username = '';\r\nwindow.authId = -1;\r\n\r\nwindow.startGame = () => {\r\n    eXclient_gui.classList.remove('hidden');\r\n    lastTime = performance.now();\r\n    window.respawnPlayer();\r\n    run();\r\n    console.log('game starting');\r\n}\r\n\r\n// gameloop\r\nlet lastTime, accum, now;\r\nlastTime = accum = now = 0;\r\nwindow.frames = 0;\r\nconst FRAME_TIME = 1000 / 60;\r\nfunction run(){\r\n    requestAnimationFrame(run);\r\n\r\n    now = performance.now();\r\n    accum += now - lastTime;\r\n    lastTime = now;\r\n\r\n    // TODO: Get the map from another player\r\n    if(accum > 2000) accum = 0;\r\n\r\n    while(accum >= 0){\r\n        accum -= FRAME_TIME;\r\n        components();\r\n    }\r\n\r\n    sendUpdatePack();\r\n    window.render();\r\n}\r\n\r\nconst u12 = new Uint8Array(12);\r\nu12[0] = 4;// type 4 - player x and y\r\nconst f12 = new Float32Array(u12.buffer);\r\n\r\nconst u8 = new Uint8Array(8);\r\nconst f8 = new Float32Array(u8.buffer);\r\n\r\nwindow.u4 = new Uint8Array(4);\r\n\r\nlet lastShipAngle = Infinity;\r\nlet lastDead = false;\r\nfunction sendUpdatePack(){\r\n    const player = window.players[window.selfId];\r\n    f12[1] = player.pos.x;\r\n    f12[2] = player.pos.y;\r\n    send(u12);\r\n\r\n    if(player.grapple === true){\r\n        u12[0] = 11;\r\n        f12[1] = player.grappleX;\r\n        f12[2] = player.grappleY;\r\n        send(u12);\r\n        u12[0] = 4;\r\n    }\r\n\r\n    if(player.ship === true && lastShipAngle !== player.shipAngle){\r\n        lastShipAngle = player.shipAngle;\r\n        u8[0] = 9;\r\n        f8[1] = player.shipAngle;\r\n        send(u8);\r\n    }\r\n\r\n    if(player.deathTimer === true){\r\n        u8[0] = 13;\r\n        f8[1] = player.deathTime;\r\n        send(u8);\r\n    }\r\n\r\n    if(player.dead !== lastDead){\r\n        lastDead = player.dead;\r\n        window.u4[0] = 15;\r\n        window.u4[1] = player.dead === true ? 1 : 0;\r\n        send(window.u4);\r\n    }\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODg4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDeEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNwb0JBOztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2pJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2hRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3JMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM1eEZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbktBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FDM0VBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb21uaXNlcnZlci8uL2VYY2xpZW50L3N0eWxlLmNzcz83MjRjIiwid2VicGFjazovL29tbmlzZXJ2ZXIvLi9lWGNsaWVudC9yZW5kZXIuanM/NDM4OCIsIndlYnBhY2s6Ly9vbW5pc2VydmVyLy4vZVhjbGllbnQvbXNncGFja3IuanM/MzJmYSIsIndlYnBhY2s6Ly9vbW5pc2VydmVyLy4vY2xpZW50L3V0aWxzLmpzPzk4NDQiLCJ3ZWJwYWNrOi8vb21uaXNlcnZlci8uL2VYY2xpZW50L25ldHdvcmtpbmcuanM/OWI3MiIsIndlYnBhY2s6Ly9vbW5pc2VydmVyLy4vY2xpZW50L3Njcm9sbC5qcz83ZTFmIiwid2VicGFjazovL29tbmlzZXJ2ZXIvLi9jbGllbnQvY29tcG9uZW50cy5qcz8xNTQ3Iiwid2VicGFjazovL29tbmlzZXJ2ZXIvLi9lWGNsaWVudC9pbnB1dC5qcz80ZGI0Iiwid2VicGFjazovL29tbmlzZXJ2ZXIvLi9jbGllbnQvc291bmQuanM/OWIzZiIsIndlYnBhY2s6Ly9vbW5pc2VydmVyLy4vZVhjbGllbnQvaW5kZXguanM/MGE5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5vcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwibGV0IGNhbnZhcyA9IHdpbmRvdy5jYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2FudmFzJyk7XHJcbmxldCBjdHggPSB3aW5kb3cuY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XHJcblxyXG5jb25zdCBjYW1lcmEgPSB3aW5kb3cuY2FtZXJhID0ge1xyXG4gICAgeDogMCwgeTogMCwgc2NhbGU6IDEsXHJcbiAgICBudW1Db250cm9sbGVkQnk6IDAsXHJcbiAgICAvKjNkKi9cclxuICAgIHo6IDEsXHJcbiAgICBiYXNpczE6IFsxLCAwLCAwXSxcclxuICAgIGJhc2lzMjogWzAsIDEsIDBdLFxyXG4gICAgbm9ybWFsOiBbMCwgMCwgMV1cclxufVxyXG5cclxud2luZG93LmRlZmF1bHRDb2xvcnMgPSB7XHJcbiAgICB0aWxlOiAnIzFmMjIyOScsLy8gdGhlIHN0cm9rZSBhbmQgb3V0c2lkZSBvZiBhcmVuYVxyXG4gICAgYmFja2dyb3VuZDogJyMzMjM2NDUnLC8vIHRoZSBmaWxsY29sb3JcclxuICAgIHZpZ25ldHRlOiB7XHJcbiAgICAgICAgaW5uZXI6IHtzaXplOjAuMSxyOjAsZzowLGI6MCxvcGFjaXR5OjB9LFxyXG4gICAgICAgIG91dGVyOiB7c2l6ZTowLjYscjowLGc6MCxiOjAsb3BhY2l0eToxfSxcclxuICAgICAgICBpbm5lckludGVycDoge3NpemU6MC4xLHI6MCxnOjAsYjowLG9wYWNpdHk6MH0sXHJcbiAgICAgICAgb3V0ZXJJbnRlcnA6IHtzaXplOjAuNixyOjAsZzowLGI6MCxvcGFjaXR5OjF9LFxyXG4gICAgICAgIGhvbGVGdW5jdGlvbnM6IFtdXHJcbiAgICB9XHJcbn1cclxuXHJcbndpbmRvdy5jb2xvcnMgPSB7XHJcbiAgICB0aWxlOiB3aW5kb3cuZGVmYXVsdENvbG9ycy50aWxlLFxyXG4gICAgYmFja2dyb3VuZDogd2luZG93LmRlZmF1bHRDb2xvcnMuYmFja2dyb3VuZCxcclxuICAgIHZpZ25ldHRlOiB7XHJcbiAgICAgICAgaW5uZXI6IHtzaXplOjAuMSxyOjAsZzowLGI6MCxvcGFjaXR5OjB9LFxyXG4gICAgICAgIG91dGVyOiB7c2l6ZTowLjYscjowLGc6MCxiOjAsb3BhY2l0eToxfSxcclxuICAgICAgICBpbm5lckludGVycDoge3NpemU6MC4xLHI6MCxnOjAsYjowLG9wYWNpdHk6MH0sXHJcbiAgICAgICAgb3V0ZXJJbnRlcnA6IHtzaXplOjAuNixyOjAsZzowLGI6MCxvcGFjaXR5OjF9LFxyXG4gICAgICAgIGhvbGVGdW5jdGlvbnM6IFtdXHJcbiAgICB9XHJcbn1cclxuXHJcbndpbmRvdy5zZWxmSWQgPSB1bmRlZmluZWQ7XHJcbndpbmRvdy50aWxlU2l6ZSA9IDEwMDtcclxud2luZG93LnJlbmRlckRlYnVnID0gZmFsc2U7XHJcbndpbmRvdy5kaXN0b3J0aW9uc0FjdGl2ZSA9IGZhbHNlO1xyXG53aW5kb3cuc2t1bGxJbWdMb2FkZWQgPSBmYWxzZTtcclxud2luZG93LnNrdWxsSW1nID0gdW5kZWZpbmVkO1xyXG5jb25zdCBmdWxsc2NyZWVuID0ge1xyXG4gICAgcmF0aW86IDkgLyAxNixcclxuICAgIHpvb206IDE4MDAsXHJcbn1cclxuLy8gY29uc3Qgd2lkdGggPSAxNjAwO1xyXG4vLyBjb25zdCBoZWlnaHQgPSA5MDA7XHJcblxyXG4vLyB3aW5kb3cudGlsZUltYWdlID0gdW5kZWZpbmVkO1xyXG4vLyB3aW5kb3cudGlsZUltYWdlQ29sb3JzID0ge1xyXG4vLyAgICAgdGlsZTogJycsIGJhY2tncm91bmQ6ICcnXHJcbi8vIH1cclxuXHJcbi8vIGZ1bmN0aW9uIGdlbmVyYXRlVGlsZUltYWdlKHt0aWxlLCBiYWNrZ3JvdW5kfSkge1xyXG4vLyAgICAgY29uc3QgY2FudiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xyXG4vLyAgICAgY29uc3QgdyA9IGNhbnZhcy53ICsgY3R4LmxpbmVXaWR0aCArIHdpbmRvdy50aWxlU2l6ZTtcclxuLy8gICAgIGNvbnN0IGggPSBjYW52YXMuaCArIGN0eC5saW5lV2lkdGggKyB3aW5kb3cudGlsZVNpemU7XHJcbiAgICBcclxuLy8gICAgIGNvbnN0IGN4ID0gY2Fudi5nZXRDb250ZXh0KCcyZCcpO1xyXG4vLyAgICAgY2Fudi53aWR0aCA9IHc7XHJcbi8vICAgICBjYW52LmhlaWdodCA9IGg7XHJcbi8vICAgICBjeC5pbWFnZVNtb290aGluZ0VuYWJsZWQgPSBmYWxzZTtcclxuXHJcbi8vICAgICAvLyB0aWxlIGJhY2tncm91bmRcclxuLy8gICAgIGN4Lmdsb2JhbEFscGhhID0gMC43NTtcclxuLy8gICAgIGN4LnN0cm9rZVN0eWxlID0gdGlsZTtcclxuLy8gICAgIGN4LmZpbGxTdHlsZSA9IGJhY2tncm91bmQ7XHJcblxyXG4vLyAgICAgY3gubGluZVdpZHRoID0gMztcclxuLy8gICAgIGZvciAobGV0IHggPSAtY2FtZXJhLngldGlsZVNpemU7IHggPCBjYW52YXMudyArIGN0eC5saW5lV2lkdGggKyB3aW5kb3cudGlsZVNpemU7IHggKz0gd2luZG93LnRpbGVTaXplKSB7XHJcbi8vICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4vLyAgICAgICAgIGN0eC5tb3ZlVG8oeCwgMCk7XHJcbi8vICAgICAgICAgY3R4LmxpbmVUbyh4LCBjYW52YXMuaCk7XHJcbi8vICAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4vLyAgICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuLy8gICAgIH1cclxuXHJcbi8vICAgICBmb3IgKGxldCB5ID0gLWNhbWVyYS55JXRpbGVTaXplOyB5IDwgY2FudmFzLmggKyBjdHgubGluZVdpZHRoICsgd2luZG93LnRpbGVTaXplOyB5ICs9IHdpbmRvdy50aWxlU2l6ZSkge1xyXG4vLyAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuLy8gICAgICAgICBjdHgubW92ZVRvKDAsIHkpO1xyXG4vLyAgICAgICAgIGN0eC5saW5lVG8oY2FudmFzLncsIHkpO1xyXG4vLyAgICAgICAgIGN0eC5zdHJva2UoKTtcclxuLy8gICAgICAgICBjdHguY2xvc2VQYXRoKCk7Ly9cclxuLy8gICAgIH1cclxuXHJcbi8vICAgICBjeC5nbG9iYWxBbHBoYSA9IDE7XHJcbi8vICAgICByZXR1cm4gY2FudjtcclxuLy8gfVxyXG5cclxuLy8gbGV0IHRpbGVJbWc7XHJcbi8vIGZ1bmN0aW9uIGNyZWF0ZVRpbGVJbWcoc2NhbGUsIHRoaWNjKSB7XHJcbi8vICAgICBjb25zdCB0aWxlU2l6ZSA9IDEwMDtcclxuLy8gICAgIC8vIGNvbnN0IHNpemUgPVxyXG4vLyAgICAgLy8gICAgIE1hdGgucm91bmQoTWF0aC5tYXgoY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KSAvIHRpbGVTaXplKSAqXHJcbi8vICAgICAvLyAgICAgICAgIHRpbGVTaXplICtcclxuLy8gICAgIC8vICAgICAyMDA7XHJcbi8vICAgICBjb25zdCBjYW52ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XHJcbi8vICAgICBpZihzY2FsZSA8IDAuMSl7XHJcbi8vICAgICAgICAgcmV0dXJuIGNhbnY7XHJcbi8vICAgICB9XHJcbiAgICBcclxuLy8gICAgIGNvbnN0IHcgPSBjYW52YXMud2lkdGgvc2NhbGUgKyB0aWxlU2l6ZTtcclxuLy8gICAgIGNvbnN0IGggPSBjYW52YXMuaGVpZ2h0L3NjYWxlICsgdGlsZVNpemU7XHJcbiAgICBcclxuLy8gICAgIGNvbnN0IGN4ID0gY2Fudi5nZXRDb250ZXh0KCcyZCcpO1xyXG4vLyAgICAgY2Fudi53aWR0aCA9IHcvL3NpemUgLyBzY2FsZTtcclxuLy8gICAgIGNhbnYuaGVpZ2h0ID0gaC8vc2l6ZSAvIHNjYWxlO1xyXG4vLyAgICAgY3guaW1hZ2VTbW9vdGhpbmdFbmFibGVkID0gZmFsc2U7XHJcblxyXG4vLyAgICAgLy8gdGlsZSBiYWNrZ3JvdW5kXHJcbi8vICAgICBjeC5nbG9iYWxBbHBoYSA9IDAuNzU7XHJcbi8vICAgICBjeC5zdHJva2VTdHlsZSA9IGNvbG9ycy50aWxlLy9jb2xvcnMuYmFja2dyb3VuZDtcclxuLy8gICAgIGN4LmxpbmVXaWR0aCA9IHRoaWNjID8gNCA6IDI7XHJcbi8vICAgICBmb3IgKGxldCB5ID0gMDsgeSA8PSBoOyB5ICs9IHRpbGVTaXplKSB7XHJcbi8vICAgICAgICAgZm9yIChsZXQgeCA9IDA7IHggPD0gdzsgeCArPSB0aWxlU2l6ZSkge1xyXG4vLyAgICAgICAgICAgICBjeC5zdHJva2VSZWN0KHgsIHksIHRpbGVTaXplLCB0aWxlU2l6ZSk7XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgfVxyXG4vLyAgICAgY3guZ2xvYmFsQWxwaGEgPSAxO1xyXG4vLyAgICAgcmV0dXJuIGNhbnY7XHJcbi8vIH1cclxuXHJcbmxldCBvcGFxSW5kZXgsIGxlbiwgbGFzdFBsYXllclgsIGxhc3RQbGF5ZXJZLCBsYXN0UGxheWVyUmFkaXVzLCBkaWFnb25hbFN0YXJ0T2Zmc2V0LCBkaWFnb25hbERpc3QsIG92ZXJSZW5kZXJUaWxlcyA9IGZhbHNlLCBsYXN0R0EsIGogPSBmYWxzZSwgbGFzdE5MRFggPSAwLCBsYXN0TkxEWSA9IDAsIGN1bGxpbmdNaW5YPTAsIGN1bGxpbmdNYXhYPTAsIGN1bGxpbmdNaW5ZPTAsIGN1bGxpbmdNYXhZPTAsIGNhbnZTdW09MDtcclxud2luZG93LnJlbmRlciA9IChvcz13aW5kb3cub2JzdGFjbGVzLCBjb2xzPXdpbmRvdy5jb2xvcnMsIHBsYXllcnM9d2luZG93LnBsYXllcnMpID0+IHtcclxuICAgIGRvY3VtZW50LmJvZHkuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gY29scy50aWxlO1xyXG5cclxuICAgIG92ZXJSZW5kZXJUaWxlcyA9IGZhbHNlO1xyXG4gICAgaWYod2luZG93LnNlbGZJZCAhPT0gdW5kZWZpbmVkKXtcclxuICAgICAgICBjb25zdCBtZSA9IHBsYXllcnNbd2luZG93LnNlbGZJZF07XHJcblxyXG4gICAgICAgIGlmKGNhbWVyYS5udW1Db250cm9sbGVkQnkgPT09IDApe1xyXG4gICAgICAgICAgICBjYW1lcmEueCA9IG1lLnBvcy54O1xyXG4gICAgICAgICAgICBjYW1lcmEueSA9IG1lLnBvcy55O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYobWUuc2hpcCA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoY2FudmFzLncvMiwgY2FudmFzLmgvMik7XHJcbiAgICAgICAgICAgIGN0eC5yb3RhdGUoLU1hdGguUEkvMi1tZS5zaGlwQW5nbGUpO1xyXG4gICAgICAgICAgICBjdHgudHJhbnNsYXRlKC1jYW52YXMudy8yLCAtY2FudmFzLmgvMik7XHJcbiAgICAgICAgICAgIG92ZXJSZW5kZXJUaWxlcyA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIHRpbGUgYmFja2dyb3VuZFxyXG4gICAgLy8gY3R4LnN0cm9rZVN0eWxlID0gY29scy50aWxlO1xyXG4gICAgLy8gY3R4LmZpbGxTdHlsZSA9IGNvbHMuYmFja2dyb3VuZDtcclxuXHJcbiAgICAvLyBpZih0aWxlSW1nID09PSB1bmRlZmluZWQpe1xyXG4gICAgLy8gICAgIHRpbGVJbWcgPSBjcmVhdGVUaWxlSW1nKDEpO1xyXG4gICAgLy8gfVxyXG5cclxuICAgIC8vIGNvbnN0IGltZyA9IHRpbGVJbWc7XHJcbiAgICAvL2N0eC50cmFuc2xhdGUocG9zLnggLCBwb3MueSArIChncmlkT2Zmc2V0LnkgJSA1MCkpO1xyXG4gICAgLy8gY3R4LmRyYXdJbWFnZShpbWcsIChjYW52YXMudy8yLWNhbWVyYS54KSV0aWxlU2l6ZSwgKGNhbnZhcy5oLzItY2FtZXJhLnkpJXRpbGVTaXplKTtcclxuICAgIFxyXG5cclxuICAgIGlmKG92ZXJSZW5kZXJUaWxlcyA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IGNvbHMudGlsZTtcclxuXHJcbiAgICAgICAgY2FudlN1bSA9IChjYW52YXMudyArIGNhbnZhcy5oKS8yO1xyXG4gICAgICAgIGN0eC5maWxsUmVjdCgtY2FudlN1bSwtY2FudlN1bSw0KmNhbnZTdW0sIDQqY2FudlN1bSk7XHJcblxyXG4gICAgICAgIGN1bGxpbmdNaW5YID0gY2FtZXJhLngtY2FudlN1bTtcclxuICAgICAgICBjdWxsaW5nTWF4WCA9IGNhbWVyYS54K2NhbnZTdW07XHJcbiAgICAgICAgY3VsbGluZ01pblkgPSBjYW1lcmEueS1jYW52U3VtO1xyXG4gICAgICAgIGN1bGxpbmdNYXhZID0gY2FtZXJhLnkrY2FudlN1bTtcclxuXHJcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IGNvbHMuYmFja2dyb3VuZDtcclxuICAgICAgICAvLyBhZGQgMSB0byBhbGwgZGltZW5zaW9ucyBzbyB0aGF0IHdlIGRvbid0IGdldCBnYXAgYXJ0aWZhY3RzIG9uIHRoZSBlZGdlIG9mIHRoZSBhcmVuYVxyXG4gICAgICAgIGN0eC5maWxsUmVjdCgtKGNhbWVyYS54LWNhbnZhcy53LzIpKzEsIC0oY2FtZXJhLnktY2FudmFzLmgvMikrMSwgd2luZG93Lm1hcERpbWVuc2lvbnMueC0yLCB3aW5kb3cubWFwRGltZW5zaW9ucy55LTIpO1xyXG5cclxuICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSAwLjc1O1xyXG4gICAgICAgIGN0eC5saW5lV2lkdGggPSA0Ljg7XHJcbiAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gY29scy50aWxlO1xyXG5cclxuICAgICAgICAvLyBhY2NvdW50aW5nIGZvciByb3RhdGlvbiBhbmQgc3VjaFxyXG4gICAgICAgIGRpYWdvbmFsRGlzdCA9IE1hdGguc3FydChjYW52YXMudyAqKiAyICsgY2FudmFzLmggKiogMik7XHJcbiAgICAgICAgZGlhZ29uYWxTdGFydE9mZnNldCA9IChkaWFnb25hbERpc3QvMikgJSB0aWxlU2l6ZSAtIHRpbGVTaXplIC0gZGlhZ29uYWxEaXN0IC8gMjtcclxuICAgICAgICBmb3IgKGxldCB4ID0gKGNhbnZhcy53LzItY2FtZXJhLngpJXRpbGVTaXplICsgZGlhZ29uYWxTdGFydE9mZnNldDsgeCA8IGRpYWdvbmFsRGlzdCArIGN0eC5saW5lV2lkdGggKyB3aW5kb3cudGlsZVNpemU7IHggKz0gd2luZG93LnRpbGVTaXplKSB7XHJcbiAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICAgICAgY3R4Lm1vdmVUbyh4LCBkaWFnb25hbFN0YXJ0T2Zmc2V0KTtcclxuICAgICAgICAgICAgY3R4LmxpbmVUbyh4LCBjYW52YXMuaCAtIGRpYWdvbmFsU3RhcnRPZmZzZXQpO1xyXG4gICAgICAgICAgICBjdHguc3Ryb2tlKCk7XHJcbiAgICAgICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBmb3IgKGxldCB5ID0gKGNhbnZhcy5oLzItY2FtZXJhLnkpJXRpbGVTaXplICsgZGlhZ29uYWxTdGFydE9mZnNldDsgeSA8IGRpYWdvbmFsRGlzdCArIGN0eC5saW5lV2lkdGggKyB3aW5kb3cudGlsZVNpemU7IHkgKz0gd2luZG93LnRpbGVTaXplKSB7XHJcbiAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICAgICAgY3R4Lm1vdmVUbyhkaWFnb25hbFN0YXJ0T2Zmc2V0LCB5KTtcclxuICAgICAgICAgICAgY3R4LmxpbmVUbyhjYW52YXMudyAtIGRpYWdvbmFsU3RhcnRPZmZzZXQsIHkpO1xyXG4gICAgICAgICAgICBjdHguc3Ryb2tlKCk7XHJcbiAgICAgICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuICAgICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSBjb2xzLnRpbGU7XHJcbiAgICAgICAgY3R4LmZpbGxSZWN0KDAsMCxjYW52YXMudywgY2FudmFzLmgpO1xyXG5cclxuICAgICAgICBjdWxsaW5nTWluWCA9IGNhbWVyYS54LWNhbnZhcy53LzI7XHJcbiAgICAgICAgY3VsbGluZ01heFggPSBjYW1lcmEueCtjYW52YXMudy8yO1xyXG4gICAgICAgIGN1bGxpbmdNaW5ZID0gY2FtZXJhLnktY2FudmFzLmgvMjtcclxuICAgICAgICBjdWxsaW5nTWF4WSA9IGNhbWVyYS55K2NhbnZhcy5oLzI7XHJcblxyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSBjb2xzLmJhY2tncm91bmQ7XHJcbiAgICAgICAgLy8gYWRkIDEgdG8gYWxsIGRpbWVuc2lvbnMgc28gdGhhdCB3ZSBkb24ndCBnZXQgZ2FwIGFydGlmYWN0cyBvbiB0aGUgZWRnZSBvZiB0aGUgYXJlbmFcclxuICAgICAgICBjdHguZmlsbFJlY3QoLShjYW1lcmEueC1jYW52YXMudy8yKSsxLCAtKGNhbWVyYS55LWNhbnZhcy5oLzIpKzEsIHdpbmRvdy5tYXBEaW1lbnNpb25zLngtMiwgd2luZG93Lm1hcERpbWVuc2lvbnMueS0yKTtcclxuXHJcbiAgICAgICAgY3R4Lmdsb2JhbEFscGhhID0gMC43NTtcclxuICAgICAgICBjdHgubGluZVdpZHRoID0gNC44O1xyXG4gICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IGNvbHMudGlsZTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgeCA9IChjYW52YXMudy8yLWNhbWVyYS54KSV0aWxlU2l6ZTsgeCA8IGNhbnZhcy53ICsgY3R4LmxpbmVXaWR0aCArIHdpbmRvdy50aWxlU2l6ZTsgeCArPSB3aW5kb3cudGlsZVNpemUpIHtcclxuICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgICAgICBjdHgubW92ZVRvKHgsIDApO1xyXG4gICAgICAgICAgICBjdHgubGluZVRvKHgsIGNhbnZhcy5oKTtcclxuICAgICAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgICAgICAgICBjdHguY2xvc2VQYXRoKCk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgZm9yIChsZXQgeSA9IChjYW52YXMuaC8yLWNhbWVyYS55KSV0aWxlU2l6ZTsgeSA8IGNhbnZhcy5oICsgY3R4LmxpbmVXaWR0aCArIHdpbmRvdy50aWxlU2l6ZTsgeSArPSB3aW5kb3cudGlsZVNpemUpIHtcclxuICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgICAgICBjdHgubW92ZVRvKDAsIHkpO1xyXG4gICAgICAgICAgICBjdHgubGluZVRvKGNhbnZhcy53LCB5KTtcclxuICAgICAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgICAgICAgICBjdHguY2xvc2VQYXRoKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGN0eC5nbG9iYWxBbHBoYSA9IDE7XHJcblxyXG4gICAgLy8gVE9ETzogdGVzdCBpZiBpdCdzIGZhc3RlciB0byBkcmF3IHRpbGVzIG9yIGltYWdlXHJcbiAgICAvLyBpZih3aW5kb3cudGlsZUltYWdlQ29sb3JzLnRpbGUgIT09IHdpbmRvdy5jb2xvcnMudGlsZSB8fCB3aW5kb3cudGlsZUltYWdlQ29sb3JzLmJhY2tncm91bmQgIT09IHdpbmRvdy5jb2xvcnMuYmFja2dyb3VuZCl7XHJcbiAgICAvLyAgICAgLy8gVE9ETzogb3B0aW1pemUgZXZlbiBmdXJ0aGVyIHdpdGgganVzdCBnZW5lcmF0aW5nIGxpbmVzIGFuZCB1c2luZyBjbGVhclJlY3QgYW5kIGhhdmluZyBhbm90aGVyIGNhbnZhcyBpbiB0aGUgYmFja2dyb3VuZCB3aXRoIHRoZSBzb2xpZCBiZyBjb2xvciBmaWxsXHJcbiAgICAvLyAgICAgd2luZG93LnRpbGVJbWFnZSA9IGdlbmVyYXRlVGlsZUltYWdlKHdpbmRvdy5jb2xvcnMpO1xyXG4gICAgLy8gfVxyXG5cclxuICAgIC8vIGN0eC5kcmF3SW1hZ2Uod2luZG93LnRpbGVJbWFnZSwgLWNhbWVyYS54ICUgdGlsZVNpemUsIC1jYW1lcmEueSAlIHRpbGVTaXplKTtcclxuICAgIGN0eC50cmFuc2xhdGUoLShjYW1lcmEueC1jYW52YXMudy8yKSwgLShjYW1lcmEueS1jYW52YXMuaC8yKSk7XHJcblxyXG4gICAgLy8gcmVuZGVyIG9ic3RhY2xlc1xyXG4gICAgZm9yKGxldCBpID0gMDsgaSA8IG9zLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICBpZihvc1tpXS5jciAhPT0gdW5kZWZpbmVkKSB7IG9zW2ldLmNyKG9zW2ldKTsgY29udGludWU7IH1cclxuXHJcbiAgICAgICAgLy8gY3VsbGluZ1xyXG4gICAgICAgIGlmKG9zW2ldLnRvcExlZnQueCA+IGN1bGxpbmdNYXhYIHx8IG9zW2ldLnRvcExlZnQueCArIG9zW2ldLmRpbWVuc2lvbnMueCA8IGN1bGxpbmdNaW5YIHx8IG9zW2ldLnRvcExlZnQueSA+IGN1bGxpbmdNYXhZIHx8IG9zW2ldLnRvcExlZnQueSArIG9zW2ldLmRpbWVuc2lvbnMueSA8IGN1bGxpbmdNaW5ZKSBjb250aW51ZTtcclxuXHJcbiAgICAgICAgbGVuID0gb3NbaV0uZWZmZWN0Lmxlbmd0aDtcclxuICAgICAgICBpZihsZW4gPT09IDEpe1xyXG4gICAgICAgICAgICBqID0gMDtcclxuICAgICAgICAgICAgY3R4LnRvRmlsbCA9IHRydWU7XHJcbiAgICAgICAgICAgIGN0eC50b1N0cm9rZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICBjdHgubGluZVdpZHRoID0gNDsgXHJcbiAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICAgICAgb3NbaV0ucmVuZGVyU2hhcGUob3NbaV0pO1xyXG4gICAgICAgICAgICBvc1tpXS5yZW5kZXJFZmZlY3Rbal0ob3NbaV0pO1xyXG4gICAgICAgICAgICBpZihvc1tpXS5pc1RleHQgPT09IHRydWUpIHJlbmRlclRleHRTcGVjaWFscyhvc1tpXSwgY29scyk7XHJcbiAgICAgICAgICAgIGlmKGN0eC50b0ZpbGwgPT09IHRydWUpIGN0eC5maWxsKCk7XHJcbiAgICAgICAgICAgIGlmKGN0eC50b1N0cm9rZSA9PT0gdHJ1ZSkgY3R4LnN0cm9rZSgpO1xyXG4gICAgICAgICAgICBpZihjdHguY2xlYW5VcEZ1bmN0aW9uICE9PSB1bmRlZmluZWQpIHsgY3R4LmNsZWFuVXBGdW5jdGlvbigpOyBjdHguY2xlYW5VcEZ1bmN0aW9uID0gdW5kZWZpbmVkOyB9XHJcbiAgICAgICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuICAgICAgICAgICAgY3R4Lmdsb2JhbEFscGhhID0gMTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvLyBzbyB3ZSB3YW50IHRvIGZhZGUgYmV0d2VlbiB0aGUgZWZmZWN0IHJlbmRlcnMuIFdlIHJlbmRlciBhIHByZXZpb3VzIG9uZSB3aXRoIDEgb3BhY2l0eSBhbmQgdGhlbiByYWlzZSB0aGUgbmV4dCBvbmUgZnJvbSAwLTEgb3BhY2l0eSwgdW50aWwgdGhlIG5leHQgb25lIGJlY29tZXMgdGhlIHByZXZpb3VzIGFuZCB0aGUgY3ljbGUgcmVwZWF0c1xyXG4gICAgICAgICAgICBvc1tpXS5yZW5kZXJFZmZlY3RUaW1lciArPSAxLzEyODtcclxuICAgICAgICAgICAgaWYob3NbaV0ucmVuZGVyRWZmZWN0VGltZXIgPj0gbGVuKSBvc1tpXS5yZW5kZXJFZmZlY3RUaW1lciAtPSBsZW47XHJcblxyXG4gICAgICAgICAgICBvcGFxSW5kZXggPSBNYXRoLmZsb29yKG9zW2ldLnJlbmRlckVmZmVjdFRpbWVyKTtcclxuICAgICAgICAgICAgLypsZXQgZnVsbEluZGV4Ki9qID0gb3BhcUluZGV4IC0gMTtcclxuICAgICAgICAgICAgaWYoLypmdWxsSW5kZXgqL2ogPT09IC0xKSAvKmZ1bGxJbmRleCovaiA9IGxlbi0xO1xyXG4gICAgICAgICAgICAvLyBqID0gZnVsbEluZGV4O1xyXG5cclxuICAgICAgICAgICAgLy8gcmVuZGVyIGZ1bGwgaW5kZXhcclxuICAgICAgICAgICAgY3R4LnRvRmlsbCA9IHRydWU7XHJcbiAgICAgICAgICAgIGN0eC50b1N0cm9rZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICBjdHgubGluZVdpZHRoID0gMjtcclxuICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgICAgICBvc1tpXS5yZW5kZXJTaGFwZShvc1tpXSk7XHJcbiAgICAgICAgICAgIG9zW2ldLnJlbmRlckVmZmVjdFtqXShvc1tpXSk7XHJcbiAgICAgICAgICAgIGlmKG9zW2ldLmlzVGV4dCA9PT0gdHJ1ZSkgcmVuZGVyVGV4dFNwZWNpYWxzKG9zW2ldLCBjb2xzKTtcclxuICAgICAgICAgICAgY3R4Lmdsb2JhbEFscGhhID0gMTtcclxuICAgICAgICAgICAgaWYoY3R4LnRvRmlsbCA9PT0gdHJ1ZSkgY3R4LmZpbGwoKTtcclxuICAgICAgICAgICAgaWYoY3R4LnRvU3Ryb2tlID09PSB0cnVlKSBjdHguc3Ryb2tlKCk7XHJcbiAgICAgICAgICAgIGlmKGN0eC5jbGVhblVwRnVuY3Rpb24gIT09IHVuZGVmaW5lZCkgeyBjdHguY2xlYW5VcEZ1bmN0aW9uKCk7IGN0eC5jbGVhblVwRnVuY3Rpb24gPSB1bmRlZmluZWQ7IH1cclxuICAgICAgICAgICAgY3R4LmNsb3NlUGF0aCgpO1xyXG5cclxuICAgICAgICAgICAgLy8gcmVuZGVyIG9wYXEgaW5kZXhcclxuICAgICAgICAgICAgaiA9IG9wYXFJbmRleDtcclxuICAgICAgICAgICAgY3R4LnRvRmlsbCA9IHRydWU7XHJcbiAgICAgICAgICAgIGN0eC50b1N0cm9rZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICBjdHgubGluZVdpZHRoID0gMjtcclxuICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgICAgICBvc1tpXS5yZW5kZXJTaGFwZShvc1tpXSk7XHJcbiAgICAgICAgICAgIG9zW2ldLnJlbmRlckVmZmVjdFtqXShvc1tpXSk7XHJcbiAgICAgICAgICAgIGlmKG9zW2ldLmlzVGV4dCA9PT0gdHJ1ZSkgcmVuZGVyVGV4dFNwZWNpYWxzKG9zW2ldLCBjb2xzKTtcclxuICAgICAgICAgICAgY3R4Lmdsb2JhbEFscGhhID0gb3NbaV0ucmVuZGVyRWZmZWN0VGltZXIgLSBvcGFxSW5kZXg7XHJcbiAgICAgICAgICAgIGlmKGN0eC50b0ZpbGwgPT09IHRydWUpIGN0eC5maWxsKCk7XHJcbiAgICAgICAgICAgIGlmKGN0eC50b1N0cm9rZSA9PT0gdHJ1ZSkgY3R4LnN0cm9rZSgpO1xyXG4gICAgICAgICAgICBpZihjdHguY2xlYW5VcEZ1bmN0aW9uICE9PSB1bmRlZmluZWQpIHsgY3R4LmNsZWFuVXBGdW5jdGlvbigpOyBjdHguY2xlYW5VcEZ1bmN0aW9uID0gdW5kZWZpbmVkOyB9XHJcbiAgICAgICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuICAgICAgICAgICAgY3R4Lmdsb2JhbEFscGhhID0gMTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gcmVuZGVyIHBsYXllcnNcclxuICAgIGZvcihsZXQgaSA9IDA7IGkgPCBwbGF5ZXJzLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICBjb25zdCBwbGF5ZXIgPSBwbGF5ZXJzW2ldO1xyXG4gICAgICAgIGlmKHBsYXllciA9PT0gdW5kZWZpbmVkKSBjb250aW51ZTtcclxuICAgICAgICBjdHguZmlsbFN0eWxlID0gcGxheWVyLmRlYWQgPT09IHRydWUgPyAncmVkJyA6ICdibGFjayc7XHJcblxyXG4gICAgICAgIGNvbnN0IGxhc3RSYWRpdXMgPSBwbGF5ZXIuc2F0LnI7XHJcbiAgICAgICAgcGxheWVyLnNhdC5yID0gTWF0aC5hYnMocGxheWVyLnJlbmRlclJhZGl1cyk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgIHBsYXllci5yZW5kZXJTaGFwZShwbGF5ZXIpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmKHBsYXllci5yZW5kZXJSYWRpdXMgPj0gMCkgY3R4LmZpbGwoKTtcclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgLy8gbmVnYXRpdmUgcmFkaXVzXHJcbiAgICAgICAgICAgIGNvbnN0IGRpYW1ldGVyID0gMiAqIE1hdGguUEkgKiBNYXRoLmFicyhwbGF5ZXIuZGVhZCA9PT0gdHJ1ZSA/IHBsYXllci5zYXQuciA6IGxhc3RQbGF5ZXJSYWRpdXMpO1xyXG4gICAgICAgICAgICBjb25zdCB0aW1lc0Fyb3VuZCA9IE1hdGgubWF4KDMsIE1hdGguZmxvb3IoZGlhbWV0ZXIgLyA0MikpO1xyXG4gICAgICAgICAgICBsYXN0TkxEWCA9IGxhc3ROTERYICogMC45NiArIDIvNypkaWFtZXRlci90aW1lc0Fyb3VuZCAqIDAuMDQ7XHJcbiAgICAgICAgICAgIGxhc3ROTERZID0gbGFzdE5MRFkgKiAwLjk2ICsgNS83KmRpYW1ldGVyL3RpbWVzQXJvdW5kICogMC4wNDtcclxuICAgICAgICAgICAgY3R4LnNldExpbmVEYXNoKFtsYXN0TkxEWCwgbGFzdE5MRFldKTtcclxuICAgICAgICAgICAgY3R4LmxpbmVEYXNoT2Zmc2V0ID0gKC13aW5kb3cuZnJhbWVzIC8gMS41NikgJSBkaWFtZXRlcjtcclxuICAgICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gY3R4LmZpbGxTdHlsZTtcclxuICAgICAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDg7XHJcbiAgICAgICAgICAgIGN0eC5saW5lQ2FwID0gJ3JvdW5kJztcclxuICAgICAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgICAgICAgICBjdHguc2V0TGluZURhc2goW10pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihwbGF5ZXIuZ29kID09PSB0cnVlKSB7Y3R4LnN0cm9rZVN0eWxlID0gJ3B1cnBsZSc7IGN0eC5saW5lV2lkdGggPSAxMDsgY3R4LnN0cm9rZSgpOyB9XHJcbiAgICAgICAgaWYgKHBsYXllci5zaGlwID09PSB0cnVlKSB7XHJcbiAgICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9ICcjMDAzM2VkJztcclxuICAgICAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDEwO1xyXG4gICAgICAgICAgICBjdHgubGluZUNhcCA9ICdyb3VuZCc7XHJcbiAgICAgICAgICAgIGN0eC5tb3ZlVG8ocGxheWVyLnBvcy54LHBsYXllci5wb3MueSk7XHJcbiAgICAgICAgICAgIGN0eC5saW5lVG8ocGxheWVyLnBvcy54ICsgTWF0aC5jb3MocGxheWVyLnNoaXBBbmdsZSkgKiBwbGF5ZXIuc2F0LnIsIHBsYXllci5wb3MueSArIE1hdGguc2luKHBsYXllci5zaGlwQW5nbGUpICogcGxheWVyLnNhdC5yKTtcclxuICAgICAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihwbGF5ZXIuZ3JhcHBsZSA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gJyM5Njk2OTYnO1xyXG4gICAgICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSAwLjc1O1xyXG4gICAgICAgICAgICBjdHgubGluZVdpZHRoID0gMTI7XHJcbiAgICAgICAgICAgIGN0eC5hcmMocGxheWVyLnBvcy54LCBwbGF5ZXIucG9zLnksIE1hdGguYWJzKHBsYXllci5yZW5kZXJSYWRpdXMpIC8gMiwgMCwgTWF0aC5QSSAqIDIpO1xyXG5cclxuICAgICAgICAgICAgaWYocGxheWVyLmdyYXBwbGVYID09PSAtMSAmJiBwbGF5ZXIuaWQgPT09IHdpbmRvdy5zZWxmSWQgJiYgaW5wdXQuYWN0aW9uMSA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSAnd2hpdGUnO1xyXG4gICAgICAgICAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgICAgICAgICAgICAgY3R4LmNsb3NlUGF0aCgpO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIGZhaWxlZCBncmFwcGxlIC0gYmlnIGNpcmNsZVxyXG4gICAgICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgICAgICAgICAgY3R4Lmdsb2JhbEFscGhhID0gMC4yO1xyXG4gICAgICAgICAgICAgICAgY3R4LmFyYyhwbGF5ZXIucG9zLngsIHBsYXllci5wb3MueSwgcGxheWVyLmdyYXBwbGVSYW5nZSwgMCwgTWF0aC5QSSAqIDIpO1xyXG4gICAgICAgICAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgICAgICAgICAgICAgY3R4LmNsb3NlUGF0aCgpO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYocGxheWVyLmdyYXBwbGVYICE9PSAtMSl7XHJcbiAgICAgICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSAnd2hpdGUnO1xyXG4gICAgICAgICAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgICAgICAgICAgICAgY3R4LmNsb3NlUGF0aCgpO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIHN1Y2Nlc3NmdWwgZ3JhcHBsZSAtIGxpbmUgdG8gZ3JhcCBwdFxyXG4gICAgICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgICAgICAgICAgY3R4Lm1vdmVUbyhwbGF5ZXIucG9zLngsIHBsYXllci5wb3MueSk7XHJcbiAgICAgICAgICAgICAgICBjdHgubGluZVRvKHBsYXllci5ncmFwcGxlWCwgcGxheWVyLmdyYXBwbGVZKTtcclxuICAgICAgICAgICAgICAgIGN0eC5zdHJva2UoKTtcclxuICAgICAgICAgICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBhbmQgY2lyY2xlIGF0IHRoZSBwb2ludFxyXG4gICAgICAgICAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDEwO1xyXG4gICAgICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgICAgICAgICAgY3R4LmFyYyhwbGF5ZXIuZ3JhcHBsZVgsIHBsYXllci5ncmFwcGxlWSwgMTAsIDAsIE1hdGguUEkgKiAyKTtcclxuICAgICAgICAgICAgICAgIGN0eC5zdHJva2UoKTtcclxuICAgICAgICAgICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGN0eC5zdHJva2UoKTtcclxuICAgICAgICAgICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihwbGF5ZXIuZGVhdGhUaW1lciA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSAncmVkJztcclxuICAgICAgICAgICAgY3R4LmZvbnQgPSAnNjBweCBJbnRlcic7XHJcbiAgICAgICAgICAgIGN0eC50ZXh0QWxpZ24gPSAnY2VudGVyJztcclxuICAgICAgICAgICAgY3R4LnRleHRCYXNlbGluZSA9ICdtaWRkbGUnO1xyXG4gICAgICAgICAgICBjdHguc2hhZG93Qmx1ciA9IDI7XHJcbiAgICAgICAgICAgIGN0eC5zaGFkb3dDb2xvciA9ICdyZWQnO1xyXG4gICAgICAgICAgICBjdHguZmlsbFRleHQofn4ocGxheWVyLmRlYXRoVGltZSAvIDYwKSwgcGxheWVyLnBvcy54LCBwbGF5ZXIucG9zLnkpO1xyXG4gICAgICAgICAgICBjdHguc2hhZG93Qmx1ciA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuXHJcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICd3aGl0ZSc7XHJcbiAgICAgICAgY3R4LmZvbnQgPSBgJHsxNSAqICgoTWF0aC5hYnMocGxheWVyLnJlbmRlclJhZGl1cykgKyAwLjUpIC8gMjUpfXB4IEludGVyYDtcclxuICAgICAgICBjdHgudGV4dEFsaWduID0gJ2NlbnRlcic7XHJcbiAgICAgICAgY3R4LnRleHRCYXNlbGluZSA9ICdtaWRkbGUnO1xyXG4gICAgICAgIGN0eC5maWxsVGV4dChcclxuICAgICAgICAgICAgcGxheWVyLm5hbWUsXHJcbiAgICAgICAgICAgIHBsYXllci5wb3MueCxcclxuICAgICAgICAgICAgcGxheWVyLnBvcy55ICsgcGxheWVyLnJlbmRlclJhZGl1cyAqIDQvMyArIDNcclxuICAgICAgICApO1xyXG5cclxuICAgICAgICBwbGF5ZXIuc2F0LnIgPSBsYXN0UmFkaXVzO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGRlYnVnXHJcbiAgICBpZih3aW5kb3cucmVuZGVyRGVidWcgPT09IHRydWUpe1xyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSAncmVkJztcclxuICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSAncmVkJztcclxuICAgICAgICBjdHgubGluZVdpZHRoID0gMjtcclxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgb3MubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICBpZihvc1tpXS50b3BMZWZ0LnggPiBjdWxsaW5nTWF4WCB8fCBvc1tpXS50b3BMZWZ0LnggKyBvc1tpXS5kaW1lbnNpb25zLnggPCBjdWxsaW5nTWluWCB8fCBvc1tpXS50b3BMZWZ0LnkgPiBjdWxsaW5nTWF4WSB8fCBvc1tpXS50b3BMZWZ0LnkgKyBvc1tpXS5kaW1lbnNpb25zLnkgPCBjdWxsaW5nTWluWSkgY29udGludWU7XHJcbiAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICAgICAgY3R4LmFyYyhvc1tpXS5wb3MueCwgb3NbaV0ucG9zLnksIDEwLCAwLCBNYXRoLlBJICogMik7XHJcbiAgICAgICAgICAgIGN0eC5maWxsKCk7XHJcbiAgICAgICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuICAgICAgICAgICAgY3R4LnN0cm9rZVJlY3Qob3NbaV0udG9wTGVmdC54LCBvc1tpXS50b3BMZWZ0LnksIG9zW2ldLmRpbWVuc2lvbnMueCwgb3NbaV0uZGltZW5zaW9ucy55KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSAnd2hpdGUnO1xyXG4gICAgICAgIGN0eC50ZXh0QWxpZ24gPSAnY2VudGVyJztcclxuICAgICAgICBjdHgudGV4dEJhc2VsaW5lID0gJ21pZGRsZSc7XHJcblxyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBwbGF5ZXJzLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgY29uc3QgcGxheWVyID0gcGxheWVyc1tpXTtcclxuICAgICAgICAgICAgaWYocGxheWVyID09PSB1bmRlZmluZWQpIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICBjdHguZm9udCA9IGAkezEuMiAqIDE1ICogKChNYXRoLmFicyhwbGF5ZXIucmVuZGVyUmFkaXVzKSArIDAuNSkgLyAyNSl9cHggSW50ZXJgO1xyXG4gICAgICAgICAgICBjdHguZmlsbFRleHQoXHJcbiAgICAgICAgICAgICAgICBgKCR7TWF0aC5yb3VuZChwbGF5ZXIucG9zLngvNTApKjUwfSwke01hdGgucm91bmQocGxheWVyLnBvcy55LzUwKSo1MH0pYCxcclxuICAgICAgICAgICAgICAgIHBsYXllci5wb3MueCxcclxuICAgICAgICAgICAgICAgIHBsYXllci5wb3MueSAtIHBsYXllci5yZW5kZXJSYWRpdXMgKiA0LzMgLSAzICogMS41XHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGN0eC50cmFuc2xhdGUoY2FtZXJhLngtY2FudmFzLncvMiwgY2FtZXJhLnktY2FudmFzLmgvMik7XHJcblxyXG4gICAgaWYod2luZG93LnNlbGZJZCAhPT0gdW5kZWZpbmVkKXtcclxuICAgICAgICBjb25zdCBtZSA9IHBsYXllcnNbd2luZG93LnNlbGZJZF07XHJcbiAgICAgICAgaWYobWUuc2hpcCA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoY2FudmFzLncvMiwgY2FudmFzLmgvMik7XHJcbiAgICAgICAgICAgIGN0eC5yb3RhdGUobWUuc2hpcEFuZ2xlK01hdGguUEkvMik7XHJcbiAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoLWNhbnZhcy53LzIsIC1jYW52YXMuaC8yKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gdmlnbmV0dGVcclxuICAgIGNvbnN0IHYgPSB3aW5kb3cuY29sb3JzLnZpZ25ldHRlO1xyXG4gICAgZm9yKGxldCBrZXkgaW4gdi5pbm5lckludGVycCl7XHJcbiAgICAgICAgdi5pbm5lckludGVycFtrZXldID0gaW50ZXJwb2xhdGUodi5pbm5lckludGVycFtrZXldLCB2LmlubmVyW2tleV0sIDAuMDMpO1xyXG4gICAgfVxyXG4gICAgZm9yKGxldCBrZXkgaW4gdi5vdXRlckludGVycCl7XHJcbiAgICAgICAgdi5vdXRlckludGVycFtrZXldID0gaW50ZXJwb2xhdGUodi5vdXRlckludGVycFtrZXldLCB2Lm91dGVyW2tleV0sIDAuMDMpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICBjb25zdCBncmQgPSBjdHguY3JlYXRlUmFkaWFsR3JhZGllbnQoXHJcbiAgICAgICAgY2FudmFzLncgLyAyLFxyXG4gICAgICAgIGNhbnZhcy5oIC8gMixcclxuICAgICAgICAoY2FudmFzLncgKiB2LmlubmVySW50ZXJwLnNpemUpLFxyXG4gICAgICAgIGNhbnZhcy53IC8gMixcclxuICAgICAgICBjYW52YXMuaCAvIDIsXHJcbiAgICAgICAgKGNhbnZhcy53ICogdi5vdXRlckludGVycC5zaXplKVxyXG4gICAgKTtcclxuXHJcbiAgICBncmQuYWRkQ29sb3JTdG9wKFxyXG4gICAgICAgIDAsXHJcbiAgICAgICAgYHJnYmEoJHt2LmlubmVySW50ZXJwLnJ9LCR7di5pbm5lckludGVycC5nfSwke3YuaW5uZXJJbnRlcnAuYn0sJHt2LmlubmVySW50ZXJwLm9wYWNpdHl9KWBcclxuICAgICk7XHJcbiAgICBncmQuYWRkQ29sb3JTdG9wKFxyXG4gICAgICAgIDEsXHJcbiAgICAgICAgYHJnYmEoJHt2Lm91dGVySW50ZXJwLnJ9LCR7di5vdXRlckludGVycC5nfSwke3Yub3V0ZXJJbnRlcnAuYn0sJHt2Lm91dGVySW50ZXJwLm9wYWNpdHl9KWBcclxuICAgICk7XHJcbiAgICBjdHguZmlsbFN0eWxlID0gZ3JkO1xyXG4gICAgY3R4LnJlY3QoMCwwLGNhbnZhcy53LGNhbnZhcy5oKTtcclxuICAgIGlmKHYuaG9sZUZ1bmN0aW9ucy5sZW5ndGggIT09IDApe1xyXG4gICAgICAgIGlmKHdpbmRvdy5zZWxmSWQgIT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgIGNvbnN0IG1lID0gcGxheWVyc1t3aW5kb3cuc2VsZklkXTtcclxuICAgICAgICAgICAgaWYobWUuc2hpcCA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgICAgICBjdHgudHJhbnNsYXRlKGNhbnZhcy53LzIsIGNhbnZhcy5oLzIpO1xyXG4gICAgICAgICAgICAgICAgY3R4LnJvdGF0ZSgtbWUuc2hpcEFuZ2xlLU1hdGguUEkvMik7XHJcbiAgICAgICAgICAgICAgICBjdHgudHJhbnNsYXRlKC1jYW52YXMudy8yLCAtY2FudmFzLmgvMik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY3R4LnRyYW5zbGF0ZShjYW52YXMudy8yLWNhbWVyYS54LCBjYW52YXMuaC8yLWNhbWVyYS55KTtcclxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgdi5ob2xlRnVuY3Rpb25zLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgdi5ob2xlRnVuY3Rpb25zW2ldKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGN0eC50cmFuc2xhdGUoY2FtZXJhLngtY2FudmFzLncvMiwgY2FtZXJhLnktY2FudmFzLmgvMik7XHJcbiAgICAgICAgaWYod2luZG93LnNlbGZJZCAhPT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgICAgY29uc3QgbWUgPSBwbGF5ZXJzW3dpbmRvdy5zZWxmSWRdO1xyXG4gICAgICAgICAgICBpZihtZS5zaGlwID09PSB0cnVlKXtcclxuICAgICAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoY2FudmFzLncvMiwgY2FudmFzLmgvMik7XHJcbiAgICAgICAgICAgICAgICBjdHgucm90YXRlKG1lLnNoaXBBbmdsZStNYXRoLlBJLzIpO1xyXG4gICAgICAgICAgICAgICAgY3R4LnRyYW5zbGF0ZSgtY2FudmFzLncvMiwgLWNhbnZhcy5oLzIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgY3R4LmZpbGwoJ2V2ZW5vZGQnKTtcclxuICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuXHJcbiAgICB3aW5kb3cuY29sb3JzLnZpZ25ldHRlLmlubmVyID0ge3NpemU6MC4xLHI6MCxnOjAsYjowLG9wYWNpdHk6MH07XHJcbiAgICB3aW5kb3cuY29sb3JzLnZpZ25ldHRlLm91dGVyID0ge3NpemU6MC42LHI6MCxnOjAsYjowLG9wYWNpdHk6MX07XHJcbiAgICB3aW5kb3cuY29sb3JzLnZpZ25ldHRlLmhvbGVGdW5jdGlvbnMubGVuZ3RoPTA7XHJcbiAgICAvLyB3aW5kb3cuY29sb3JzID0ge1xyXG4gICAgLy8gICAgIHRpbGU6IHdpbmRvdy5kZWZhdWx0Q29sb3JzLnRpbGUsXHJcbiAgICAvLyAgICAgYmFja2dyb3VuZDogd2luZG93LmRlZmF1bHRDb2xvcnMuYmFja2dyb3VuZCxcclxuICAgIC8vICAgICB2aWduZXR0ZToge1xyXG4gICAgLy8gICAgICAgICBpbm5lcjoge3NpemU6MC4xLHI6MCxnOjAsYjowLG9wYWNpdHk6MH0sXHJcbiAgICAvLyAgICAgICAgIG91dGVyOiB7c2l6ZTowLjYscjowLGc6MCxiOjAsb3BhY2l0eToxfSxcclxuICAgIC8vICAgICAgICAgaW5uZXJJbnRlcnA6IHtzaXplOjAuMSxyOjAsZzowLGI6MCxvcGFjaXR5OjB9LFxyXG4gICAgLy8gICAgICAgICBvdXRlckludGVycDoge3NpemU6MC42LHI6MCxnOjAsYjowLG9wYWNpdHk6MX1cclxuICAgIC8vICAgICB9XHJcbiAgICAvLyB9XHJcblxyXG4gICAgaWYod2luZG93LmRpc3RvcnRpb25zQWN0aXZlID09PSB0cnVlKSB3aW5kb3cucmVuZGVyR2woKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaW50ZXJwb2xhdGUoc3RhcnQsIGVuZCwgdCl7XHJcbiAgICByZXR1cm4gKDEtdCkgKiBzdGFydCArIHQgKiBlbmQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlbmRlclRleHRTcGVjaWFscyhvLCBjb2xzKXtcclxuICAgIGxhc3RHQSA9IGN0eC5nbG9iYWxBbHBoYTtcclxuICAgIGN0eC50ZXh0QWxpZ24gPSAnY2VudGVyJztcclxuICAgIGN0eC50ZXh0QmFzZWxpbmUgPSAnbWlkZGxlJztcclxuICAgIGN0eC5mb250ID0gYCR7by5mb250U2l6ZX1weCBJbnRlcmA7XHJcbiAgICBjdHgudHJhbnNsYXRlKG8uc2F0LnBvaW50c1swXS54ICsgby5zYXQucG9zLngsIG8uc2F0LnBvaW50c1swXS55ICsgby5zYXQucG9zLnkpO1xyXG4gICAgaWYoby5yb3RhdGlvbiAhPT0gdW5kZWZpbmVkKSBjdHgucm90YXRlKG8ucm90YXRpb24pO1xyXG4gICAgaWYoY3R4Lmdsb2JhbEFscGhhIDwgMC41KSBjdHguZ2xvYmFsQWxwaGEgPSAwLjU7XHJcbiAgICBpZihjdHgudG9GaWxsID09PSB0cnVlKSBjdHguZmlsbFRleHQoby50ZXh0LCBvLmRpbWVuc2lvbnMueC8yIC0gby53T2Zmc2V0LCBvLmRpbWVuc2lvbnMueS8yIC0gby5oT2Zmc2V0KTtcclxuICAgIGlmKGN0eC50b1N0cm9rZSA9PT0gdHJ1ZSkgY3R4LnN0cm9rZVRleHQoby50ZXh0LCBvLmRpbWVuc2lvbnMueC8yIC0gby53T2Zmc2V0LCBvLmRpbWVuc2lvbnMueS8yIC0gby5oT2Zmc2V0KTtcclxuICAgIGVsc2UgaWYoY3R4LnRvRmlsbCA9PT0gZmFsc2UpIHtcclxuICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSAxO1xyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSBjb2xzLnRpbGU7XHJcbiAgICAgICAgY3R4LmZpbGxUZXh0KG8udGV4dCwgby5kaW1lbnNpb25zLngvMiAtIG8ud09mZnNldCwgby5kaW1lbnNpb25zLnkvMiAtIG8uaE9mZnNldCk7XHJcbiAgICB9XHJcbiAgICBpZihvLnJvdGF0aW9uICE9PSB1bmRlZmluZWQpIGN0eC5yb3RhdGUoLW8ucm90YXRpb24pO1xyXG4gICAgY3R4LnRyYW5zbGF0ZSgtby5zYXQucG9pbnRzWzBdLnggLSBvLnNhdC5wb3MueCwgLW8uc2F0LnBvaW50c1swXS55IC0gby5zYXQucG9zLnkpO1xyXG4gICAgY3R4Lmdsb2JhbEFscGhhID0gTWF0aC5taW4oMC41LCBsYXN0R0EpO1xyXG59XHJcblxyXG4vLyBjYW52YXMgcmVzaXppbmdcclxud2luZG93LnJlc2l6ZUZucyA9IFtdO1xyXG5jb25zdCBndWkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZ3VpJyk7XHJcbmZ1bmN0aW9uIHJlc2l6ZSgpe1xyXG4gICAgd2luZG93LmNoYW5nZUNhbWVyYVNjYWxlKDEpO1xyXG4gICAgY29uc3QgZHBpID0gd2luZG93LmRldmljZVBpeGVsUmF0aW87XHJcbiAgICBndWkuc3R5bGUud2lkdGggPSBjYW52YXMuc3R5bGUud2lkdGggPSBNYXRoLmNlaWwod2luZG93LmlubmVyV2lkdGgpICsgJ3B4JztcclxuICAgIGd1aS5zdHlsZS5oZWlnaHQgPSBjYW52YXMuc3R5bGUuaGVpZ2h0ID0gTWF0aC5jZWlsKHdpbmRvdy5pbm5lckhlaWdodCkgKyAncHgnO1xyXG4gICAgZ3VpLndpZHRoID0gY2FudmFzLndpZHRoID0gTWF0aC5jZWlsKHdpbmRvdy5pbm5lcldpZHRoKSAqIGRwaTtcclxuICAgIGd1aS5oZWlnaHQgPSBjYW52YXMuaGVpZ2h0ID0gTWF0aC5jZWlsKHdpbmRvdy5pbm5lckhlaWdodCkgKiBkcGk7XHJcbiAgICBjYW52YXMuem9vbSA9IE1hdGgubWF4KDAuMSwgTWF0aC5yb3VuZCgoTWF0aC5tYXgoY2FudmFzLmhlaWdodCwgY2FudmFzLndpZHRoICogZnVsbHNjcmVlbi5yYXRpbykgLyBmdWxsc2NyZWVuLnpvb20gKiBjYW1lcmEuc2NhbGUpICogMTAwKSAvIDEwMCk7XHJcbiAgICAvLyB3IGFuZCBoIGFyZSBjYWxjZWQgd2l0aCB6b29tXHJcbiAgICBjYW52YXMudyA9IGNhbnZhcy53aWR0aCAvIGNhbnZhcy56b29tO1xyXG4gICAgY2FudmFzLmggPSBjYW52YXMuaGVpZ2h0IC8gY2FudmFzLnpvb207XHJcbiAgICBjdHguc2NhbGUoY2FudmFzLnpvb20sIGNhbnZhcy56b29tKTtcclxuICAgIGN0eC5saW5lSm9pbiA9ICdyb3VuZCc7XHJcbiAgICBjdHgubGluZUNhcCA9ICdyb3VuZCc7XHJcblxyXG4gICAgZm9yKGxldCBpID0gMDsgaSA8IHdpbmRvdy5yZXNpemVGbnMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgIHdpbmRvdy5yZXNpemVGbnNbaV0oKTtcclxuICAgIH1cclxufVxyXG5cclxud2luZG93LmNoYW5nZUNhbWVyYVNjYWxlID0gKHNjYWxlKSA9PiB7XHJcbiAgICBjdHgudHJhbnNsYXRlKC0oMS0xL3dpbmRvdy5jYW1lcmEuc2NhbGUpKmNhbnZhcy53LzIsIC0oMS0xL3dpbmRvdy5jYW1lcmEuc2NhbGUpKmNhbnZhcy5oLzIpO1xyXG5cclxuICAgIGN0eC50cmFuc2xhdGUoY2FudmFzLncvMiwgY2FudmFzLmgvMik7XHJcbiAgICBjdHguc2NhbGUoMS93aW5kb3cuY2FtZXJhLnNjYWxlLCAxL3dpbmRvdy5jYW1lcmEuc2NhbGUpO1xyXG4gICAgY3R4LnRyYW5zbGF0ZSgtY2FudmFzLncvMiwgLWNhbnZhcy5oLzIpO1xyXG5cclxuICAgIHdpbmRvdy5jYW1lcmEuc2NhbGUgPSBzY2FsZTtcclxuICAgIGNhbnZhcy53ID0gY2FudmFzLndpZHRoIC8gY2FudmFzLnpvb20gLyB3aW5kb3cuY2FtZXJhLnNjYWxlO1xyXG4gICAgY2FudmFzLmggPSBjYW52YXMuaGVpZ2h0IC8gY2FudmFzLnpvb20gLyB3aW5kb3cuY2FtZXJhLnNjYWxlO1xyXG5cclxuICAgIGN0eC50cmFuc2xhdGUoY2FudmFzLncvMiwgY2FudmFzLmgvMik7XHJcbiAgICBjdHguc2NhbGUod2luZG93LmNhbWVyYS5zY2FsZSwgd2luZG93LmNhbWVyYS5zY2FsZSk7XHJcbiAgICBjdHgudHJhbnNsYXRlKC1jYW52YXMudy8yLCAtY2FudmFzLmgvMik7XHJcbiAgICBcclxuICAgIGN0eC50cmFuc2xhdGUoKDEtMS93aW5kb3cuY2FtZXJhLnNjYWxlKSpjYW52YXMudy8yLCAoMS0xL3dpbmRvdy5jYW1lcmEuc2NhbGUpKmNhbnZhcy5oLzIpO1xyXG59XHJcbiAgXHJcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXNpemUoKTtcclxufSk7XHJcbnJlc2l6ZSgpO1xyXG5cclxuLy8gaWYgdGhlcmUncyBldmVyIG1vcmUgZXh0cmFzLCBtYWtlIGFuIGFycmF5IHN5c3RlbVxyXG5sZXQgbm9uTGluZWFyRm5zO1xyXG53aW5kb3cuaW5pdERpc3RvcnRpb24gPSBhc3luYyAodnMsIGZzLCB1bmlmb3JtTmFtZXM9W10sIHVuaWZvcm1MYW1iZGFzPVtdKSA9PiB7XHJcbiAgICBpZihub25MaW5lYXJGbnMgPT09IHVuZGVmaW5lZCkgbm9uTGluZWFyRm5zID0gKGF3YWl0IGltcG9ydCgnLi9leHRyYXMvZGlzdG9ydC5qcycpKS5kZWZhdWx0O1xyXG4gICAgbm9uTGluZWFyRm5zLmluaXROb25saW5lYXJUcmFuc2Zvcm0odnMsIGZzLCB1bmlmb3JtTmFtZXMsIHVuaWZvcm1MYW1iZGFzKTtcclxufVxyXG5cclxud2luZG93LnVuSW5pdERpc3RvcnRpb24gPSAoKSA9PiB7XHJcbiAgICAvLyBjYW4ndCBiZSBhY3RpdmUgaWYgbm90IGxvYWRlZFxyXG4gICAgaWYobm9uTGluZWFyRm5zID09PSB1bmRlZmluZWQpIHJldHVybjtcclxuICAgIG5vbkxpbmVhckZucy51bkluaXROb25saW5lYXJUcmFuc2Zvcm0oKTtcclxufVxyXG5cclxubGV0IG5vaXNlRm5zO1xyXG53aW5kb3cuaW1wb3J0Tm9pc2UgPSBhc3luYygpID0+IHtcclxuICAgIGlmKG5vaXNlRm5zICE9PSB1bmRlZmluZWQpIHJldHVybiBub2lzZUZucztcclxuICAgIHJldHVybiBub2lzZUZucyA9IChhd2FpdCBpbXBvcnQoJy4vZXh0cmFzL25vaXNlLmpzJykpLmRlZmF1bHQ7XHJcbn1cclxuXHJcbmxldCBpbXBvcnRlZFlUID0gZmFsc2U7XHJcbndpbmRvdy5pbXBvcnRZb3V0dWJlID0gYXN5bmMoKSA9PiB7XHJcbiAgICBpZihpbXBvcnRlZFlUID09PSB0cnVlKSByZXR1cm47XHJcbiAgICBjb25zdCBwMSA9IGltcG9ydCgnLi9leHRyYXMveW91dHViZS5qcycpO1xyXG4gICAgY29uc3QgcDIgPSBuZXcgUHJvbWlzZSgocmVzKSA9PiB7XHJcbiAgICAgICAgY29uc3QgcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xyXG4gICAgICAgIHMuc3JjID0gXCJodHRwczovL3d3dy55b3V0dWJlLmNvbS9pZnJhbWVfYXBpXCI7XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzKTtcclxuXHJcbiAgICAgICAgd2luZG93Lm9uWW91VHViZUlmcmFtZUFQSVJlYWR5ID0gKCkgPT4ge1xyXG4gICAgICAgICAgICByZXMoKTtcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG5cclxuICAgIGltcG9ydGVkWVQgPSB0cnVlO1xyXG5cclxuICAgIHJldHVybiBQcm9taXNlLmFsbChbcDEsIHAyXSk7XHJcbn1cclxuXHJcbndpbmRvdy51blRhaW50Q2FudmFzID0gKCkgPT4ge1xyXG4gICAgY29uc3QgdHJhbnNmb3JtID0gY3R4LmdldFRyYW5zZm9ybSgpO1xyXG5cclxuICAgIGNvbnN0IG5ld0NhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xyXG5cclxuICAgIGRvY3VtZW50LmJvZHkuaW5zZXJ0QmVmb3JlKG5ld0NhbnZhcywgY2FudmFzKTtcclxuXHJcbiAgICBjYW52YXMucmVtb3ZlKCk7XHJcblxyXG4gICAgY2FudmFzID0gd2luZG93LmNhbnZhcyA9IG5ld0NhbnZhcztcclxuICAgIGN0eCA9IHdpbmRvdy5jdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcclxuICAgIHJlc2l6ZSgpO1xyXG5cclxuICAgIGN0eC5zZXRUcmFuc2Zvcm0odHJhbnNmb3JtKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcmVuZGVyOyIsIiFmdW5jdGlvbihlLHQpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlP3QoZXhwb3J0cyk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbXCJleHBvcnRzXCJdLHQpOnQoKGU9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGdsb2JhbFRoaXM/Z2xvYmFsVGhpczplfHxzZWxmKS5tc2dwYWNrcj17fSl9KHRoaXMsZnVuY3Rpb24oZSl7XCJ1c2Ugc3RyaWN0XCI7dHJ5eyQ9bmV3IFRleHREZWNvZGVyfWNhdGNoKHQpe312YXIgJCxyLG4saSxzLGYsdSxsLG8sYT0wLGM9e30seD0wLGQ9MCxoPVtdLF89e3VzZVJlY29yZHM6ITEsbWFwc0FzT2JqZWN0czohMH07Y2xhc3MgcHt9bGV0IGc9bmV3IHA7Zy5uYW1lPVwiTWVzc2FnZVBhY2sgMHhDMVwiO3ZhciB5PSExLGI9Mjt0cnl7RnVuY3Rpb24oXCJcIil9Y2F0Y2godyl7Yj0xLzB9Y2xhc3MgbXtjb25zdHJ1Y3RvcihlKXtlJiYoITE9PT1lLnVzZVJlY29yZHMmJnZvaWQgMD09PWUubWFwc0FzT2JqZWN0cyYmKGUubWFwc0FzT2JqZWN0cz0hMCksIWUuc2VxdWVudGlhbHx8ITE9PT1lLnRydXN0ZWR8fChlLnRydXN0ZWQ9ITAsZS5zdHJ1Y3R1cmVzfHwhMT09ZS51c2VSZWNvcmRzfHwoZS5zdHJ1Y3R1cmVzPVtdLGUubWF4U2hhcmVkU3RydWN0dXJlc3x8KGUubWF4U2hhcmVkU3RydWN0dXJlcz0wKSkpLGUuc3RydWN0dXJlcz9lLnN0cnVjdHVyZXMuc2hhcmVkTGVuZ3RoPWUuc3RydWN0dXJlcy5sZW5ndGg6ZS5nZXRTdHJ1Y3R1cmVzJiYoKGUuc3RydWN0dXJlcz1bXSkudW5pbml0aWFsaXplZD0hMCxlLnN0cnVjdHVyZXMuc2hhcmVkTGVuZ3RoPTApLGUuaW50NjRBc051bWJlciYmKGUuaW50NjRBc1R5cGU9XCJudW1iZXJcIikpLE9iamVjdC5hc3NpZ24odGhpcyxlKX11bnBhY2soZSx0KXtpZihyKXJldHVybiBHKCgpPT4oSCgpLHRoaXM/dGhpcy51bnBhY2soZSx0KTptLnByb3RvdHlwZS51bnBhY2suY2FsbChfLGUsdCkpKTtlLmJ1ZmZlcnx8ZS5jb25zdHJ1Y3RvciE9PUFycmF5QnVmZmVyfHwoZT1cInVuZGVmaW5lZFwiIT10eXBlb2YgQnVmZmVyP0J1ZmZlci5mcm9tKGUpOm5ldyBVaW50OEFycmF5KGUpKSxcIm9iamVjdFwiPT10eXBlb2YgdD8obj10LmVuZHx8ZS5sZW5ndGgsYT10LnN0YXJ0fHwwKTooYT0wLG49dD4tMT90OmUubGVuZ3RoKSxkPTAscz1udWxsLGY9bnVsbCxyPWU7dHJ5e2w9ZS5kYXRhVmlld3x8KGUuZGF0YVZpZXc9bmV3IERhdGFWaWV3KGUuYnVmZmVyLGUuYnl0ZU9mZnNldCxlLmJ5dGVMZW5ndGgpKX1jYXRjaCgkKXtpZihyPW51bGwsZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpdGhyb3cgJDt0aHJvdyBFcnJvcihcIlNvdXJjZSBtdXN0IGJlIGEgVWludDhBcnJheSBvciBCdWZmZXIgYnV0IHdhcyBhIFwiKyhlJiZcIm9iamVjdFwiPT10eXBlb2YgZT9lLmNvbnN0cnVjdG9yLm5hbWU6dHlwZW9mIGUpKX1yZXR1cm4gdGhpcyBpbnN0YW5jZW9mIG0/KGM9dGhpcyx0aGlzLnN0cnVjdHVyZXM/aT10aGlzLnN0cnVjdHVyZXM6KCFpfHxpLmxlbmd0aD4wKSYmKGk9W10pKTooYz1fLCghaXx8aS5sZW5ndGg+MCkmJihpPVtdKSksUyh0KX11bnBhY2tNdWx0aXBsZShlLHQpe2xldCAkLHI9MDt0cnl7eT0hMDtsZXQgbj1lLmxlbmd0aCxpPXRoaXM/dGhpcy51bnBhY2soZSxuKTplZS51bnBhY2soZSxuKTtpZih0KXtpZighMT09PXQoaSxyLGEpKXJldHVybjtmb3IoO2E8bjspaWYocj1hLCExPT09dChTKCkscixhKSlyZXR1cm59ZWxzZXtmb3IoJD1baV07YTxuOylyPWEsJC5wdXNoKFMoKSk7cmV0dXJuICR9fWNhdGNoKHMpe3Rocm93IHMubGFzdFBvc2l0aW9uPXIscy52YWx1ZXM9JCxzfWZpbmFsbHl7eT0hMSxIKCl9fV9tZXJnZVN0cnVjdHVyZXMoZSx0KXtPYmplY3QuaXNGcm96ZW4oZT1lfHxbXSkmJihlPWUubWFwKGU9PmUuc2xpY2UoMCkpKTtmb3IobGV0ICQ9MCxyPWUubGVuZ3RoOyQ8cjskKyspe2xldCBuPWVbJF07biYmKG4uaXNTaGFyZWQ9ITAsJD49MzImJihuLmhpZ2hCeXRlPSQtMzI+PjUpKX1mb3IobGV0IGkgaW4gZS5zaGFyZWRMZW5ndGg9ZS5sZW5ndGgsdHx8W10paWYoaT49MCl7bGV0IHM9ZVtpXSxmPXRbaV07ZiYmKHMmJigoZS5yZXN0b3JlU3RydWN0dXJlc3x8KGUucmVzdG9yZVN0cnVjdHVyZXM9W10pKVtpXT1zKSxlW2ldPWYpfXJldHVybiB0aGlzLnN0cnVjdHVyZXM9ZX1kZWNvZGUoZSx0KXtyZXR1cm4gdGhpcy51bnBhY2soZSx0KX19ZnVuY3Rpb24gUyhlKXt0cnl7aWYoIWMudHJ1c3RlZCYmIXkpe2xldCB0PWkuc2hhcmVkTGVuZ3RofHwwO3Q8aS5sZW5ndGgmJihpLmxlbmd0aD10KX1sZXQgJDtpZihjLnJhbmRvbUFjY2Vzc1N0cnVjdHVyZSYmclthXTw2NCYmclthXT49MzImJm8/KCQ9byhyLGEsbixjKSxyPW51bGwsIShlJiZlLmxhenkpJiYkJiYoJD0kLnRvSlNPTigpKSxhPW4pOiQ9aygpLGYmJihhPWYucG9zdEJ1bmRsZVBvc2l0aW9uLGY9bnVsbCkseSYmKGkucmVzdG9yZVN0cnVjdHVyZXM9bnVsbCksYT09bilpJiZpLnJlc3RvcmVTdHJ1Y3R1cmVzJiZVKCksaT1udWxsLHI9bnVsbCx1JiYodT1udWxsKTtlbHNlIGlmKGE+bil0aHJvdyBFcnJvcihcIlVuZXhwZWN0ZWQgZW5kIG9mIE1lc3NhZ2VQYWNrIGRhdGFcIik7ZWxzZSBpZigheSl7bGV0IHM7dHJ5e3M9SlNPTi5zdHJpbmdpZnkoJCwoZSx0KT0+XCJiaWdpbnRcIj09dHlwZW9mIHQ/YCR7dH1uYDp0KS5zbGljZSgwLDEwMCl9Y2F0Y2gobCl7cz1cIihKU09OIHZpZXcgbm90IGF2YWlsYWJsZSBcIitsK1wiKVwifXRocm93IEVycm9yKFwiRGF0YSByZWFkLCBidXQgZW5kIG9mIGJ1ZmZlciBub3QgcmVhY2hlZCBcIitzKX1yZXR1cm4gJH1jYXRjaCh4KXt0aHJvdyBpJiZpLnJlc3RvcmVTdHJ1Y3R1cmVzJiZVKCksSCgpLCh4IGluc3RhbmNlb2YgUmFuZ2VFcnJvcnx8eC5tZXNzYWdlLnN0YXJ0c1dpdGgoXCJVbmV4cGVjdGVkIGVuZCBvZiBidWZmZXJcIil8fGE+bikmJih4LmluY29tcGxldGU9ITApLHh9fWZ1bmN0aW9uIFUoKXtmb3IobGV0IGUgaW4gaS5yZXN0b3JlU3RydWN0dXJlcylpW2VdPWkucmVzdG9yZVN0cnVjdHVyZXNbZV07aS5yZXN0b3JlU3RydWN0dXJlcz1udWxsfWZ1bmN0aW9uIGsoKXtsZXQgZT1yW2ErK107aWYoZTwxNjApe2lmKGU8MTI4KXtpZihlPDY0KXJldHVybiBlO3tsZXQgdD1pWzYzJmVdfHxjLmdldFN0cnVjdHVyZXMmJk8oKVs2MyZlXTtyZXR1cm4gdD8odC5yZWFkfHwodC5yZWFkPUEodCw2MyZlKSksdC5yZWFkKCkpOmV9fWlmKGU8MTQ0KXtpZihlLT0xMjgsYy5tYXBzQXNPYmplY3RzKXtsZXQgJD17fTtmb3IobGV0IHU9MDt1PGU7dSsrKXtsZXQgbz1XKCk7XCJfX3Byb3RvX19cIj09PW8mJihvPVwiX19wcm90b19cIiksJFtvXT1rKCl9cmV0dXJuICR9e2xldCBfPW5ldyBNYXA7Zm9yKGxldCBwPTA7cDxlO3ArKylfLnNldChrKCksaygpKTtyZXR1cm4gX319e2xldCB5PUFycmF5KGUtPTE0NCk7Zm9yKGxldCBiPTA7YjxlO2IrKyl5W2JdPWsoKTtyZXR1cm4gYy5mcmVlemVEYXRhP09iamVjdC5mcmVlemUoeSk6eX19aWYoZTwxOTIpe2xldCB3PWUtMTYwO2lmKGQ+PWEpcmV0dXJuIHMuc2xpY2UoYS14LChhKz13KS14KTtpZigwPT1kJiZuPDE0MCl7bGV0IG09dzwxNj9DKHcpOlIodyk7aWYobnVsbCE9bSlyZXR1cm4gbX1yZXR1cm4gVCh3KX17bGV0IFM7c3dpdGNoKGUpe2Nhc2UgMTkyOnJldHVybiBudWxsO2Nhc2UgMTkzOmlmKGYpe2lmKChTPWsoKSk+MClyZXR1cm4gZlsxXS5zbGljZShmLnBvc2l0aW9uMSxmLnBvc2l0aW9uMSs9Uyk7cmV0dXJuIGZbMF0uc2xpY2UoZi5wb3NpdGlvbjAsZi5wb3NpdGlvbjAtPVMpfXJldHVybiBnO2Nhc2UgMTk0OnJldHVybiExO2Nhc2UgMTk1OnJldHVybiEwO2Nhc2UgMTk2OmlmKHZvaWQgMD09PShTPXJbYSsrXSkpdGhyb3cgRXJyb3IoXCJVbmV4cGVjdGVkIGVuZCBvZiBidWZmZXJcIik7cmV0dXJuIE4oUyk7Y2FzZSAxOTc6cmV0dXJuIFM9bC5nZXRVaW50MTYoYSksYSs9MixOKFMpO2Nhc2UgMTk4OnJldHVybiBTPWwuZ2V0VWludDMyKGEpLGErPTQsTihTKTtjYXNlIDE5OTpyZXR1cm4gRChyW2ErK10pO2Nhc2UgMjAwOnJldHVybiBTPWwuZ2V0VWludDE2KGEpLGErPTIsRChTKTtjYXNlIDIwMTpyZXR1cm4gUz1sLmdldFVpbnQzMihhKSxhKz00LEQoUyk7Y2FzZSAyMDI6aWYoUz1sLmdldEZsb2F0MzIoYSksYy51c2VGbG9hdDMyPjIpe2xldCBVPVFbKDEyNyZyW2FdKTw8MXxyW2ErMV0+PjddO3JldHVybiBhKz00LChVKlMrKFM+MD8uNTotLjUpPj4wKS9VfXJldHVybiBhKz00LFM7Y2FzZSAyMDM6cmV0dXJuIFM9bC5nZXRGbG9hdDY0KGEpLGErPTgsUztjYXNlIDIwNDpyZXR1cm4gclthKytdO2Nhc2UgMjA1OnJldHVybiBTPWwuZ2V0VWludDE2KGEpLGErPTIsUztjYXNlIDIwNjpyZXR1cm4gUz1sLmdldFVpbnQzMihhKSxhKz00LFM7Y2FzZSAyMDc6cmV0dXJuXCJudW1iZXJcIj09PWMuaW50NjRBc1R5cGU/KFM9NDI5NDk2NzI5NipsLmdldFVpbnQzMihhKSxTKz1sLmdldFVpbnQzMihhKzQpKTpcInN0cmluZ1wiPT09Yy5pbnQ2NEFzVHlwZT9TPWwuZ2V0QmlnVWludDY0KGEpLnRvU3RyaW5nKCk6XCJhdXRvXCI9PT1jLmludDY0QXNUeXBlPyhTPWwuZ2V0QmlnVWludDY0KGEpKTw9QmlnSW50KDIpPDxCaWdJbnQoNTIpJiYoUz1OdW1iZXIoUykpOlM9bC5nZXRCaWdVaW50NjQoYSksYSs9OCxTO2Nhc2UgMjA4OnJldHVybiBsLmdldEludDgoYSsrKTtjYXNlIDIwOTpyZXR1cm4gUz1sLmdldEludDE2KGEpLGErPTIsUztjYXNlIDIxMDpyZXR1cm4gUz1sLmdldEludDMyKGEpLGErPTQsUztjYXNlIDIxMTpyZXR1cm5cIm51bWJlclwiPT09Yy5pbnQ2NEFzVHlwZT8oUz00Mjk0OTY3Mjk2KmwuZ2V0SW50MzIoYSksUys9bC5nZXRVaW50MzIoYSs0KSk6XCJzdHJpbmdcIj09PWMuaW50NjRBc1R5cGU/Uz1sLmdldEJpZ0ludDY0KGEpLnRvU3RyaW5nKCk6XCJhdXRvXCI9PT1jLmludDY0QXNUeXBlPyhTPWwuZ2V0QmlnSW50NjQoYSkpPj1CaWdJbnQoLTIpPDxCaWdJbnQoNTIpJiZTPD1CaWdJbnQoMik8PEJpZ0ludCg1MikmJihTPU51bWJlcihTKSk6Uz1sLmdldEJpZ0ludDY0KGEpLGErPTgsUztjYXNlIDIxMjppZigxMTQ9PShTPXJbYSsrXSkpcmV0dXJuIEooNjMmclthKytdKTt7bGV0IEk9aFtTXTtpZihJKXtpZihJLnJlYWQpcmV0dXJuIGErKyxJLnJlYWQoaygpKTtpZihJLm5vQnVmZmVyKXJldHVybiBhKyssSSgpO3JldHVybiBJKHIuc3ViYXJyYXkoYSwrK2EpKX10aHJvdyBFcnJvcihcIlVua25vd24gZXh0ZW5zaW9uIFwiK1MpfWNhc2UgMjEzOmlmKDExND09KFM9clthXSkpcmV0dXJuIGErKyxKKDYzJnJbYSsrXSxyW2ErK10pO3JldHVybiBEKDIpO2Nhc2UgMjE0OnJldHVybiBEKDQpO2Nhc2UgMjE1OnJldHVybiBEKDgpO2Nhc2UgMjE2OnJldHVybiBEKDE2KTtjYXNlIDIxNzppZihTPXJbYSsrXSxkPj1hKXJldHVybiBzLnNsaWNlKGEteCwoYSs9UykteCk7cmV0dXJuIEIoUyk7Y2FzZSAyMTg6aWYoUz1sLmdldFVpbnQxNihhKSxkPj0oYSs9MikpcmV0dXJuIHMuc2xpY2UoYS14LChhKz1TKS14KTtyZXR1cm4gTChTKTtjYXNlIDIxOTppZihTPWwuZ2V0VWludDMyKGEpLGQ+PShhKz00KSlyZXR1cm4gcy5zbGljZShhLXgsKGErPVMpLXgpO3JldHVybiBGKFMpO2Nhc2UgMjIwOnJldHVybiBTPWwuZ2V0VWludDE2KGEpLGErPTIseihTKTtjYXNlIDIyMTpyZXR1cm4gUz1sLmdldFVpbnQzMihhKSxhKz00LHooUyk7Y2FzZSAyMjI6cmV0dXJuIFM9bC5nZXRVaW50MTYoYSksYSs9MixFKFMpO2Nhc2UgMjIzOnJldHVybiBTPWwuZ2V0VWludDMyKGEpLGErPTQsRShTKTtkZWZhdWx0OmlmKGU+PTIyNClyZXR1cm4gZS0yNTY7aWYodm9pZCAwPT09ZSl7bGV0IHY9RXJyb3IoXCJVbmV4cGVjdGVkIGVuZCBvZiBNZXNzYWdlUGFjayBkYXRhXCIpO3Rocm93IHYuaW5jb21wbGV0ZT0hMCx2fXRocm93IEVycm9yKFwiVW5rbm93biBNZXNzYWdlUGFjayB0b2tlbiBcIitlKX19fWxldCBJPS9eW2EtekEtWl8kXVthLXpBLVpcXGRfJF0qJC87ZnVuY3Rpb24gQShlLHQpe2Z1bmN0aW9uICQoKXtpZigkLmNvdW50Kys+Yil7bGV0IHI9ZS5yZWFkPUZ1bmN0aW9uKFwiclwiLFwicmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIFwiKyhjLmZyZWV6ZURhdGE/XCJPYmplY3QuZnJlZXplXCI6XCJcIikrXCIoe1wiK2UubWFwKGU9PlwiX19wcm90b19fXCI9PT1lP1wiX19wcm90b186cigpXCI6SS50ZXN0KGUpP2UrXCI6cigpXCI6XCJbXCIrSlNPTi5zdHJpbmdpZnkoZSkrXCJdOnIoKVwiKS5qb2luKFwiLFwiKStcIn0pfVwiKShrKTtyZXR1cm4gMD09PWUuaGlnaEJ5dGUmJihlLnJlYWQ9dih0LGUucmVhZCkpLHIoKX1sZXQgbj17fTtmb3IobGV0IGk9MCxzPWUubGVuZ3RoO2k8cztpKyspe2xldCBmPWVbaV07XCJfX3Byb3RvX19cIj09PWYmJihmPVwiX19wcm90b19cIiksbltmXT1rKCl9cmV0dXJuIGMuZnJlZXplRGF0YT9PYmplY3QuZnJlZXplKG4pOm59cmV0dXJuKCQuY291bnQ9MCwwPT09ZS5oaWdoQnl0ZSk/dih0LCQpOiR9bGV0IHY9KGUsdCk9PmZ1bmN0aW9uKCl7bGV0ICQ9clthKytdO2lmKDA9PT0kKXJldHVybiB0KCk7bGV0IG49ZTwzMj8tKGUrKCQ8PDUpKTplKygkPDw1KSxzPWlbbl18fE8oKVtuXTtpZighcyl0aHJvdyBFcnJvcihcIlJlY29yZCBpZCBpcyBub3QgZGVmaW5lZCBmb3IgXCIrbik7cmV0dXJuIHMucmVhZHx8KHMucmVhZD1BKHMsZSkpLHMucmVhZCgpfTtmdW5jdGlvbiBPKCl7bGV0IGU9RygoKT0+KHI9bnVsbCxjLmdldFN0cnVjdHVyZXMoKSkpO3JldHVybiBpPWMuX21lcmdlU3RydWN0dXJlcyhlLGkpfXZhciBUPVAsQj1QLEw9UCxGPVA7ZnVuY3Rpb24gUChlKXtsZXQgdDtpZihlPDE2JiYodD1DKGUpKSlyZXR1cm4gdDtpZihlPjY0JiYkKXJldHVybiAkLmRlY29kZShyLnN1YmFycmF5KGEsYSs9ZSkpO2xldCBuPWErZSxpPVtdO2Zvcih0PVwiXCI7YTxuOyl7bGV0IHM9clthKytdO2lmKCgxMjgmcyk9PTApaS5wdXNoKHMpO2Vsc2UgaWYoKDIyNCZzKT09MTkyKXtsZXQgZj02MyZyW2ErK107aS5wdXNoKCgzMSZzKTw8NnxmKX1lbHNlIGlmKCgyNDAmcyk9PTIyNCl7bGV0IHU9NjMmclthKytdLGw9NjMmclthKytdO2kucHVzaCgoMzEmcyk8PDEyfHU8PDZ8bCl9ZWxzZSBpZigoMjQ4JnMpPT0yNDApe2xldCBvPTYzJnJbYSsrXSxjPTYzJnJbYSsrXSx4PTYzJnJbYSsrXSxkPSg3JnMpPDwxOHxvPDwxMnxjPDw2fHg7ZD42NTUzNSYmKGQtPTY1NTM2LGkucHVzaChkPj4+MTAmMTAyM3w1NTI5NiksZD01NjMyMHwxMDIzJmQpLGkucHVzaChkKX1lbHNlIGkucHVzaChzKTtpLmxlbmd0aD49NDA5NiYmKHQrPU0uYXBwbHkoU3RyaW5nLGkpLGkubGVuZ3RoPTApfXJldHVybiBpLmxlbmd0aD4wJiYodCs9TS5hcHBseShTdHJpbmcsaSkpLHR9ZnVuY3Rpb24geihlKXtsZXQgdD1BcnJheShlKTtmb3IobGV0ICQ9MDskPGU7JCsrKXRbJF09aygpO3JldHVybiBjLmZyZWV6ZURhdGE/T2JqZWN0LmZyZWV6ZSh0KTp0fWZ1bmN0aW9uIEUoZSl7aWYoYy5tYXBzQXNPYmplY3RzKXtsZXQgdD17fTtmb3IobGV0ICQ9MDskPGU7JCsrKXtsZXQgcj1XKCk7XCJfX3Byb3RvX19cIj09PXImJihyPVwiX19wcm90b19cIiksdFtyXT1rKCl9cmV0dXJuIHR9e2xldCBuPW5ldyBNYXA7Zm9yKGxldCBpPTA7aTxlO2krKyluLnNldChrKCksaygpKTtyZXR1cm4gbn19dmFyIE09U3RyaW5nLmZyb21DaGFyQ29kZTtmdW5jdGlvbiBSKGUpe2xldCB0PWEsJD1BcnJheShlKTtmb3IobGV0IG49MDtuPGU7bisrKXtsZXQgaT1yW2ErK107aWYoKDEyOCZpKT4wKXthPXQ7cmV0dXJufSRbbl09aX1yZXR1cm4gTS5hcHBseShTdHJpbmcsJCl9ZnVuY3Rpb24gQyhlKXtpZihlPDQpe2lmKGU8Mil7aWYoMD09PWUpcmV0dXJuXCJcIjt7bGV0IHQ9clthKytdO2lmKCgxMjgmdCk+MSl7YS09MTtyZXR1cm59cmV0dXJuIE0odCl9fXtsZXQgJD1yW2ErK10sbj1yW2ErK107aWYoKDEyOCYkKT4wfHwoMTI4Jm4pPjApe2EtPTI7cmV0dXJufWlmKGU8MylyZXR1cm4gTSgkLG4pO2xldCBpPXJbYSsrXTtpZigoMTI4JmkpPjApe2EtPTM7cmV0dXJufXJldHVybiBNKCQsbixpKX19e2xldCBzPXJbYSsrXSxmPXJbYSsrXSx1PXJbYSsrXSxsPXJbYSsrXTtpZigoMTI4JnMpPjB8fCgxMjgmZik+MHx8KDEyOCZ1KT4wfHwoMTI4JmwpPjApe2EtPTQ7cmV0dXJufWlmKGU8Nil7aWYoND09PWUpcmV0dXJuIE0ocyxmLHUsbCk7e2xldCBvPXJbYSsrXTtpZigoMTI4Jm8pPjApe2EtPTU7cmV0dXJufXJldHVybiBNKHMsZix1LGwsbyl9fWlmKGU8OCl7bGV0IGM9clthKytdLHg9clthKytdO2lmKCgxMjgmYyk+MHx8KDEyOCZ4KT4wKXthLT02O3JldHVybn1pZihlPDcpcmV0dXJuIE0ocyxmLHUsbCxjLHgpO2xldCBkPXJbYSsrXTtpZigoMTI4JmQpPjApe2EtPTc7cmV0dXJufXJldHVybiBNKHMsZix1LGwsYyx4LGQpfXtsZXQgaD1yW2ErK10sXz1yW2ErK10scD1yW2ErK10sZz1yW2ErK107aWYoKDEyOCZoKT4wfHwoMTI4Jl8pPjB8fCgxMjgmcCk+MHx8KDEyOCZnKT4wKXthLT04O3JldHVybn1pZihlPDEwKXtpZig4PT09ZSlyZXR1cm4gTShzLGYsdSxsLGgsXyxwLGcpO3tsZXQgeT1yW2ErK107aWYoKDEyOCZ5KT4wKXthLT05O3JldHVybn1yZXR1cm4gTShzLGYsdSxsLGgsXyxwLGcseSl9fWlmKGU8MTIpe2xldCBiPXJbYSsrXSx3PXJbYSsrXTtpZigoMTI4JmIpPjB8fCgxMjgmdyk+MCl7YS09MTA7cmV0dXJufWlmKGU8MTEpcmV0dXJuIE0ocyxmLHUsbCxoLF8scCxnLGIsdyk7bGV0IG09clthKytdO2lmKCgxMjgmbSk+MCl7YS09MTE7cmV0dXJufXJldHVybiBNKHMsZix1LGwsaCxfLHAsZyxiLHcsbSl9e2xldCBTPXJbYSsrXSxVPXJbYSsrXSxrPXJbYSsrXSxJPXJbYSsrXTtpZigoMTI4JlMpPjB8fCgxMjgmVSk+MHx8KDEyOCZrKT4wfHwoMTI4JkkpPjApe2EtPTEyO3JldHVybn1pZihlPDE0KXtpZigxMj09PWUpcmV0dXJuIE0ocyxmLHUsbCxoLF8scCxnLFMsVSxrLEkpO3tsZXQgQT1yW2ErK107aWYoKDEyOCZBKT4wKXthLT0xMztyZXR1cm59cmV0dXJuIE0ocyxmLHUsbCxoLF8scCxnLFMsVSxrLEksQSl9fXtsZXQgdj1yW2ErK10sTz1yW2ErK107aWYoKDEyOCZ2KT4wfHwoMTI4Jk8pPjApe2EtPTE0O3JldHVybn1pZihlPDE1KXJldHVybiBNKHMsZix1LGwsaCxfLHAsZyxTLFUsayxJLHYsTyk7bGV0IFQ9clthKytdO2lmKCgxMjgmVCk+MCl7YS09MTU7cmV0dXJufXJldHVybiBNKHMsZix1LGwsaCxfLHAsZyxTLFUsayxJLHYsTyxUKX19fX19ZnVuY3Rpb24gaigpe2xldCBlPXJbYSsrXSx0O2lmKGU8MTkyKXQ9ZS0xNjA7ZWxzZSBzd2l0Y2goZSl7Y2FzZSAyMTc6dD1yW2ErK107YnJlYWs7Y2FzZSAyMTg6dD1sLmdldFVpbnQxNihhKSxhKz0yO2JyZWFrO2Nhc2UgMjE5OnQ9bC5nZXRVaW50MzIoYSksYSs9NDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKFwiRXhwZWN0ZWQgc3RyaW5nXCIpfXJldHVybiBQKHQpfWZ1bmN0aW9uIE4oZSl7cmV0dXJuIGMuY29weUJ1ZmZlcnM/VWludDhBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChyLGEsYSs9ZSk6ci5zdWJhcnJheShhLGErPWUpfWZ1bmN0aW9uIEQoZSl7bGV0IHQ9clthKytdO2lmKGhbdF0pe2xldCAkO3JldHVybiBoW3RdKHIuc3ViYXJyYXkoYSwkPWErPWUpLGU9PnthPWU7dHJ5e3JldHVybiBrKCl9ZmluYWxseXthPSR9fSl9dGhyb3cgRXJyb3IoXCJVbmtub3duIGV4dGVuc2lvbiB0eXBlIFwiK3QpfXZhciBWPUFycmF5KDQwOTYpO2Z1bmN0aW9uIFcoKXtsZXQgZT1yW2ErK107aWYoIShlPj0xNjApfHwhKGU8MTkyKSlyZXR1cm4gYS0tLGsoKS50b1N0cmluZygpO2lmKGUtPTE2MCxkPj1hKXJldHVybiBzLnNsaWNlKGEteCwoYSs9ZSkteCk7aWYoISgwPT1kJiZuPDE4MCkpcmV0dXJuIFQoZSk7bGV0IHQ9KGU8PDVeKGU+MT9sLmdldFVpbnQxNihhKTplPjA/clthXTowKSkmNDA5NSwkPVZbdF0saT1hLGY9YStlLTMsdSxvPTA7aWYoJCYmJC5ieXRlcz09ZSl7Zm9yKDtpPGY7KXtpZigodT1sLmdldFVpbnQzMihpKSkhPSRbbysrXSl7aT0xODc5MDQ4MTkyO2JyZWFrfWkrPTR9Zm9yKGYrPTM7aTxmOylpZigodT1yW2krK10pIT0kW28rK10pe2k9MTg3OTA0ODE5MjticmVha31pZihpPT09ZilyZXR1cm4gYT1pLCQuc3RyaW5nO2YtPTMsaT1hfWZvcigkPVtdLFZbdF09JCwkLmJ5dGVzPWU7aTxmOyl1PWwuZ2V0VWludDMyKGkpLCQucHVzaCh1KSxpKz00O2ZvcihmKz0zO2k8ZjspdT1yW2krK10sJC5wdXNoKHUpO2xldCBjPWU8MTY/QyhlKTpSKGUpO3JldHVybiBudWxsIT1jPyQuc3RyaW5nPWM6JC5zdHJpbmc9VChlKX1sZXQgSj0oZSx0KT0+e2xldCAkPWsoKS5tYXAoZT0+ZS50b1N0cmluZygpKSxyPWU7dm9pZCAwIT09dCYmKGU9ZTwzMj8tKCh0PDw1KStlKToodDw8NSkrZSwkLmhpZ2hCeXRlPXQpO2xldCBuPWlbZV07cmV0dXJuIG4mJihuLmlzU2hhcmVkfHx5KSYmKChpLnJlc3RvcmVTdHJ1Y3R1cmVzfHwoaS5yZXN0b3JlU3RydWN0dXJlcz1bXSkpW2VdPW4pLGlbZV09JCwkLnJlYWQ9QSgkLHIpLCQucmVhZCgpfTtoWzBdPSgpPT57fSxoWzBdLm5vQnVmZmVyPSEwO2xldCBxPXtFcnJvcixUeXBlRXJyb3IsUmVmZXJlbmNlRXJyb3J9O2hbMTAxXT0oKT0+e2xldCBlPWsoKTtyZXR1cm4ocVtlWzBdXXx8RXJyb3IpKGVbMV0pfSxoWzEwNV09ZT0+e2xldCB0PWwuZ2V0VWludDMyKGEtNCk7dXx8KHU9bmV3IE1hcCk7bGV0ICQ9clthXSxuO249JD49MTQ0JiYkPDE2MHx8MjIwPT0kfHwyMjE9PSQ/W106e307bGV0IGk9e3RhcmdldDpufTt1LnNldCh0LGkpO2xldCBzPWsoKTtyZXR1cm4gaS51c2VkP09iamVjdC5hc3NpZ24obixzKTooaS50YXJnZXQ9cyxzKX0saFsxMTJdPWU9PntsZXQgdD1sLmdldFVpbnQzMihhLTQpLCQ9dS5nZXQodCk7cmV0dXJuICQudXNlZD0hMCwkLnRhcmdldH0saFsxMTVdPSgpPT5uZXcgU2V0KGsoKSk7bGV0IEs9W1wiSW50OFwiLFwiVWludDhcIixcIlVpbnQ4Q2xhbXBlZFwiLFwiSW50MTZcIixcIlVpbnQxNlwiLFwiSW50MzJcIixcIlVpbnQzMlwiLFwiRmxvYXQzMlwiLFwiRmxvYXQ2NFwiLFwiQmlnSW50NjRcIixcIkJpZ1VpbnQ2NFwiXS5tYXAoZT0+ZStcIkFycmF5XCIpLFk9XCJvYmplY3RcIj09dHlwZW9mIGdsb2JhbFRoaXM/Z2xvYmFsVGhpczp3aW5kb3c7aFsxMTZdPWU9PntsZXQgdD1lWzBdLCQ9S1t0XTtpZighJCl0aHJvdyBFcnJvcihcIkNvdWxkIG5vdCBmaW5kIHR5cGVkIGFycmF5IGZvciBjb2RlIFwiK3QpO3JldHVybiBuZXcgWVskXShVaW50OEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGUsMSkuYnVmZmVyKX0saFsxMjBdPSgpPT57bGV0IGU9aygpO3JldHVybiBSZWdFeHAoZVswXSxlWzFdKX07bGV0IFo9W107ZnVuY3Rpb24gRyhlKXtsZXQgdD1uLCQ9YSxvPXgsaD1kLF89cyxwPXUsZz1mLGI9bmV3IFVpbnQ4QXJyYXkoci5zbGljZSgwLG4pKSx3PWksbT1pLnNsaWNlKDAsaS5sZW5ndGgpLFM9YyxVPXksaz1lKCk7cmV0dXJuIG49dCxhPSQseD1vLGQ9aCxzPV8sdT1wLGY9ZyxyPWIseT1VLChpPXcpLnNwbGljZSgwLGkubGVuZ3RoLC4uLm0pLGM9UyxsPW5ldyBEYXRhVmlldyhyLmJ1ZmZlcixyLmJ5dGVPZmZzZXQsci5ieXRlTGVuZ3RoKSxrfWZ1bmN0aW9uIEgoKXtyPW51bGwsdT1udWxsLGk9bnVsbH1oWzk4XT1lPT57bGV0IHQ9KGVbMF08PDI0KSsoZVsxXTw8MTYpKyhlWzJdPDw4KStlWzNdLCQ9YTtyZXR1cm4gYSs9dC1lLmxlbmd0aCxmPVosKGY9W2ooKSxqKCldKS5wb3NpdGlvbjA9MCxmLnBvc2l0aW9uMT0wLGYucG9zdEJ1bmRsZVBvc2l0aW9uPWEsYT0kLGsoKX0saFsyNTVdPWU9PjQ9PWUubGVuZ3RoP25ldyBEYXRlKCgxNjc3NzIxNiplWzBdKyhlWzFdPDwxNikrKGVbMl08PDgpK2VbM10pKjFlMyk6OD09ZS5sZW5ndGg/bmV3IERhdGUoKChlWzBdPDwyMikrKGVbMV08PDE0KSsoZVsyXTw8NikrKGVbM10+PjIpKS8xZTYrKCgzJmVbM10pKjQyOTQ5NjcyOTYrMTY3NzcyMTYqZVs0XSsoZVs1XTw8MTYpKyhlWzZdPDw4KStlWzddKSoxZTMpOjEyPT1lLmxlbmd0aD9uZXcgRGF0ZSgoKGVbMF08PDI0KSsoZVsxXTw8MTYpKyhlWzJdPDw4KStlWzNdKS8xZTYrKCgxMjgmZVs0XT8tMjgxNDc0OTc2NzEwNjU2OjApKzEwOTk1MTE2Mjc3NzYqZVs2XSs0Mjk0OTY3Mjk2KmVbN10rMTY3NzcyMTYqZVs4XSsoZVs5XTw8MTYpKyhlWzEwXTw8OCkrZVsxMV0pKjFlMyk6bmV3IERhdGUoXCJpbnZhbGlkXCIpO2xldCBRPUFycmF5KDE0Nyk7Zm9yKGxldCBYPTA7WDwyNTY7WCsrKVFbWF09KyhcIjFlXCIrTWF0aC5mbG9vcig0NS4xNS0uMzAxMDMqWCkpO3ZhciBlZT1uZXcgbSh7dXNlUmVjb3JkczohMX0pO2xldCBldD1lZS51bnBhY2ssZSQ9ZWUudW5wYWNrTXVsdGlwbGUsZXI9ZWUudW5wYWNrLGVuPXtORVZFUjowLEFMV0FZUzoxLERFQ0lNQUxfUk9VTkQ6MyxERUNJTUFMX0ZJVDo0fSxlaT1uZXcgRmxvYXQzMkFycmF5KDEpLGVzPW5ldyBVaW50OEFycmF5KGVpLmJ1ZmZlciwwLDQpLGVmO3RyeXtlZj1uZXcgVGV4dEVuY29kZXJ9Y2F0Y2goZXUpe31sZXQgZWwsZW8sZWE9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIEJ1ZmZlcixlYz1lYT9mdW5jdGlvbihlKXtyZXR1cm4gQnVmZmVyLmFsbG9jVW5zYWZlU2xvdyhlKX06VWludDhBcnJheSxleD1lYT9CdWZmZXI6VWludDhBcnJheSxlZD1lYT80Mjk0OTY3Mjk2OjIxNDQzMzc5MjAsZWgsZV8sZXAsZWc9MCxleSxlMD1udWxsLGUyLGUxPS9bXFx1MDA4MC1cXHVGRkZGXS8sZTY9U3ltYm9sKFwicmVjb3JkLWlkXCIpO2NsYXNzIGU0IGV4dGVuZHMgbXtjb25zdHJ1Y3RvcihlKXtzdXBlcihlKSx0aGlzLm9mZnNldD0wO2xldCB0LCQscixuLGk9ZXgucHJvdG90eXBlLnV0ZjhXcml0ZT9mdW5jdGlvbihlLHQpe3JldHVybiBlaC51dGY4V3JpdGUoZSx0LDQyOTQ5NjcyOTUpfTohIWVmJiYhIWVmLmVuY29kZUludG8mJmZ1bmN0aW9uKGUsdCl7cmV0dXJuIGVmLmVuY29kZUludG8oZSxlaC5zdWJhcnJheSh0KSkud3JpdHRlbn0scz10aGlzO2V8fChlPXt9KTtsZXQgZj1lJiZlLnNlcXVlbnRpYWwsdT1lLnN0cnVjdHVyZXN8fGUuc2F2ZVN0cnVjdHVyZXMsbD1lLm1heFNoYXJlZFN0cnVjdHVyZXM7aWYobnVsbD09bCYmKGw9dT8zMjowKSxsPjgxNjApdGhyb3cgRXJyb3IoXCJNYXhpbXVtIG1heFNoYXJlZFN0cnVjdHVyZSBpcyA4MTYwXCIpO2Uuc3RydWN0dXJlZENsb25lJiZ2b2lkIDA9PWUubW9yZVR5cGVzJiYodGhpcy5tb3JlVHlwZXM9ITApO2xldCBvPWUubWF4T3duU3RydWN0dXJlcztudWxsPT1vJiYobz11PzMyOjY0KSx0aGlzLnN0cnVjdHVyZXN8fCExPT1lLnVzZVJlY29yZHN8fCh0aGlzLnN0cnVjdHVyZXM9W10pO2xldCBhPWw+MzJ8fG8rbD42NCxjPWwrNjQseD1sK28rNjQ7aWYoeD44MjU2KXRocm93IEVycm9yKFwiTWF4aW11bSBtYXhTaGFyZWRTdHJ1Y3R1cmUgKyBtYXhPd25TdHJ1Y3R1cmUgaXMgODE5MlwiKTtsZXQgZD1bXSxoPTAsXz0wO3RoaXMucGFjaz10aGlzLmVuY29kZT1mdW5jdGlvbihlLGkpe2lmKGVofHwoZXA9KGVoPW5ldyBlYyg4MTkyKSkuZGF0YVZpZXd8fChlaC5kYXRhVmlldz1uZXcgRGF0YVZpZXcoZWguYnVmZmVyLDAsODE5MikpLGVnPTApLChleT1laC5sZW5ndGgtMTApLWVnPDIwNDg/KGVwPShlaD1uZXcgZWMoZWgubGVuZ3RoKSkuZGF0YVZpZXd8fChlaC5kYXRhVmlldz1uZXcgRGF0YVZpZXcoZWguYnVmZmVyLDAsZWgubGVuZ3RoKSksZXk9ZWgubGVuZ3RoLTEwLGVnPTApOmVnPWVnKzcmMjE0NzQ4MzY0MCx0PWVnLGkmZVQmJihlZys9MjU1JmkpLG49cy5zdHJ1Y3R1cmVkQ2xvbmU/bmV3IE1hcDpudWxsLHMuYnVuZGxlU3RyaW5ncyYmXCJzdHJpbmdcIiE9dHlwZW9mIGU/KGUwPVtdKS5zaXplPTEvMDplMD1udWxsLHI9cy5zdHJ1Y3R1cmVzKXtyLnVuaW5pdGlhbGl6ZWQmJihyPXMuX21lcmdlU3RydWN0dXJlcyhzLmdldFN0cnVjdHVyZXMoKSkpO2xldCB1PXIuc2hhcmVkTGVuZ3RofHwwO2lmKHU+bCl0aHJvdyBFcnJvcihcIlNoYXJlZCBzdHJ1Y3R1cmVzIGlzIGxhcmdlciB0aGFuIG1heGltdW0gc2hhcmVkIHN0cnVjdHVyZXMsIHRyeSBpbmNyZWFzaW5nIG1heFNoYXJlZFN0cnVjdHVyZXMgdG8gXCIrci5zaGFyZWRMZW5ndGgpO2lmKCFyLnRyYW5zaXRpb25zKXtyLnRyYW5zaXRpb25zPU9iamVjdC5jcmVhdGUobnVsbCk7Zm9yKGxldCBvPTA7bzx1O28rKyl7bGV0IGE9cltvXTtpZighYSljb250aW51ZTtsZXQgYyx4PXIudHJhbnNpdGlvbnM7Zm9yKGxldCBkPTAsaD1hLmxlbmd0aDtkPGg7ZCsrKXtsZXQgXz1hW2RdOyhjPXhbX10pfHwoYz14W19dPU9iamVjdC5jcmVhdGUobnVsbCkpLHg9Y314W2U2XT1vKzY0fXRoaXMubGFzdE5hbWVkU3RydWN0dXJlc0xlbmd0aD11fWZ8fChyLm5leHRJZD11KzY0KX0kJiYoJD0hMSk7dHJ5e3MucmFuZG9tQWNjZXNzU3RydWN0dXJlJiZlJiZlLmNvbnN0cnVjdG9yJiZlLmNvbnN0cnVjdG9yPT09T2JqZWN0P0EoZSk6eShlKTtsZXQgZz1lMDtpZihlMCYmZVModCx5LDApLG4mJm4uaWRzVG9JbnNlcnQpe2xldCBiPW4uaWRzVG9JbnNlcnQuc29ydCgoZSx0KT0+ZS5vZmZzZXQ+dC5vZmZzZXQ/MTotMSksdz1iLmxlbmd0aCxtPS0xO2Zvcig7ZyYmdz4wOyl7bGV0IFM9YlstLXddLm9mZnNldCt0O1M8Zy5zdHJpbmdzUG9zaXRpb24rdCYmLTE9PT1tJiYobT0wKSxTPmcucG9zaXRpb24rdD9tPj0wJiYobSs9Nik6KG0+PTAmJihlcC5zZXRVaW50MzIoZy5wb3NpdGlvbit0LGVwLmdldFVpbnQzMihnLnBvc2l0aW9uK3QpK20pLG09LTEpLGc9Zy5wcmV2aW91cyx3KyspfW0+PTAmJmcmJmVwLnNldFVpbnQzMihnLnBvc2l0aW9uK3QsZXAuZ2V0VWludDMyKGcucG9zaXRpb24rdCkrbSksKGVnKz02KmIubGVuZ3RoKT5leSYmVShlZykscy5vZmZzZXQ9ZWc7bGV0IGs9ZnVuY3Rpb24gZSh0LCQpe2xldCByLG49NiokLmxlbmd0aCxpPXQubGVuZ3RoLW47Zm9yKDtyPSQucG9wKCk7KXtsZXQgcz1yLm9mZnNldCxmPXIuaWQ7dC5jb3B5V2l0aGluKHMrbixzLGkpO2xldCB1PXMrKG4tPTYpO3RbdSsrXT0yMTQsdFt1KytdPTEwNSx0W3UrK109Zj4+MjQsdFt1KytdPWY+PjE2JjI1NSx0W3UrK109Zj4+OCYyNTUsdFt1KytdPTI1NSZmLGk9c31yZXR1cm4gdH0oZWguc3ViYXJyYXkodCxlZyksYik7cmV0dXJuIG49bnVsbCxrfWlmKHMub2Zmc2V0PWVnLGkmZXYpcmV0dXJuIGVoLnN0YXJ0PXQsZWguZW5kPWVnLGVoO3JldHVybiBlaC5zdWJhcnJheSh0LGVnKX1maW5hbGx5e2lmKHImJihwKCksJCYmcy5zYXZlU3RydWN0dXJlcykpe3ZhciBJLHY7bGV0IE89ci5zaGFyZWRMZW5ndGh8fDAsVD1laC5zdWJhcnJheSh0LGVnKSxCPShJPXIsdj1zLEkuaXNDb21wYXRpYmxlPWU9PntsZXQgdD0hZXx8KHYubGFzdE5hbWVkU3RydWN0dXJlc0xlbmd0aHx8MCk9PT1lLmxlbmd0aDtyZXR1cm4gdHx8di5fbWVyZ2VTdHJ1Y3R1cmVzKGUpLHR9LEkpO2lmKCExPT09cy5zYXZlU3RydWN0dXJlcyhCLEIuaXNDb21wYXRpYmxlKSlyZXR1cm4gcy5wYWNrKGUsaSk7cmV0dXJuIHMubGFzdE5hbWVkU3RydWN0dXJlc0xlbmd0aD1PLFR9aSZlTyYmKGVnPXQpfX07bGV0IHA9KCk9PntfPDEwJiZfKys7bGV0IGU9ci5zaGFyZWRMZW5ndGh8fDA7aWYoci5sZW5ndGg+ZSYmIWYmJihyLmxlbmd0aD1lKSxoPjFlNClyLnRyYW5zaXRpb25zPW51bGwsXz0wLGg9MCxkLmxlbmd0aD4wJiYoZD1bXSk7ZWxzZSBpZihkLmxlbmd0aD4wJiYhZil7Zm9yKGxldCB0PTAsJD1kLmxlbmd0aDt0PCQ7dCsrKWRbdF1bZTZdPTA7ZD1bXX19LGc9ZT0+e3ZhciB0PWUubGVuZ3RoO3Q8MTY/ZWhbZWcrK109MTQ0fHQ6dDw2NTUzNj8oZWhbZWcrK109MjIwLGVoW2VnKytdPXQ+PjgsZWhbZWcrK109MjU1JnQpOihlaFtlZysrXT0yMjEsZXAuc2V0VWludDMyKGVnLHQpLGVnKz00KTtmb3IobGV0ICQ9MDskPHQ7JCsrKXkoZVskXSl9LHk9ZT0+e2VnPmV5JiYoZWg9VShlZykpO3ZhciAkLHI9dHlwZW9mIGU7aWYoXCJzdHJpbmdcIj09PXIpe2xldCBzPWUubGVuZ3RoO2lmKGUwJiZzPj00JiZzPDQwOTYpe2lmKChlMC5zaXplKz1zKT4yMTc2MCl7bGV0IGYsdT0oZTBbMF0/MyplMFswXS5sZW5ndGgrZTBbMV0ubGVuZ3RoOjApKzEwO2VnK3U+ZXkmJihlaD1VKGVnK3UpKTtsZXQgbDtlMC5wb3NpdGlvbj8obD1lMCxlaFtlZ109MjAwLGVnKz0zLGVoW2VnKytdPTk4LGY9ZWctdCxlZys9NCxlUyh0LHksMCksZXAuc2V0VWludDE2KGYrdC0zLGVnLXQtZikpOihlaFtlZysrXT0yMTQsZWhbZWcrK109OTgsZj1lZy10LGVnKz00KSwoZTA9W1wiXCIsXCJcIl0pLnByZXZpb3VzPWwsZTAuc2l6ZT0wLGUwLnBvc2l0aW9uPWZ9bGV0IG89ZTEudGVzdChlKTtlMFtvPzA6MV0rPWUsZWhbZWcrK109MTkzLHkobz8tczpzKTtyZXR1cm59bGV0IGE7YT1zPDMyPzE6czwyNTY/MjpzPDY1NTM2PzM6NTtsZXQgYz0zKnM7aWYoZWcrYz5leSYmKGVoPVUoZWcrYykpLHM8NjR8fCFpKXtsZXQgeCxkLGgsXz1lZythO2Zvcih4PTA7eDxzO3grKykoZD1lLmNoYXJDb2RlQXQoeCkpPDEyOD9laFtfKytdPWQ6ZDwyMDQ4PyhlaFtfKytdPWQ+PjZ8MTkyLGVoW18rK109NjMmZHwxMjgpOig2NDUxMiZkKT09NTUyOTYmJig2NDUxMiYoaD1lLmNoYXJDb2RlQXQoeCsxKSkpPT01NjMyMD8oZD02NTUzNisoKDEwMjMmZCk8PDEwKSsoMTAyMyZoKSx4KyssZWhbXysrXT1kPj4xOHwyNDAsZWhbXysrXT1kPj4xMiY2M3wxMjgsZWhbXysrXT1kPj42JjYzfDEyOCxlaFtfKytdPTYzJmR8MTI4KTooZWhbXysrXT1kPj4xMnwyMjQsZWhbXysrXT1kPj42JjYzfDEyOCxlaFtfKytdPTYzJmR8MTI4KTskPV8tZWctYX1lbHNlICQ9aShlLGVnK2EpOyQ8MzI/ZWhbZWcrK109MTYwfCQ6JDwyNTY/KGE8MiYmZWguY29weVdpdGhpbihlZysyLGVnKzEsZWcrMSskKSxlaFtlZysrXT0yMTcsZWhbZWcrK109JCk6JDw2NTUzNj8oYTwzJiZlaC5jb3B5V2l0aGluKGVnKzMsZWcrMixlZysyKyQpLGVoW2VnKytdPTIxOCxlaFtlZysrXT0kPj44LGVoW2VnKytdPTI1NSYkKTooYTw1JiZlaC5jb3B5V2l0aGluKGVnKzUsZWcrMyxlZyszKyQpLGVoW2VnKytdPTIxOSxlcC5zZXRVaW50MzIoZWcsJCksZWcrPTQpLGVnKz0kfWVsc2UgaWYoXCJudW1iZXJcIj09PXIpe2lmKGU+Pj4wPT09ZSllPDMyfHxlPDEyOCYmITE9PT10aGlzLnVzZVJlY29yZHN8fGU8NjQmJiF0aGlzLnJhbmRvbUFjY2Vzc1N0cnVjdHVyZT9laFtlZysrXT1lOmU8MjU2PyhlaFtlZysrXT0yMDQsZWhbZWcrK109ZSk6ZTw2NTUzNj8oZWhbZWcrK109MjA1LGVoW2VnKytdPWU+PjgsZWhbZWcrK109MjU1JmUpOihlaFtlZysrXT0yMDYsZXAuc2V0VWludDMyKGVnLGUpLGVnKz00KTtlbHNlIGlmKGU+PjA9PT1lKWU+PS0zMj9laFtlZysrXT0yNTYrZTplPj0tMTI4PyhlaFtlZysrXT0yMDgsZWhbZWcrK109ZSsyNTYpOmU+PS0zMjc2OD8oZWhbZWcrK109MjA5LGVwLnNldEludDE2KGVnLGUpLGVnKz0yKTooZWhbZWcrK109MjEwLGVwLnNldEludDMyKGVnLGUpLGVnKz00KTtlbHNle2xldCBwO2lmKChwPXRoaXMudXNlRmxvYXQzMik+MCYmZTw0Mjk0OTY3Mjk2JiZlPj0tMjE0NzQ4MzY0OCl7ZWhbZWcrK109MjAyLGVwLnNldEZsb2F0MzIoZWcsZSk7bGV0IGI7aWYocDw0fHwoYj1lKlFbKDEyNyZlaFtlZ10pPDwxfGVoW2VnKzFdPj43XSk+PjA9PT1iKXtlZys9NDtyZXR1cm59ZWctLX1laFtlZysrXT0yMDMsZXAuc2V0RmxvYXQ2NChlZyxlKSxlZys9OH19ZWxzZSBpZihcIm9iamVjdFwiPT09cnx8XCJmdW5jdGlvblwiPT09cil7aWYoZSl7aWYobil7bGV0IHc9bi5nZXQoZSk7aWYodyl7aWYoIXcuaWQpe2xldCBtPW4uaWRzVG9JbnNlcnR8fChuLmlkc1RvSW5zZXJ0PVtdKTt3LmlkPW0ucHVzaCh3KX1laFtlZysrXT0yMTQsZWhbZWcrK109MTEyLGVwLnNldFVpbnQzMihlZyx3LmlkKSxlZys9NDtyZXR1cm59bi5zZXQoZSx7b2Zmc2V0OmVnLXR9KX1sZXQgaz1lLmNvbnN0cnVjdG9yO2lmKGs9PT1PYmplY3QpUyhlLCEwKTtlbHNlIGlmKGs9PT1BcnJheSlnKGUpO2Vsc2UgaWYoaz09PU1hcCl7aWYodGhpcy5tYXBBc0VtcHR5T2JqZWN0KWVoW2VnKytdPTEyODtlbHNlIGZvcihsZXRbSSxBXW9mKCgkPWUuc2l6ZSk8MTY/ZWhbZWcrK109MTI4fCQ6JDw2NTUzNj8oZWhbZWcrK109MjIyLGVoW2VnKytdPSQ+PjgsZWhbZWcrK109MjU1JiQpOihlaFtlZysrXT0yMjMsZXAuc2V0VWludDMyKGVnLCQpLGVnKz00KSxlKSl5KEkpLHkoQSl9ZWxzZXtmb3IobGV0IHY9MCxPPWVsLmxlbmd0aDt2PE87disrKWlmKGUgaW5zdGFuY2VvZiBlb1t2XSl7bGV0IFQ9ZWxbdl07aWYoVC53cml0ZSl7VC50eXBlJiYoZWhbZWcrK109MjEyLGVoW2VnKytdPVQudHlwZSxlaFtlZysrXT0wKTtsZXQgQj1ULndyaXRlLmNhbGwodGhpcyxlKTtCPT09ZT9BcnJheS5pc0FycmF5KGUpP2coZSk6UyhlKTp5KEIpO3JldHVybn1sZXQgTD1laCxGPWVwLFA9ZWc7ZWg9bnVsbDtsZXQgejt0cnl7ej1ULnBhY2suY2FsbCh0aGlzLGUsZT0+KGVoPUwsTD1udWxsLChlZys9ZSk+ZXkmJlUoZWcpLHt0YXJnZXQ6ZWgsdGFyZ2V0VmlldzplcCxwb3NpdGlvbjplZy1lfSkseSl9ZmluYWxseXtMJiYoZWg9TCxlcD1GLGVnPVAsZXk9ZWgubGVuZ3RoLTEwKX16JiYoei5sZW5ndGgrZWc+ZXkmJlUoei5sZW5ndGgrZWcpLGVnPWVtKHosZWgsZWcsVC50eXBlKSk7cmV0dXJufWlmKEFycmF5LmlzQXJyYXkoZSkpZyhlKTtlbHNle2lmKGUudG9KU09OKXtsZXQgRT1lLnRvSlNPTigpO2lmKEUhPT1lKXJldHVybiB5KEUpfWlmKFwiZnVuY3Rpb25cIj09PXIpcmV0dXJuIHkodGhpcy53cml0ZUZ1bmN0aW9uJiZ0aGlzLndyaXRlRnVuY3Rpb24oZSkpO1MoZSwhZS5oYXNPd25Qcm9wZXJ0eSl9fX1lbHNlIGVoW2VnKytdPTE5Mn1lbHNlIGlmKFwiYm9vbGVhblwiPT09cillaFtlZysrXT1lPzE5NToxOTQ7ZWxzZSBpZihcImJpZ2ludFwiPT09cil7aWYoZTxCaWdJbnQoMSk8PEJpZ0ludCg2MykmJmU+PS0oQmlnSW50KDEpPDxCaWdJbnQoNjMpKSllaFtlZysrXT0yMTEsZXAuc2V0QmlnSW50NjQoZWcsZSk7ZWxzZSBpZihlPEJpZ0ludCgxKTw8QmlnSW50KDY0KSYmZT4wKWVoW2VnKytdPTIwNyxlcC5zZXRCaWdVaW50NjQoZWcsZSk7ZWxzZSBpZih0aGlzLmxhcmdlQmlnSW50VG9GbG9hdCllaFtlZysrXT0yMDMsZXAuc2V0RmxvYXQ2NChlZyxOdW1iZXIoZSkpO2Vsc2UgdGhyb3cgUmFuZ2VFcnJvcihlK1wiIHdhcyB0b28gbGFyZ2UgdG8gZml0IGluIE1lc3NhZ2VQYWNrIDY0LWJpdCBpbnRlZ2VyIGZvcm1hdCwgc2V0IGxhcmdlQmlnSW50VG9GbG9hdCB0byBjb252ZXJ0IHRvIGZsb2F0LTY0XCIpO2VnKz04fWVsc2UgaWYoXCJ1bmRlZmluZWRcIj09PXIpdGhpcy5lbmNvZGVVbmRlZmluZWRBc05pbD9laFtlZysrXT0xOTI6KGVoW2VnKytdPTIxMixlaFtlZysrXT0wLGVoW2VnKytdPTApO2Vsc2UgdGhyb3cgRXJyb3IoXCJVbmtub3duIHR5cGU6IFwiK3IpfSxiPXRoaXMudmFyaWFibGVNYXBTaXplfHx0aGlzLmNvZXJjaWJsZUtleUFzTnVtYmVyP2U9PntsZXQgdD1PYmplY3Qua2V5cyhlKSwkPXQubGVuZ3RoOyQ8MTY/ZWhbZWcrK109MTI4fCQ6JDw2NTUzNj8oZWhbZWcrK109MjIyLGVoW2VnKytdPSQ+PjgsZWhbZWcrK109MjU1JiQpOihlaFtlZysrXT0yMjMsZXAuc2V0VWludDMyKGVnLCQpLGVnKz00KTtsZXQgcjtpZih0aGlzLmNvZXJjaWJsZUtleUFzTnVtYmVyKWZvcihsZXQgbj0wO248JDtuKyspe2xldCBpPU51bWJlcihyPXRbbl0pO3koaXNOYU4oaSk/cjppKSx5KGVbcl0pfWVsc2UgZm9yKGxldCBzPTA7czwkO3MrKyl5KHI9dFtzXSkseShlW3JdKX06KGUsJCk9PntlaFtlZysrXT0yMjI7bGV0IHI9ZWctdDtlZys9MjtsZXQgbj0wO2ZvcihsZXQgaSBpbiBlKSgkfHxlLmhhc093blByb3BlcnR5KGkpKSYmKHkoaSkseShlW2ldKSxuKyspO2VoW3IrKyt0XT1uPj44LGVoW3IrdF09MjU1Jm59LHc9ITE9PT10aGlzLnVzZVJlY29yZHM/YjplLnByb2dyZXNzaXZlUmVjb3JkcyYmIWE/KGUsJCk9PntsZXQgbixpPXIudHJhbnNpdGlvbnN8fChyLnRyYW5zaXRpb25zPU9iamVjdC5jcmVhdGUobnVsbCkpLHM9ZWcrKy10LGY7Zm9yKGxldCB1IGluIGUpaWYoJHx8ZS5oYXNPd25Qcm9wZXJ0eSh1KSl7aWYobj1pW3VdKWk9bjtlbHNle2xldCBsPU9iamVjdC5rZXlzKGUpLG89aTtpPXIudHJhbnNpdGlvbnM7bGV0IGE9MDtmb3IobGV0IGM9MCx4PWwubGVuZ3RoO2M8eDtjKyspe2xldCBkPWxbY107IShuPWlbZF0pJiYobj1pW2RdPU9iamVjdC5jcmVhdGUobnVsbCksYSsrKSxpPW59cyt0KzE9PWVnPyhlZy0tLGsoaSxsLGEpKTpJKGksbCxzLGEpLGY9ITAsaT1vW3VdfXkoZVt1XSl9aWYoIWYpe2xldCBoPWlbZTZdO2g/ZWhbcyt0XT1oOkkoaSxPYmplY3Qua2V5cyhlKSxzLDApfX06KGUsdCk9PntsZXQgJCxuPXIudHJhbnNpdGlvbnN8fChyLnRyYW5zaXRpb25zPU9iamVjdC5jcmVhdGUobnVsbCkpLGk9MDtmb3IobGV0IHMgaW4gZSkodHx8ZS5oYXNPd25Qcm9wZXJ0eShzKSkmJighKCQ9bltzXSkmJigkPW5bc109T2JqZWN0LmNyZWF0ZShudWxsKSxpKyspLG49JCk7bGV0IGY9bltlNl07Zm9yKGxldCB1IGluIGY/Zj49OTYmJmE/KGVoW2VnKytdPSgzMSYoZi09OTYpKSs5NixlaFtlZysrXT1mPj41KTplaFtlZysrXT1mOmsobixuLl9fa2V5c19ffHxPYmplY3Qua2V5cyhlKSxpKSxlKSh0fHxlLmhhc093blByb3BlcnR5KHUpKSYmeShlW3VdKX0sbT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0aGlzLnVzZVJlY29yZHMmJnRoaXMudXNlUmVjb3JkcyxTPW0/KGUsdCk9PnttKGUpP3coZSx0KTpiKGUsdCl9OncsVT1lPT57bGV0ICQ7aWYoZT4xNjc3NzIxNil7aWYoZS10PmVkKXRocm93IEVycm9yKFwiUGFja2VkIGJ1ZmZlciB3b3VsZCBiZSBsYXJnZXIgdGhhbiBtYXhpbXVtIGJ1ZmZlciBzaXplXCIpOyQ9TWF0aC5taW4oZWQsNDA5NipNYXRoLnJvdW5kKE1hdGgubWF4KChlLXQpKihlPjY3MTA4ODY0PzEuMjU6MiksNDE5NDMwNCkvNDA5NikpfWVsc2UgJD0oTWF0aC5tYXgoZS10PDwyLGVoLmxlbmd0aC0xKT4+MTIpKzE8PDEyO2xldCByPW5ldyBlYygkKTtyZXR1cm4gZXA9ci5kYXRhVmlld3x8KHIuZGF0YVZpZXc9bmV3IERhdGFWaWV3KHIuYnVmZmVyLDAsJCkpLGU9TWF0aC5taW4oZSxlaC5sZW5ndGgpLGVoLmNvcHk/ZWguY29weShyLDAsdCxlKTpyLnNldChlaC5zbGljZSh0LGUpKSxlZy09dCx0PTAsZXk9ci5sZW5ndGgtMTAsZWg9cn0saz0oZSx0LG4pPT57bGV0IGk9ci5uZXh0SWQ7aXx8KGk9NjQpLGk8YyYmdGhpcy5zaG91bGRTaGFyZVN0cnVjdHVyZSYmIXRoaXMuc2hvdWxkU2hhcmVTdHJ1Y3R1cmUodCk/KChpPXIubmV4dE93bklkKTx4fHwoaT1jKSxyLm5leHRPd25JZD1pKzEpOihpPj14JiYoaT1jKSxyLm5leHRJZD1pKzEpO2xldCBzPXQuaGlnaEJ5dGU9aT49OTYmJmE/aS05Nj4+NTotMTtlW2U2XT1pLGUuX19rZXlzX189dCxyW2ktNjRdPXQsaTxjPyh0LmlzU2hhcmVkPSEwLHIuc2hhcmVkTGVuZ3RoPWktNjMsJD0hMCxzPj0wPyhlaFtlZysrXT0oMzEmaSkrOTYsZWhbZWcrK109cyk6ZWhbZWcrK109aSk6KHM+PTA/KGVoW2VnKytdPTIxMyxlaFtlZysrXT0xMTQsZWhbZWcrK109KDMxJmkpKzk2LGVoW2VnKytdPXMpOihlaFtlZysrXT0yMTIsZWhbZWcrK109MTE0LGVoW2VnKytdPWkpLG4mJihoKz1fKm4pLGQubGVuZ3RoPj1vJiYoZC5zaGlmdCgpW2U2XT0wKSxkLnB1c2goZSkseSh0KSl9LEk9KGUsJCxyLG4pPT57bGV0IGk9ZWgscz1lZyxmPWV5LHU9dDtlaD1lXyxlZz0wLHQ9MCxlaHx8KGVfPWVoPW5ldyBlYyg4MTkyKSksZXk9ZWgubGVuZ3RoLTEwLGsoZSwkLG4pLGVfPWVoO2xldCBsPWVnO2lmKGVoPWksZWc9cyxleT1mLHQ9dSxsPjEpe2xldCBvPWVnK2wtMTtvPmV5JiZVKG8pO2xldCBhPXIrdDtlaC5jb3B5V2l0aGluKGErbCxhKzEsZWcpLGVoLnNldChlXy5zbGljZSgwLGwpLGEpLGVnPW99ZWxzZSBlaFtyK3RdPWVfWzBdfSxBPShlLG4pPT57bGV0IGk9ZTIoZSxlaCx0LGVnLHIsVSwoZSx0LHIpPT57aWYocilyZXR1cm4gJD0hMDtlZz10O2xldCBuPWVoO3JldHVybih5KGUpLHAoKSxuIT09ZWgpP3twb3NpdGlvbjplZyx0YXJnZXRWaWV3OmVwLHRhcmdldDplaH06ZWd9LHRoaXMpO2lmKDA9PT1pKXJldHVybiBTKGUsITApO2VnPWl9fXVzZUJ1ZmZlcihlKXtlaD1lLGVwPW5ldyBEYXRhVmlldyhlaC5idWZmZXIsZWguYnl0ZU9mZnNldCxlaC5ieXRlTGVuZ3RoKSxlZz0wfWNsZWFyU2hhcmVkRGF0YSgpe3RoaXMuc3RydWN0dXJlcyYmKHRoaXMuc3RydWN0dXJlcz1bXSksdGhpcy50eXBlZFN0cnVjdHMmJih0aGlzLnR5cGVkU3RydWN0cz1bXSl9fWZ1bmN0aW9uIGViKGUsdCwkLHIpe2xldCBuPWUuYnl0ZUxlbmd0aDtpZihuKzE8MjU2KXt2YXJ7dGFyZ2V0OmkscG9zaXRpb246c309JCg0K24pO2lbcysrXT0xOTksaVtzKytdPW4rMX1lbHNlIGlmKG4rMTw2NTUzNil7dmFye3RhcmdldDppLHBvc2l0aW9uOnN9PSQoNStuKTtpW3MrK109MjAwLGlbcysrXT1uKzE+PjgsaVtzKytdPW4rMSYyNTV9ZWxzZXt2YXJ7dGFyZ2V0OmkscG9zaXRpb246cyx0YXJnZXRWaWV3OmZ9PSQoNytuKTtpW3MrK109MjAxLGYuc2V0VWludDMyKHMsbisxKSxzKz00fWlbcysrXT0xMTYsaVtzKytdPXQsaS5zZXQobmV3IFVpbnQ4QXJyYXkoZS5idWZmZXIsZS5ieXRlT2Zmc2V0LGUuYnl0ZUxlbmd0aCkscyl9ZnVuY3Rpb24gZXcoZSx0KXtsZXQgJD1lLmJ5dGVMZW5ndGg7aWYoJDwyNTYpe3ZhciByLG4se3RhcmdldDpyLHBvc2l0aW9uOm59PXQoJCsyKTtyW24rK109MTk2LHJbbisrXT0kfWVsc2UgaWYoJDw2NTUzNil7dmFye3RhcmdldDpyLHBvc2l0aW9uOm59PXQoJCszKTtyW24rK109MTk3LHJbbisrXT0kPj44LHJbbisrXT0yNTUmJH1lbHNle3Zhcnt0YXJnZXQ6cixwb3NpdGlvbjpuLHRhcmdldFZpZXc6aX09dCgkKzUpO3JbbisrXT0xOTgsaS5zZXRVaW50MzIobiwkKSxuKz00fXIuc2V0KGUsbil9ZnVuY3Rpb24gZW0oZSx0LCQscil7bGV0IG49ZS5sZW5ndGg7c3dpdGNoKG4pe2Nhc2UgMTp0WyQrK109MjEyO2JyZWFrO2Nhc2UgMjp0WyQrK109MjEzO2JyZWFrO2Nhc2UgNDp0WyQrK109MjE0O2JyZWFrO2Nhc2UgODp0WyQrK109MjE1O2JyZWFrO2Nhc2UgMTY6dFskKytdPTIxNjticmVhaztkZWZhdWx0Om48MjU2Pyh0WyQrK109MTk5LHRbJCsrXT1uKTpuPDY1NTM2Pyh0WyQrK109MjAwLHRbJCsrXT1uPj44LHRbJCsrXT0yNTUmbik6KHRbJCsrXT0yMDEsdFskKytdPW4+PjI0LHRbJCsrXT1uPj4xNiYyNTUsdFskKytdPW4+PjgmMjU1LHRbJCsrXT0yNTUmbil9cmV0dXJuIHRbJCsrXT1yLHQuc2V0KGUsJCksJCs9bn1mdW5jdGlvbiBlUyhlLHQsJCl7aWYoZTAubGVuZ3RoPjApe2VwLnNldFVpbnQzMihlMC5wb3NpdGlvbitlLGVnKyQtZTAucG9zaXRpb24tZSksZTAuc3RyaW5nc1Bvc2l0aW9uPWVnLWU7bGV0IHI9ZTA7ZTA9bnVsbCx0KHJbMF0pLHQoclsxXSl9fWVvPVtEYXRlLFNldCxFcnJvcixSZWdFeHAsQXJyYXlCdWZmZXIsT2JqZWN0LmdldFByb3RvdHlwZU9mKFVpbnQ4QXJyYXkucHJvdG90eXBlKS5jb25zdHJ1Y3RvcixwXSxlbD1be3BhY2soZSx0LCQpe2xldCByPWUuZ2V0VGltZSgpLzFlMztpZigodGhpcy51c2VUaW1lc3RhbXAzMnx8MD09PWUuZ2V0TWlsbGlzZWNvbmRzKCkpJiZyPj0wJiZyPDQyOTQ5NjcyOTYpe2xldHt0YXJnZXQ6bix0YXJnZXRWaWV3OmkscG9zaXRpb246c309dCg2KTtuW3MrK109MjE0LG5bcysrXT0yNTUsaS5zZXRVaW50MzIocyxyKX1lbHNlIGlmKHI+MCYmcjw0Mjk0OTY3Mjk2KXtsZXR7dGFyZ2V0OmYsdGFyZ2V0Vmlldzp1LHBvc2l0aW9uOmx9PXQoMTApO2ZbbCsrXT0yMTUsZltsKytdPTI1NSx1LnNldFVpbnQzMihsLDRlNiplLmdldE1pbGxpc2Vjb25kcygpKyhyLzFlMy80Mjk0OTY3Mjk2Pj4wKSksdS5zZXRVaW50MzIobCs0LHIpfWVsc2UgaWYoaXNOYU4ocikpe2lmKHRoaXMub25JbnZhbGlkRGF0ZSlyZXR1cm4gdCgwKSwkKHRoaXMub25JbnZhbGlkRGF0ZSgpKTtsZXR7dGFyZ2V0Om8sdGFyZ2V0VmlldzphLHBvc2l0aW9uOmN9PXQoMyk7b1tjKytdPTIxMixvW2MrK109MjU1LG9bYysrXT0yNTV9ZWxzZXtsZXR7dGFyZ2V0OngsdGFyZ2V0VmlldzpkLHBvc2l0aW9uOmh9PXQoMTUpO3hbaCsrXT0xOTkseFtoKytdPTEyLHhbaCsrXT0yNTUsZC5zZXRVaW50MzIoaCwxZTYqZS5nZXRNaWxsaXNlY29uZHMoKSksZC5zZXRCaWdJbnQ2NChoKzQsQmlnSW50KE1hdGguZmxvb3IocikpKX19fSx7cGFjayhlLHQsJCl7aWYodGhpcy5zZXRBc0VtcHR5T2JqZWN0KXJldHVybiB0KDApLCQoe30pO2xldCByPUFycmF5LmZyb20oZSkse3RhcmdldDpuLHBvc2l0aW9uOml9PXQodGhpcy5tb3JlVHlwZXM/MzowKTt0aGlzLm1vcmVUeXBlcyYmKG5baSsrXT0yMTIsbltpKytdPTExNSxuW2krK109MCksJChyKX19LHtwYWNrKGUsdCwkKXtsZXR7dGFyZ2V0OnIscG9zaXRpb246bn09dCh0aGlzLm1vcmVUeXBlcz8zOjApO3RoaXMubW9yZVR5cGVzJiYocltuKytdPTIxMixyW24rK109MTAxLHJbbisrXT0wKSwkKFtlLm5hbWUsZS5tZXNzYWdlXSl9fSx7cGFjayhlLHQsJCl7bGV0e3RhcmdldDpyLHBvc2l0aW9uOm59PXQodGhpcy5tb3JlVHlwZXM/MzowKTt0aGlzLm1vcmVUeXBlcyYmKHJbbisrXT0yMTIscltuKytdPTEyMCxyW24rK109MCksJChbZS5zb3VyY2UsZS5mbGFnc10pfX0se3BhY2soZSx0KXt0aGlzLm1vcmVUeXBlcz9lYihlLDE2LHQpOmV3KGVhP0J1ZmZlci5mcm9tKGUpOm5ldyBVaW50OEFycmF5KGUpLHQpfX0se3BhY2soZSx0KXtsZXQgJD1lLmNvbnN0cnVjdG9yOyQhPT1leCYmdGhpcy5tb3JlVHlwZXM/ZWIoZSxLLmluZGV4T2YoJC5uYW1lKSx0KTpldyhlLHQpfX0se3BhY2soZSx0KXtsZXR7dGFyZ2V0OiQscG9zaXRpb246cn09dCgxKTskW3JdPTE5M319XTtsZXQgZVU9bmV3IGU0KHt1c2VSZWNvcmRzOiExfSksZWs9ZVUucGFjayxlST1lVS5wYWNrLHtORVZFUjplOCxBTFdBWVM6ZUEsREVDSU1BTF9ST1VORDplNSxERUNJTUFMX0ZJVDplM309ZW4sZXY9NTEyLGVPPTEwMjQsZVQ9MjA0ODthc3luYyBmdW5jdGlvbiplQihlLHQpe2xldCAkPW5ldyBlNCh0KTtmb3IgYXdhaXQobGV0IHIgb2YgZSl5aWVsZCAkLnBhY2socil9bGV0IGVMPWZ1bmN0aW9uIGUodCwkPXt9KXtpZighdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQpdGhyb3cgRXJyb3IoXCJmaXJzdCBhcmd1bWVudCBtdXN0IGJlIGFuIEl0ZXJhYmxlLCBBc3luYyBJdGVyYWJsZSwgSXRlcmF0b3IsIEFzeW5jIEl0ZXJhdG9yLCBvciBhIHByb21pc2VcIik7bGV0IHI9bmV3IG0oJCksbixpPWU9PntsZXQgdDtuJiYoZT1CdWZmZXIuY29uY2F0KFtuLGVdKSxuPXZvaWQgMCk7dHJ5e3Q9ci51bnBhY2tNdWx0aXBsZShlKX1jYXRjaCgkKXtpZigkLmluY29tcGxldGUpbj1lLnNsaWNlKCQubGFzdFBvc2l0aW9uKSx0PSQudmFsdWVzO2Vsc2UgdGhyb3cgJH1yZXR1cm4gdH07cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdFtTeW1ib2wuaXRlcmF0b3JdP2Z1bmN0aW9uKiBlKCl7Zm9yKGxldCAkIG9mIHQpeWllbGQqaSgkKX0oKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiB0W1N5bWJvbC5hc3luY0l0ZXJhdG9yXT9hc3luYyBmdW5jdGlvbiogZSgpe2ZvciBhd2FpdChsZXQgJCBvZiB0KXlpZWxkKmkoJCl9KCk6dm9pZCAwfSxlRj1mdW5jdGlvbiBlKHQsJD17fSl7aWYodCYmXCJvYmplY3RcIj09dHlwZW9mIHQpe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHRbU3ltYm9sLml0ZXJhdG9yXSlyZXR1cm4gZnVuY3Rpb24qIGUodCwkKXtsZXQgcj1uZXcgZTQoJCk7Zm9yKGxldCBuIG9mIHQpeWllbGQgci5wYWNrKG4pfSh0LCQpO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQudGhlbnx8XCJmdW5jdGlvblwiPT10eXBlb2YgdFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0pcmV0dXJuIGVCKHQsJCk7ZWxzZSB0aHJvdyBFcnJvcihcImZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYW4gSXRlcmFibGUsIEFzeW5jIEl0ZXJhYmxlLCBJdGVyYXRvciwgQXN5bmMgSXRlcmF0b3IsIG9yIGEgUHJvbWlzZVwiKX10aHJvdyBFcnJvcihcImZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYW4gSXRlcmFibGUsIEFzeW5jIEl0ZXJhYmxlLCBvciBhIFByb21pc2UgZm9yIGFuIEFzeW5jIEl0ZXJhYmxlXCIpfTtlLkFMV0FZUz1lQSxlLkMxPWcsZS5ERUNJTUFMX0ZJVD1lMyxlLkRFQ0lNQUxfUk9VTkQ9ZTUsZS5EZWNvZGVyPW0sZS5FbmNvZGVyPWU0LGUuRkxPQVQzMl9PUFRJT05TPWVuLGUuTkVWRVI9ZTgsZS5QYWNrcj1lNCxlLlJFVVNFX0JVRkZFUl9NT0RFPWV2LGUuVW5wYWNrcj1tLGUuYWRkRXh0ZW5zaW9uPWZ1bmN0aW9uIGUodCl7dmFyICQ7aWYodC5DbGFzcyl7aWYoIXQucGFjayYmIXQud3JpdGUpdGhyb3cgRXJyb3IoXCJFeHRlbnNpb24gaGFzIG5vIHBhY2sgb3Igd3JpdGUgZnVuY3Rpb25cIik7aWYodC5wYWNrJiYhdC50eXBlKXRocm93IEVycm9yKFwiRXh0ZW5zaW9uIGhhcyBubyB0eXBlIChudW1lcmljIGNvZGUgdG8gaWRlbnRpZnkgdGhlIGV4dGVuc2lvbilcIik7ZW8udW5zaGlmdCh0LkNsYXNzKSxlbC51bnNoaWZ0KHQpfSgkPXQpLnVucGFjaz9oWyQudHlwZV09JC51bnBhY2s6aFskLnR5cGVdPSR9LGUuY2xlYXJTb3VyY2U9SCxlLmRlY29kZT1lcixlLmRlY29kZUl0ZXI9ZUwsZS5lbmNvZGU9ZUksZS5lbmNvZGVJdGVyPWVGLGUuaXNOYXRpdmVBY2NlbGVyYXRpb25FbmFibGVkPSExLGUubWFwc0FzT2JqZWN0cz0hMCxlLnBhY2s9ZWssZS5yb3VuZEZsb2F0MzI9ZnVuY3Rpb24gZSh0KXtlaVswXT10O2xldCAkPVFbKDEyNyZlc1szXSk8PDF8ZXNbMl0+PjddO3JldHVybigkKnQrKHQ+MD8uNTotLjUpPj4wKS8kfSxlLnVucGFjaz1ldCxlLnVucGFja011bHRpcGxlPWUkLGUudXNlUmVjb3Jkcz0hMX0pOyIsImNvbnN0IHVudGlsID0gKGNvbmRpdGlvbiwgY2hlY2tJbnRlcnZhbD00MDApID0+IHtcclxuICAgIGlmKCEhY29uZGl0aW9uKCkpIHJldHVybiB0cnVlO1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgICAgIGxldCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcclxuICAgICAgICAgICAgaWYgKCFjb25kaXRpb24oKSkgcmV0dXJuO1xyXG4gICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsKTtcclxuICAgICAgICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgICAgIH0sIGNoZWNrSW50ZXJ2YWwpXHJcbiAgICB9KVxyXG59XHJcblxyXG5jb25zdCBTQ1JPTExfUEFSQU1TID0gT2JqZWN0LmZyZWV6ZSh7XHJcbiAgICBzZW5zaXRpdml0eTogMTAgKiAxMzAwLFxyXG4gICAgbWluQXZnU3BlZWQ6IDAuNSAqIDEzMDAsXHJcbiAgICBtYXhTY3JvbGxUaW1lOiAxNTAsXHJcbiAgICBlZGdlTWFyZ2luOiAxMTcgLy8gb3V0IG9mIDkwMFxyXG59KTtcclxuXHJcbmNvbnN0IGVudmlyb25tZW50ID0gd2luZG93LmVudmlyb25tZW50ID0gdHlwZW9mIGxvY2F0aW9uID09PSAndW5kZWZpbmVkJyA/ICdzZXJ2ZXInIDogKChsb2NhdGlvbi5vcmlnaW4uZW5kc1dpdGgoJzgwODAnKSB8fCBsb2NhdGlvbi5ocmVmLmVuZHNXaXRoKCdlZGl0b3InKSkgPyAnZWRpdG9yJyA6ICdjbGllbnQnKTtcclxuXHJcbmNvbnN0IG1lbW9pemVkQ29sb3JzID0ge307XHJcblxyXG53aW5kb3cuYmxlbmRDb2xvciA9IGJsZW5kQ29sb3I7XHJcbmZ1bmN0aW9uIGJsZW5kQ29sb3IoY29sb3IxLCBjb2xvcjIsIHQpIHtcclxuXHRjb25zdCBtZW1vaXplZEluZGV4ID0gY29sb3IxICsgJ18nICsgY29sb3IyICsgJ18nICsgdDtcclxuXHRpZiAobWVtb2l6ZWRDb2xvcnNbbWVtb2l6ZWRJbmRleF0gIT09IHVuZGVmaW5lZCkge1xyXG5cdFx0cmV0dXJuIG1lbW9pemVkQ29sb3JzW21lbW9pemVkSW5kZXhdO1xyXG5cdH1cclxuXHRjb25zdCByZ2IxID0ge1xyXG5cdFx0cjogcGFyc2VJbnQoY29sb3IxLnNsaWNlKDEsIDMpLCAxNiksXHJcblx0XHRnOiBwYXJzZUludChjb2xvcjEuc2xpY2UoMywgNSksIDE2KSxcclxuXHRcdGI6IHBhcnNlSW50KGNvbG9yMS5zbGljZSg1LCA3KSwgMTYpXHJcblx0fVxyXG5cdGNvbnN0IHJnYjIgPSB7XHJcblx0XHRyOiBwYXJzZUludChjb2xvcjIuc2xpY2UoMSwgMyksIDE2KSxcclxuXHRcdGc6IHBhcnNlSW50KGNvbG9yMi5zbGljZSgzLCA1KSwgMTYpLFxyXG5cdFx0YjogcGFyc2VJbnQoY29sb3IyLnNsaWNlKDUsIDcpLCAxNilcclxuXHR9XHJcblxyXG5cdGNvbnN0IHJlc3VsdCA9IHJnYlRvSGV4KE1hdGguZmxvb3IocmdiMS5yICogKDEgLSB0KSArIHJnYjIuciAqIHQpLCBNYXRoLmZsb29yKHJnYjEuZyAqICgxIC0gdCkgKyByZ2IyLmcgKiB0KSwgTWF0aC5mbG9vcihyZ2IxLmIgKiAoMSAtIHQpICsgcmdiMi5iICogdCkpXHJcblx0bWVtb2l6ZWRDb2xvcnNbbWVtb2l6ZWRJbmRleF0gPSByZXN1bHQ7XHJcblx0cmV0dXJuIHJlc3VsdDtcclxufVxyXG5cclxuZnVuY3Rpb24gcmdiVG9IZXgociwgZywgYikge1xyXG5cdHJldHVybiBcIiNcIiArIGNvbXBvbmVudFRvSGV4KHIpICsgY29tcG9uZW50VG9IZXgoZykgKyBjb21wb25lbnRUb0hleChiKTtcclxufVxyXG5cclxuZnVuY3Rpb24gY29tcG9uZW50VG9IZXgoYykge1xyXG5cdHZhciBoZXggPSBjLnRvU3RyaW5nKDE2KTtcclxuXHRyZXR1cm4gaGV4Lmxlbmd0aCA9PSAxID8gXCIwXCIgKyBoZXggOiBoZXg7XHJcbn1cclxuXHJcbi8vIGZ1bmN0aW9uIHNob3J0QW5nbGVEaXN0KGEwLGExKSB7XHJcbi8vIFx0Y29uc3QgbWF4ID0gTWF0aC5QSSoyO1xyXG4vLyBcdGNvbnN0IGRhID0gKGExIC0gYTApICUgbWF4O1xyXG4vLyBcdHJldHVybiAyKmRhICUgbWF4IC0gZGE7XHJcbi8vIH1cclxuXHJcbndpbmRvdy5qZXdlbEJveFVybCA9ICdodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zL2MvYzMvQV9TbmFwc2hvdF9vZl90aGVfSmV3ZWxfQm94X2NsdXN0ZXJfd2l0aF90aGVfRVNPX1ZMVC5qcGcnO1xyXG53aW5kb3cuZGVjb3JhdGlvbkltZ3MgPSB7fTtcclxuaWYodHlwZW9mIEltYWdlICE9PSAndW5kZWZpbmVkJyl7XHJcblx0d2luZG93LmFycm93SW1nID0gbmV3IEltYWdlKCk7XHJcblx0d2luZG93LnN0YXJJbWcgPSBuZXcgSW1hZ2UoKTtcclxuXHR3aW5kb3cuc3RhckltZy5jcm9zc09yaWdpbiA9IFwiQW5vbnltb3VzXCI7XHJcblx0aWYoZW52aXJvbm1lbnQgPT09ICdlZGl0b3InKXtcclxuXHRcdC8vIGVkaXRvclxyXG5cdFx0KGFzeW5jKCkgPT4ge1xyXG5cdFx0XHRjb25zdCBleHBzID0gYXdhaXQgaW1wb3J0KCcuL2Fzc2V0cy5qcycpO1xyXG5cdFx0XHR3aW5kb3cuYXJyb3dJbWcgPSBleHBzLmRlZmF1bHQuYXJyb3dJbWc7XHJcblx0XHRcdHdpbmRvdy5zdGFySW1nID0gZXhwcy5kZWZhdWx0LnN0YXJJbWc7XHJcblx0XHR9KSgpO1xyXG5cdH0gZWxzZSB7XHJcblx0XHQvLyBjbGllbnRcclxuXHRcdHdpbmRvdy5hcnJvd0ltZy5zcmMgPSAnLi9nZngvYXJyb3cucG5nJztcclxuXHRcdHdpbmRvdy5zdGFySW1nLnNyYyA9IHdpbmRvdy5qZXdlbEJveFVybDtcclxuXHR9XHJcbn0gZWxzZSB7XHJcblx0Ly8gc2VydmVyXHJcblx0d2luZG93LmFycm93SW1nID0gd2luZG93LnN0YXJJbWcgPSB7fTtcclxufVxyXG5cclxud2luZG93LmNvbG91clJnYiA9IChyLGcsYikgPT4ge1xyXG5cdHIgPSBNYXRoLm1heChNYXRoLm1pbihOdW1iZXIociksIDEwMCksIDApICogMi41NTtcclxuXHRnID0gTWF0aC5tYXgoTWF0aC5taW4oTnVtYmVyKGcpLCAxMDApLCAwKSAqIDIuNTU7XHJcblx0YiA9IE1hdGgubWF4KE1hdGgubWluKE51bWJlcihiKSwgMTAwKSwgMCkgKiAyLjU1O1xyXG5cdHIgPSAoJzAnICsgKE1hdGgucm91bmQocikgfHwgMCkudG9TdHJpbmcoMTYpKS5zbGljZSgtMik7XHJcblx0ZyA9ICgnMCcgKyAoTWF0aC5yb3VuZChnKSB8fCAwKS50b1N0cmluZygxNikpLnNsaWNlKC0yKTtcclxuXHRiID0gKCcwJyArIChNYXRoLnJvdW5kKGIpIHx8IDApLnRvU3RyaW5nKDE2KSkuc2xpY2UoLTIpO1xyXG5cdHJldHVybiAnIycgKyByICsgZyArIGI7XHJcbn1cclxuXHJcbmlmKGVudmlyb25tZW50ID09PSAnc2VydmVyJykgZ2xvYmFsLmNvbG91clJnYiA9IHdpbmRvdy5jb2xvdXJSZ2I7XHJcblxyXG53aW5kb3cubWQgPSAoYSkgPT4ge3JldHVybiAoYSAhPT0gYSB8fCBhID09PSB1bmRlZmluZWQgfHwgYSA9PT0gbnVsbCkgPyAwIDogYTt9OyAvLyBtYWtlIGRlZmluZWRcclxud2luZG93Lm1ha2VOdW1iZXIgPSAoYSkgPT4ge3JldHVybiBOdW1iZXIuaXNGaW5pdGUoYSkgPT09IHRydWUgPyBhIDogMDt9O1xyXG53aW5kb3cubWFrZU5vdE5hTiA9IChhKSA9PiB7cmV0dXJuIChhID09PSBhKSA/IGEgOiAwO307XHJcbndpbmRvdy5tYWtlTm90TnVsbCA9IChhKSA9PiB7cmV0dXJuIGEgPT09IG51bGwgPyAwIDogYX07XHJcbndpbmRvdy5tYWtlTm90VW5kZWZpbmVkID0gKGEpID0+IHtyZXR1cm4gYSA9PT0gdW5kZWZpbmVkID8gMCA6IGF9O1xyXG53aW5kb3cucmx0ID0gKGEpID0+IHt3aW5kb3cubG9vcFRyYXAgPSAxMDAwOyByZXR1cm4gYTt9Oy8vIHJlc2V0IGxvb3AgdHJhcFxyXG53aW5kb3cubWFrZVR5cGUgPSAoYSx0eXBlQXJyKSA9PiB7XHJcblx0aWYodHlwZUFyci5pbmNsdWRlcyhnZW5lcmF0ZUNvbm5lY3Rpb25UeXBlKGEpKSA9PT0gdHJ1ZSlyZXR1cm4gYTtcclxuXHRyZXR1cm4gZGVmYXVsdFR5cGVNYXBbdHlwZW9mIGFdO1xyXG59XHJcbndpbmRvdy5nZW5lcmF0ZUNvbm5lY3Rpb25UeXBlID0gKHZhbCkgPT4ge1xyXG5cdGNvbnN0IHR5cGUgPSB0eXBlb2YgdmFsO1xyXG5cdGlmKHR5cGUgPT09ICdudW1iZXInKSByZXR1cm4gJ051bWJlcic7XHJcblx0aWYodHlwZSA9PT0gJ3N0cmluZycpIHtcclxuXHQgIC8vIGlmKHZhbFswXSA9PT0gJyMnKSByZXR1cm4gJ0NvbG91cic7XHJcblx0ICByZXR1cm4gWydTdHJpbmcnLCAnQ29sb3VyJ107XHJcblx0fVxyXG5cdGlmKHR5cGUgPT09ICdib29sZWFuJykgcmV0dXJuICdCb29sZWFuJztcclxuXHRpZihBcnJheS5pc0FycmF5KHZhbCkgPT09IHRydWUpIHJldHVybiAnQXJyYXknO1xyXG5cdHJldHVybiBudWxsO1xyXG59XHJcbmNvbnN0IGRlZmF1bHRUeXBlTWFwID0ge3VuZGVmaW5lZDogMCwgc3RyaW5nOiAnJywgYm9vbGVhbjogdHJ1ZS8qZ2xhc3MgaXMgaGFsZiBmdWxsKi8sIG51bWJlcjogMCwgb2JqZWN0OiBbXS8qZXhjbHVzaXZlbHkgdXNlZCBmb3IgYmxvY2tseSwgd2hlcmUgYXJyYXlzIGFyZSB0aGUgb25seSBvYmplY3QqL307XHJcblxyXG5jb25zdCBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XHJcbmZ1bmN0aW9uIGVuY29kZUF0UG9zaXRpb24oc3RyaW5nLCB1OGFycmF5LCBwb3NpdGlvbikge1xyXG5cdHJldHVybiBlbmNvZGVyLmVuY29kZUludG8oXHJcblx0XHRzdHJpbmcsXHJcblx0XHRwb3NpdGlvbiA/IHU4YXJyYXkuc3ViYXJyYXkocG9zaXRpb24gfCAwKSA6IHU4YXJyYXksXHJcblx0KTtcclxufVxyXG5jb25zdCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCk7XHJcbmZ1bmN0aW9uIGRlY29kZVRleHQodThhcnJheSwgc3RhcnRQb3M9MCl7XHJcblx0cmV0dXJuIGRlY29kZXIuZGVjb2RlKHU4YXJyYXkpLnNsaWNlKHN0YXJ0UG9zKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgeyB1bnRpbCwgU0NST0xMX1BBUkFNUywgYmxlbmRDb2xvciwgZW52aXJvbm1lbnQsIGVuY29kZUF0UG9zaXRpb24sIGRlY29kZVRleHQgfTsiLCJpbXBvcnQgJy4vbXNncGFja3IuanMnO1xyXG5cclxuLy8gdXNlZCBmb3IgZGVjb2RpbmcgY2hhdCBtZXNzYWdlc1xyXG5pbXBvcnQgVXRpbHMgZnJvbSAnLi4vY2xpZW50L3V0aWxzLmpzJztcclxuY29uc3Qge2RlY29kZVRleHR9ID0gVXRpbHM7XHJcblxyXG5jb25zdCBIT1NUID0gbG9jYXRpb24ub3JpZ2luLnJlcGxhY2UoL15odHRwLywgJ3dzJyk7XHJcbmxldCB3cywgbmV4dE1zZ0ZsYWcsIGdhbWVTdGFydGVkID0gZmFsc2U7XHJcblxyXG5jb25zdCBtZXNzYWdlUXVldWUgPSBbXTtcclxud2luZG93LnNlbmQgPSAoZGF0YSkgPT4ge1xyXG4gICAgbWVzc2FnZVF1ZXVlLnB1c2goZGF0YSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGluaXRXUygpIHtcclxuICAgIHdzID0gbmV3IFdlYlNvY2tldChIT1NUKTtcclxuICAgIHdzLmJpbmFyeVR5cGUgPSBcImFycmF5YnVmZmVyXCI7IC8vIHNlbmRzIG1lc3NhZ2VzIHdpdGggYmluYXJ5IGFuZCBzdHVmZiBvLW8geWVzIGkgYW0gdmVyeSBzbWFydFxyXG5cclxuICAgIHdzLmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgaWYobmV4dE1zZ0ZsYWcgIT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgIG1lc3NhZ2VNYXBbbmV4dE1zZ0ZsYWddKGRhdGEuZGF0YSk7XHJcbiAgICAgICAgICAgIG5leHRNc2dGbGFnID0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGRlY29kZWQgPSBuZXcgVWludDhBcnJheShkYXRhLmRhdGEpO1xyXG4gICAgICAgIG1lc3NhZ2VNYXBbZGVjb2RlZFswXV0oZGVjb2RlZCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB3cy5vbm9wZW4gPSAoKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ2Nvbm5lY3RlZCB0byB0aGUgc2VydmVyIScpO1xyXG4gICAgICAgIHdpbmRvdy5zZW5kID0gKGRhdGEpID0+IHtcclxuICAgICAgICAgICAgd3Muc2VuZChkYXRhKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IG1lc3NhZ2VRdWV1ZS5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgIHNlbmQobWVzc2FnZVF1ZXVlW2ldKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgd3Mub25jbG9zZSA9ICgpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZygnV2Vic29ja2V0IGNsb3NlZC4nKTsvLyBBdHRlbXB0aW5nIHRvIHJlY29ubmVjdC4uLlxyXG4gICAgICAgIC8vIFRPRE86IHJlY29ubmVjdGlvbi5cclxuICAgIH1cclxufVxyXG5cclxuaW5pdFdTKCk7XHJcblxyXG53aW5kb3cuY2hhbmdlTWFwID0gZnVuY3Rpb24gY2hhbmdlTWFwKHVybD1gL21hcHMvaHViYCwgbWV0aG9kPSdHRVQnLCBoZWFkZXJzPW5ldyBIZWFkZXJzKCkpe1xyXG4gICAgaGVhZGVycy5hcHBlbmQoJ2lkJywgd2luZG93LmF1dGhJZCk7XHJcbiAgICBmZXRjaChsb2NhdGlvbi5vcmlnaW4gKyB1cmwsIHttZXRob2QsIGhlYWRlcnN9KS50aGVuKGFzeW5jIChkKSA9PiB7XHJcbiAgICAgICAgY29uc3QgbGV2ZWxEYXRhID0gYXdhaXQgZC50ZXh0KCk7XHJcbiAgICAgICAgaWYobGV2ZWxEYXRhID09PSAnbicpIHtjb25zb2xlLmVycm9yKGBmYWlsZWQgdG8gbG9hZCBtYXAgdXJsICR7dXJsfWApOyByZXR1cm47fVxyXG4gICAgICAgIGNvbnN0IFtwbGF5ZXJzLCBzZWxmSWRdID0gSlNPTi5wYXJzZShkLmhlYWRlcnMuZ2V0KFwiWC1Jbml0LURhdGFcIikpO1xyXG5cclxuICAgICAgICBjb25zdCBwcmV2U2NyaXB0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dhbWVTY3JpcHQnKTtcclxuICAgICAgICBpZihwcmV2U2NyaXB0ICE9PSBudWxsKSBwcmV2U2NyaXB0LnJlbW92ZSgpO1xyXG5cclxuICAgICAgICB3aW5kb3cucmVzZXRHYW1lKCk7XHJcbiAgICAgICAgd2luZG93LnBsYXllcnMubGVuZ3RoID0gd2luZG93Lm9ic3RhY2xlcy5sZW5ndGggPSAwO1xyXG4gICAgICAgIGNvbnN0IHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcclxuICAgICAgICBzLmlkID0gXCJnYW1lU2NyaXB0XCI7XHJcbiAgICAgICAgcy50ZXh0ID0gbGV2ZWxEYXRhO1xyXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQocyk7XHJcblxyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBwbGF5ZXJzLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgaWYocGxheWVyc1tpXSA9PT0gdW5kZWZpbmVkKSB7d2luZG93LnBsYXllcnNbaV0gPSB1bmRlZmluZWQ7IGNvbnRpbnVlO31cclxuICAgICAgICAgICAgY29uc3QgcGxheWVyRGF0YSA9IHBsYXllcnNbaV07XHJcbiAgICAgICAgICAgIGNvbnN0IHAgPSBjcmVhdGVQbGF5ZXJGcm9tRGF0YShwbGF5ZXJEYXRhKTtcclxuICAgICAgICAgICAgd2luZG93LnBsYXllcnNbaV0gPSBwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgd2luZG93LnNlbGZJZCA9IHNlbGZJZDtcclxuXHJcbiAgICAgICAgd2luZG93LndvbiA9IGZhbHNlO1xyXG4gICAgICAgIGlmKCFnYW1lU3RhcnRlZCkge1xyXG4gICAgICAgICAgICB3aW5kb3cuc3RhcnRHYW1lKCk7XHJcbiAgICAgICAgICAgIGdhbWVTdGFydGVkID0gdHJ1ZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB3aW5kb3cucmVzcGF3blBsYXllcigpO1xyXG4gICAgICAgIH1cclxuICAgIH0pXHJcbn1cclxuXHJcbi8vIGZpcnN0IGJ5dGUgZW5jb2RlcyB0aGUgbWVzc2FnZSB0eXBlXHJcbmNvbnN0IG1lc3NhZ2VNYXAgPSBbXHJcbiAgICAvLyAwIC0gc2V0IGF1dGggaWQgKG5vdCBjbGllbnRpZClcclxuICAgIChkYXRhKSA9PiB7XHJcbiAgICAgICAgY29uc3QgdTMyID0gbmV3IFVpbnQzMkFycmF5KGRhdGEuYnVmZmVyKTtcclxuICAgICAgICB3aW5kb3cuYXV0aElkID0gdTMyWzFdO1xyXG5cclxuICAgICAgICBjb25zdCB1c2VybmFtZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VybmFtZScpO1xyXG4gICAgICAgIGNvbnN0IHBhc3N3b3JkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Bhc3N3b3JkJyk7XHJcbiAgICAgICAgaWYodXNlcm5hbWUgPT09IG51bGwgfHwgcGFzc3dvcmQgPT09IG51bGwpe1xyXG4gICAgICAgICAgICAvLyBnZXQgdHV0b3JpYWxcclxuICAgICAgICAgICAgd2luZG93Lm9ua2V5ZG93bih7Y29kZTogJ0tleVonLCByZXBlYXQ6IGZhbHNlLCB0eXBlOiAna2V5ZG93bid9KTtcclxuICAgICAgICAgICAgd2luZG93LmNoYW5nZU1hcCgnL3R1dG9yaWFsJyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgLy8gbG9nIGluXHJcbiAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xyXG4gICAgICAgICAgICBoZWFkZXJzLmFwcGVuZCgndScsIHVzZXJuYW1lKTtcclxuICAgICAgICAgICAgaGVhZGVycy5hcHBlbmQoJ3AnLCBwYXNzd29yZCk7XHJcbiAgICAgICAgICAgIHdpbmRvdy5jaGFuZ2VNYXAoJy9qb2luJywgJ1BPU1QnLCBoZWFkZXJzKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgLy8gMSAtIHJlbG9hZCBwYWdlIChmb3IgaG90IHJlZnJlc2gpXHJcbiAgICAoKSA9PiB7XHJcbiAgICAgICAgbG9jYXRpb24ucmVsb2FkKCk7XHJcbiAgICB9LFxyXG4gICAgLy8gMiAtIGNoYW5nZSB0byBjcmVhdGUgYWNjb3VudCBwYWdlXHJcbiAgICAoZGF0YSkgPT4ge1xyXG4gICAgICAgIGxvY2F0aW9uLnJlcGxhY2UobG9jYXRpb24ub3JpZ2luICsgJy9jcmVhdGUnKTtcclxuICAgIH0sXHJcbiAgICAvLyAzIC0gZmxhZyBuZXh0IG1lc3NhZ2UgYXMgdHlwZVxyXG4gICAgKGRhdGEpID0+IHtcclxuICAgICAgICBuZXh0TXNnRmxhZyA9IGRhdGFbMV07XHJcbiAgICB9LFxyXG4gICAgLy8gNCAtIHBsYXllciB4IGFuZCB5XHJcbiAgICAoZGF0YSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHJhdyA9IGRhdGEuYnVmZmVyO1xyXG4gICAgICAgIGNvbnN0IHUxNiA9IG5ldyBVaW50MTZBcnJheShyYXcpO1xyXG4gICAgICAgIGNvbnN0IGlkID0gdTE2WzFdO1xyXG5cclxuICAgICAgICBpZihpZCA9PT0gd2luZG93LnNlbGZJZCkgcmV0dXJuO1xyXG5cclxuICAgICAgICBjb25zdCBmMzIgPSBuZXcgRmxvYXQzMkFycmF5KHJhdyk7XHJcbiAgICAgICAgd2luZG93LnBsYXllcnNbaWRdLnBvcy54ID0gZjMyWzFdO1xyXG4gICAgICAgIHdpbmRvdy5wbGF5ZXJzW2lkXS5wb3MueSA9IGYzMlsyXTtcclxuICAgIH0sXHJcbiAgICAvLyA1IC0gbmV3IHBsYXllclxyXG4gICAgKGRhdGEpID0+IHtcclxuICAgICAgICBsZXQgcCA9IGNyZWF0ZVBsYXllckZyb21EYXRhKG1zZ3BhY2tyLnVucGFjayhkYXRhKSk7XHJcbiAgICAgICAgd2luZG93LnBsYXllcnNbcC5pZF0gPSBwO1xyXG4gICAgfSxcclxuICAgIC8vIDYgLSByZW1vdmUgcGxheWVyXHJcbiAgICAoZGF0YSkgPT4ge1xyXG4gICAgICAgIGxldCBpZCA9IG5ldyBVaW50MTZBcnJheShkYXRhLmJ1ZmZlcilbMV07XHJcbiAgICAgICAgd2luZG93LnBsYXllcnNbaWRdID0gdW5kZWZpbmVkOy8vIG1ha2UgYW1lcmljYSB1bmRlZmluZWQgYWdhaW5cclxuICAgIH0sXHJcbiAgICAvLyA3IC0gY2hhdCBtZXNzYWdlXHJcbiAgICAoZGF0YSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGNoYXRNc2cgPSBkZWNvZGVUZXh0KGRhdGEsIDIpO1xyXG4gICAgICAgIGNvbnN0IHR5cGUgPSBbJ25vcm1hbCcsICdzeXN0ZW0nLCAnZGV2JywgJ2d1ZXN0J11bZGF0YVsxXV07XHJcblxyXG4gICAgICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIGlmICh0eXBlICE9PSAnc3lzdGVtJykge1xyXG4gICAgICAgICAgICBkaXYuY2xhc3NMaXN0LmFkZCgnY2hhdC1tZXNzYWdlJyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZGl2LmNsYXNzTGlzdC5hZGQoJ3N5c3RlbS1tZXNzYWdlJyk7XHJcbiAgICAgICAgICAgIC8vIGlmIChkYXRhLmRpZmZpY3VsdHkgIT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIC8vICAgICBkaXYuY2xhc3NMaXN0LmFkZChkYXRhLmRpZmZpY3VsdHkudG9Mb3dlckNhc2UoKSk7XHJcbiAgICAgICAgICAgIC8vIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZGl2LmlubmVySFRNTCA9IGAke3R5cGUgPT09ICdzeXN0ZW0nXHJcbiAgICAgICAgICAgID8gJzxzcGFuIGNsYXNzPVwicmFpbmJvd1wiPltTRVJWRVJdPC9zcGFuPidcclxuICAgICAgICAgICAgOiB0eXBlID09PSAnZGV2J1xyXG4gICAgICAgICAgICA/ICc8c3BhbiBjbGFzcz1cInJhaW5ib3dcIj5bREVWXTwvc3Bhbj4gJ1xyXG4gICAgICAgICAgICA6ICcnfSR7dHlwZSA9PT0gJ2d1ZXN0JyA/ICc8c3BhbiBjbGFzcz1cImd1ZXN0XCI+JyA6ICcnfSR7XHJcbiAgICAgICAgICAgICAgICBjaGF0TXNnXHJcbiAgICAgICAgICAgIH0ke3R5cGUgPT09ICdndWVzdCcgPyAnPC9zcGFuPicgOiAnJ31gO1xyXG4gICAgICAgIGNvbnN0IGNoYXRNZXNzYWdlRGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNoYXQtZGl2Jyk7XHJcbiAgICAgICAgY2hhdE1lc3NhZ2VEaXYuYXBwZW5kQ2hpbGQoZGl2KTtcclxuICAgICAgICBjaGF0TWVzc2FnZURpdi5zY3JvbGxUb3AgPSBjaGF0TWVzc2FnZURpdi5zY3JvbGxIZWlnaHQ7XHJcbiAgICB9LFxyXG4gICAgLy8gOCAtIHRvZ2dsZSBnb2Rtb2RlXHJcbiAgICAoZGF0YSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHUxNiA9IG5ldyBVaW50MTZBcnJheShkYXRhLmJ1ZmZlcik7XHJcbiAgICAgICAgY29uc3QgaWQgPSB1MTZbMV07XHJcblxyXG4gICAgICAgIGlmKGlkID09PSB3aW5kb3cuc2VsZklkKSByZXR1cm47XHJcblxyXG4gICAgICAgIHdpbmRvdy5wbGF5ZXJzW2lkXS5nb2QgPSBkYXRhWzFdID09PSAxO1xyXG4gICAgfSxcclxuICAgIC8vIDkgLSBzZXQgc2hpcCBhbmdsZVxyXG4gICAgKGRhdGEpID0+IHtcclxuICAgICAgICBjb25zdCB1MTYgPSBuZXcgVWludDE2QXJyYXkoZGF0YS5idWZmZXIpO1xyXG4gICAgICAgIGNvbnN0IGlkID0gdTE2WzFdO1xyXG4gICAgICAgIGlmKGlkID09PSB3aW5kb3cuc2VsZklkKSByZXR1cm47XHJcblxyXG4gICAgICAgIGNvbnN0IGYzMiA9IG5ldyBGbG9hdDMyQXJyYXkoZGF0YS5idWZmZXIpO1xyXG4gICAgICAgIHdpbmRvdy5wbGF5ZXJzW2lkXS5zaGlwID0gdHJ1ZTtcclxuICAgICAgICB3aW5kb3cucGxheWVyc1tpZF0uc2hpcEFuZ2xlID0gZjMyWzFdO1xyXG4gICAgfSxcclxuICAgIC8vIDEwIC0gZGlzYWJsZSBzaGlwXHJcbiAgICAoZGF0YSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHUxNiA9IG5ldyBVaW50MTZBcnJheShkYXRhLmJ1ZmZlcik7XHJcbiAgICAgICAgY29uc3QgaWQgPSB1MTZbMV07XHJcbiAgICAgICAgaWYoaWQgPT09IHdpbmRvdy5zZWxmSWQpIHJldHVybjtcclxuXHJcbiAgICAgICAgd2luZG93LnBsYXllcnNbaWRdLnNoaXAgPSBmYWxzZTtcclxuICAgIH0sXHJcbiAgICAvLyAxMSAtIHNldCBncmFwcGxlXHJcbiAgICAoZGF0YSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHUxNiA9IG5ldyBVaW50MTZBcnJheShkYXRhLmJ1ZmZlcik7XHJcbiAgICAgICAgY29uc3QgaWQgPSB1MTZbMV07XHJcbiAgICAgICAgaWYoaWQgPT09IHdpbmRvdy5zZWxmSWQpIHJldHVybjtcclxuXHJcbiAgICAgICAgY29uc3QgZjMyID0gbmV3IEZsb2F0MzJBcnJheShkYXRhLmJ1ZmZlcik7XHJcbiAgICAgICAgd2luZG93LnBsYXllcnNbaWRdLmdyYXBwbGUgPSB0cnVlO1xyXG4gICAgICAgIHdpbmRvdy5wbGF5ZXJzW2lkXS5ncmFwcGxlWCA9IGYzMlsxXTtcclxuICAgICAgICB3aW5kb3cucGxheWVyc1tpZF0uZ3JhcHBsZVkgPSBmMzJbMl07XHJcbiAgICB9LFxyXG4gICAgLy8gMTMgLSBkaXNhYmxlIGdyYXBwbGVcclxuICAgIChkYXRhKSA9PiB7XHJcbiAgICAgICAgY29uc3QgdTE2ID0gbmV3IFVpbnQxNkFycmF5KGRhdGEuYnVmZmVyKTtcclxuICAgICAgICBjb25zdCBpZCA9IHUxNlsxXTtcclxuICAgICAgICBpZihpZCA9PT0gd2luZG93LnNlbGZJZCkgcmV0dXJuO1xyXG5cclxuICAgICAgICB3aW5kb3cucGxheWVyc1tpZF0uZ3JhcHBsZSA9IGZhbHNlO1xyXG4gICAgfSxcclxuICAgIC8vIDEzIC0gc2V0IGRlYXRoIHRpbWVyXHJcbiAgICAoZGF0YSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHUxNiA9IG5ldyBVaW50MTZBcnJheShkYXRhLmJ1ZmZlcik7XHJcbiAgICAgICAgY29uc3QgaWQgPSB1MTZbMV07XHJcbiAgICAgICAgaWYoaWQgPT09IHdpbmRvdy5zZWxmSWQpIHJldHVybjtcclxuXHJcbiAgICAgICAgY29uc3QgZjMyID0gbmV3IEZsb2F0MzJBcnJheShkYXRhLmJ1ZmZlcik7XHJcbiAgICAgICAgd2luZG93LnBsYXllcnNbaWRdLmRlYXRoVGltZXIgPSB0cnVlO1xyXG4gICAgICAgIHdpbmRvdy5wbGF5ZXJzW2lkXS5kZWF0aFRpbWUgPSBmMzJbMV07XHJcbiAgICB9LFxyXG4gICAgLy8gMTQgLSBkaXNhYmxlIGRlYXRoIHRpbWVyXHJcbiAgICAoZGF0YSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHUxNiA9IG5ldyBVaW50MTZBcnJheShkYXRhLmJ1ZmZlcik7XHJcbiAgICAgICAgY29uc3QgaWQgPSB1MTZbMV07XHJcbiAgICAgICAgaWYoaWQgPT09IHdpbmRvdy5zZWxmSWQpIHJldHVybjtcclxuXHJcbiAgICAgICAgd2luZG93LnBsYXllcnNbaWRdLmRlYXRoVGltZXIgPSBmYWxzZTtcclxuICAgIH0sXHJcbiAgICAvLyAxNSAtIGNoYW5nZSBkZWFkXHJcbiAgICAoZGF0YSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHUxNiA9IG5ldyBVaW50MTZBcnJheShkYXRhLmJ1ZmZlcik7XHJcbiAgICAgICAgY29uc3QgaWQgPSB1MTZbMV07XHJcbiAgICAgICAgaWYoaWQgPT09IHdpbmRvdy5zZWxmSWQpIHJldHVybjtcclxuXHJcbiAgICAgICAgd2luZG93LnBsYXllcnNbaWRdLmRlYWQgPSBkYXRhWzFdID09PSAxO1xyXG4gICAgfSxcclxuXVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlUGxheWVyRnJvbURhdGEoZGF0YSl7XHJcbiAgICBjb25zdCBwID0gd2luZG93LmNyZWF0ZVBsYXllcigpO1xyXG5cclxuICAgIC8vIGlmIHRoaXMgZ2V0cyBiaWdnZXIgd2UgbWF5IHdhbnQgdG9cclxuICAgIC8vIGZvcihsZXQga2V5IGluIGRhdGEpXHJcbiAgICBwLnBvcy54ID0gZGF0YS5wb3MueDtcclxuICAgIHAucG9zLnkgPSBkYXRhLnBvcy55O1xyXG4gICAgcC5uYW1lID0gZGF0YS5uYW1lO1xyXG4gICAgcC5kZWFkID0gZGF0YS5kZWFkO1xyXG4gICAgcC5pZCA9IGRhdGEuaWQ7XHJcbiAgICBwLmdvZCA9IGRhdGEuZ29kO1xyXG4gICAgcC5zaGlwID0gZGF0YS5zaGlwO1xyXG4gICAgcC5zaGlwQW5nbGUgPSBkYXRhLnNoaXBBbmdsZTtcclxuICAgIHAuZ3JhcHBsZSA9IGRhdGEuZ3JhcHBsZTtcclxuICAgIHAuZ3JhcHBsZVggPSBkYXRhLmdyYXBwbGVYO1xyXG4gICAgcC5ncmFwcGxlWSA9IGRhdGEuZ3JhcHBsZVk7XHJcbiAgICBwLmRlYXRoVGltZXIgPSBkYXRhLmRlYXRoVGltZXI7XHJcbiAgICBwLmRlYXRoVGltZSA9IGRhdGEuZGVhdGhUaW1lO1xyXG5cclxuICAgIHJldHVybiBwO1xyXG59IiwiaW1wb3J0IFV0aWxzIGZyb20gJy4vdXRpbHMuanMnO1xyXG5jb25zdCB7IHVudGlsLCBlbnZpcm9ubWVudCB9ID0gVXRpbHM7XHJcblxyXG5sZXQgbmV4dENvZGU7XHJcbmNvbnN0IG5leHRDb2RlTG9hZGVkID0gKCkgPT4geyByZXR1cm4gbmV4dENvZGUgIT09IHVuZGVmaW5lZDsgfTtcclxuY29uc3QgaXNTZXJ2ZXIgPSB0eXBlb2YgbG9jYXRpb24gPT09ICd1bmRlZmluZWQnO1xyXG5sZXQgcmVxVXJsID0gaXNTZXJ2ZXIgPT09IHRydWUgPyAnJyA6IGAke2xvY2F0aW9uLm9yaWdpbn0vZ2FtZWA7XHJcbmxldCBsb2FkaW5nQ3VycmVudCA9IGZhbHNlO1xyXG5sZXQgbmV4dEZpbGVOYW1lID0gJyc7XHJcbmxldCBsYXN0RmlsZU5hbWVTdGFjayA9IFtdO1xyXG5sZXQgZm9yd2FyZEZpbGVOYW1lU3RhY2sgPSBbXTtcclxud2luZG93LmxldmVsRmlsZU5hbWUgPSAnJztcclxuXHJcbndpbmRvdy5pc0V4Q2xpZW50ID0gdHJ1ZTsvLyBURU1QXHJcblxyXG4vLyBuZXZlciBnZXQgY29kZSBmcm9tIHNlcnZlciBpbiBlZGl0b3JcclxuaWYoZW52aXJvbm1lbnQgPT09ICdlZGl0b3InIHx8IGVudmlyb25tZW50ID09PSAnc2VydmVyJyB8fCB3aW5kb3cuaXNFeENsaWVudCA9PT0gdHJ1ZSl7XHJcbiAgICBnZXROZXh0Q29kZSA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICBhd2FpdCB1bnRpbCgoKSA9PiB7IHJldHVybiBmYWxzZTsgfSlcclxuICAgIH07XHJcbiAgICBzY3JvbGwgPSAoKSA9PiB7fTtcclxufSBlbHNlIGlmKGxvY2F0aW9uLmhyZWYuaW5jbHVkZXMoJ3N0YW5kYWxvbmUnKSA9PT0gdHJ1ZSl7XHJcbiAgICB3aW5kb3cuc3RhbmRhbG9uZSA9IHRydWU7XHJcbiAgICBjb25zdCBzcGxpdCA9IGxvY2F0aW9uLmhyZWYuc3BsaXQoJy8nKTtcclxuICAgIHJlcVVybCArPSAnLycgKyBzcGxpdFtzcGxpdC5sZW5ndGggLSAxXTtcclxuICAgIHNjcm9sbCA9ICgpID0+IHt9O1xyXG59IGVsc2UgaWYobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3R1dG9yaWFsQ29tcGxldGVkJykgPT09IG51bGwpIHtcclxuICAgIGxldCBnZXROZXh0Q29kZUxvYWRlZCA9IGZhbHNlO1xyXG4gICAgZ2V0TmV4dENvZGUgPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgYXdhaXQgdW50aWwoKCkgPT4ge3JldHVybiBnZXROZXh0Q29kZUxvYWRlZCAhPT0gZmFsc2V9KTtcclxuICAgICAgICByZXR1cm4gZ2V0TmV4dENvZGUoKTtcclxuICAgIH07XHJcbiAgICB3aW5kb3cudHV0b3JpYWwgPSB0cnVlO1xyXG4gICAgKGFzeW5jICgpID0+IHtcclxuICAgICAgICBjb25zdCBleHBzID0gYXdhaXQgaW1wb3J0KCcuL3R1dG9yaWFsLmpzJyk7XHJcbiAgICAgICAgZ2V0TmV4dENvZGUgPSBleHBzLmRlZmF1bHQ7XHJcbiAgICAgICAgZ2V0TmV4dENvZGVMb2FkZWQgPSB0cnVlO1xyXG4gICAgfSkoKTtcclxufVxyXG5cclxuLy8gZ2V0IGZpcnN0IGNvZGVcclxuZ2V0TmV4dENvZGUoKS50aGVuKGFzeW5jIChjb2RlKSA9PiB7XHJcbiAgICAvLyBsb2FkIGZpcnN0IHJlcXVlc3RcclxuICAgIG5leHRDb2RlID0gY29kZTtcclxuICAgIHJlcGxhY2VTY3JpcHQoKTtcclxuXHJcbiAgICBpZih3aW5kb3cuc3RhbmRhbG9uZSA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgZ2V0TmV4dENvZGUgPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICAgIGF3YWl0IHVudGlsKCgpID0+IHsgcmV0dXJuIGZhbHNlOyB9KVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGxvYWQgbmV4dCBjb2RlIHdoZW4gaXQgYXJyaXZlc1xyXG4gICAgbmV4dENvZGUgPSBhd2FpdCBmaXJzdE5leHRDb2RlO1xyXG59KVxyXG5cclxuLy8gZ2V0IG5leHQgY29kZVxyXG5sZXQgZmlyc3ROZXh0Q29kZSA9IGdldE5leHRDb2RlKCk7XHJcblxyXG4vLyBvbiBzY3JvbGxcclxuYXN5bmMgZnVuY3Rpb24gc2Nyb2xsKHVwPWZhbHNlKXtcclxuICAgIC8vIGRvbid0IGFsbG93IHNjcm9sbGluZyBpZiB3ZSdyZSBsb2FkaW5nIHRoZSBjdXJyZW50IGNvZGVcclxuICAgIC8vIGl0J2xsIGxvb2sgdGhlIHNhbWUgdG8gdGhlIHVzZXIgYW55d2F5c1xyXG4gICAgaWYobG9hZGluZ0N1cnJlbnQgPT09IHRydWUpIHJldHVybjtcclxuICAgIGlmKHVwID09PSB0cnVlKXtcclxuICAgICAgICBpZihsYXN0RmlsZU5hbWVTdGFjay5sZW5ndGggPT09IDApIHJldHVybjtcclxuICAgICAgICB2YXIgbGFzdENvZGUgPSBuZXh0Q29kZTtcclxuICAgICAgICBmb3J3YXJkRmlsZU5hbWVTdGFjay5wdXNoKHdpbmRvdy5sZXZlbEZpbGVOYW1lKTtcclxuICAgICAgICBuZXh0Q29kZSA9IGF3YWl0IGdldExhc3RDb2RlKGxhc3RGaWxlTmFtZVN0YWNrLnBvcCgpKTtcclxuICAgIH0gZWxzZSBpZih3aW5kb3cubGV2ZWxGaWxlTmFtZSAhPT0gJycpe1xyXG4gICAgICAgIGxhc3RGaWxlTmFtZVN0YWNrLnB1c2god2luZG93LmxldmVsRmlsZU5hbWUpO1xyXG4gICAgICAgIGlmKGxhc3RGaWxlTmFtZVN0YWNrLmxlbmd0aCA+IDQyKSBsYXN0RmlsZU5hbWVTdGFjay5zaGlmdCgpO1xyXG4gICAgICAgIGlmKGZvcndhcmRGaWxlTmFtZVN0YWNrLmxlbmd0aCAhPT0gMCkgbmV4dENvZGUgPSBhd2FpdCBnZXRMYXN0Q29kZShmb3J3YXJkRmlsZU5hbWVTdGFjay5wb3AoKSk7XHJcbiAgICB9XHJcblxyXG4gICAgd2luZG93LnNjcm9sbGluZ1VwID0gdXAgPT09IHRydWU7XHJcbiAgICB3aW5kb3cubGFzdE9ic3RhY2xlcyA9IFtdO1xyXG4gICAgZm9yKGxldCBpID0gMDsgaSA8IG9ic3RhY2xlcy5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgd2luZG93Lmxhc3RPYnN0YWNsZXMucHVzaChvYnN0YWNsZXNbaV0pO1xyXG4gICAgfVxyXG4gICAgZm9yKGxldCBrZXkgaW4gd2luZG93LmNvbG9ycyl7XHJcbiAgICAgICAgd2luZG93Lmxhc3RDb2xvcnNba2V5XSA9IHdpbmRvdy5jb2xvcnNba2V5XTtcclxuICAgICAgICB3aW5kb3cuY29sb3JzW2tleV0gPSB3aW5kb3cuZGVmYXVsdENvbG9yc1trZXldO1xyXG4gICAgfVxyXG4gICAgd2luZG93Lmxhc3RQbGF5ZXJEYXRhID0gW3BsYXllci5wb3MueCwgcGxheWVyLnBvcy55XTtcclxuXHJcbiAgICAvLyBpZiB3ZSBhbHJlYWR5IGhhdmUgdGhlIG5leHQgY29kZVxyXG4gICAgaWYobmV4dENvZGUgIT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgLy8gYXBwZW5kIG5ldyBzY3JpcHQgdG8gcnVuIHNlY29uZCBnYW1lXHJcbiAgICAgICAgcmVwbGFjZVNjcmlwdCgpO1xyXG5cclxuICAgICAgICAvLyBhbmltYXRpb24gdGltZXJcclxuICAgICAgICB3aW5kb3cuc2Nyb2xsQW5pbWF0aW9uID0gMDtcclxuXHJcbiAgICAgICAgLy8gZmV0Y2ggbmV3IG5leHQgY29kZVxyXG4gICAgICAgIGlmKHVwID09PSB0cnVlKSBuZXh0Q29kZSA9IGxhc3RDb2RlO1xyXG4gICAgICAgIGVsc2UgbmV4dENvZGUgPSBhd2FpdCBnZXROZXh0Q29kZSgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBsb2FkaW5nIGN1cnJlbnQsIG5leHRjb2RlXHJcbiAgICAgICAgbG9hZGluZ0N1cnJlbnQgPSB0cnVlO1xyXG5cclxuICAgICAgICAvLyBsb2FkIGJsYW5rIHNjcmVlbiBmb3Igbm93XHJcbiAgICAgICAgcmVtb3ZlU2NyaXB0KCk7XHJcblxyXG4gICAgICAgIC8vIGFuaW1hdGlvbiB0aW1lclxyXG4gICAgICAgIHdpbmRvdy5zY3JvbGxBbmltYXRpb24gPSAwO1xyXG5cclxuICAgICAgICAvLyBjb2RlIGlzIG9uIGl0cyB3YXksIHdhaXQgdW50aWwgaXQgZ2V0cyBoZXJlXHJcbiAgICAgICAgYXdhaXQgdW50aWwobmV4dENvZGVMb2FkZWQsIDE2LjY2KTtcclxuXHJcbiAgICAgICAgLy8gc2V0IGNvZGVcclxuICAgICAgICByZXBsYWNlU2NyaXB0KCk7XHJcblxyXG4gICAgICAgIC8vIHVubG9jayBtdXRleFxyXG4gICAgICAgIGxvYWRpbmdDdXJyZW50ID0gZmFsc2U7XHJcblxyXG4gICAgICAgIC8vIGZldGNoIG5ldyBuZXh0IGNvZGVcclxuICAgICAgICBuZXh0Q29kZSA9IGF3YWl0IGdldE5leHRDb2RlKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbndpbmRvdy53b24gPSBmYWxzZTtcclxuYXN5bmMgZnVuY3Rpb24gZ2V0TmV4dENvZGUoKXtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2gocmVxVXJsKTtcclxuICAgIGlmICghcmVzcG9uc2Uub2spIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGZldGNoICR7cmVxVXJsfWApO1xyXG4gICAgbmV4dEZpbGVOYW1lID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoJ0ZuJyk7XHJcbiAgICByZXR1cm4gcmVzcG9uc2UudGV4dCgpO1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBnZXRMYXN0Q29kZShmaWxlTmFtZSl7XHJcbiAgICBjb25zdCBmaWxlTmFtZVdpdGhvdXRUaGVKUyA9IGZpbGVOYW1lLnNsaWNlKDAsIGZpbGVOYW1lLmxlbmd0aC0zKTtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2gocmVxVXJsICsgJy8nICsgZmlsZU5hbWVXaXRob3V0VGhlSlMpO1xyXG4gICAgaWYgKCFyZXNwb25zZS5vaykgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZmV0Y2ggJHtyZXFVcmx9YCk7XHJcbiAgICBuZXh0RmlsZU5hbWUgPSBmaWxlTmFtZTtcclxuICAgIHJldHVybiByZXNwb25zZS50ZXh0KCk7XHJcbn1cclxuXHJcbi8vIHJlcGxhY2VzIGNvZGUgcnVubmluZyB3aXRoIG5leHRDb2RlXHJcbmFzeW5jIGZ1bmN0aW9uIHJlcGxhY2VTY3JpcHQoKXtcclxuICAgIHJlbW92ZVNjcmlwdCgpO1xyXG5cclxuICAgIHdpbmRvdy5yZXNldEdhbWUoKTtcclxuICAgIHN0b3BNdXNpYygpO1xyXG5cclxuICAgIGNvbnN0IHNjcmlwdEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcclxuICAgIHNjcmlwdEVsZW1lbnQuaWQgPSBcImdhbWVTY3JpcHRcIjtcclxuICAgIHNjcmlwdEVsZW1lbnQudGV4dCA9IG5leHRDb2RlO1xyXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JpcHRFbGVtZW50KTtcclxuXHJcbiAgICBuZXh0Q29kZSA9IHVuZGVmaW5lZDtcclxuICAgIHdpbmRvdy5sZXZlbEZpbGVOYW1lID0gbmV4dEZpbGVOYW1lO1xyXG59XHJcblxyXG53aW5kb3cucmVtb3ZlU2NyaXB0ID0gZnVuY3Rpb24gcmVtb3ZlU2NyaXB0KCl7XHJcbiAgICBjb25zdCBsYXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJnYW1lU2NyaXB0XCIpO1xyXG4gICAgaWYobGFzdCAhPT0gbnVsbCkgbGFzdC5yZW1vdmUoKTtcclxuICAgIHdpbmRvdy5yZXNldEdhbWUoKTtcclxuICAgIHN0b3BNdXNpYygpO1xyXG59XHJcblxyXG53aW5kb3cucmVzZXRHYW1lID0gKCkgPT4ge1xyXG4gICAgd2luZG93Lm9ic3RhY2xlcy5sZW5ndGggPSB3aW5kb3cubW91c2VVcEZ1bmN0aW9ucy5sZW5ndGggPSB3aW5kb3cubW91c2VEb3duRnVuY3Rpb25zLmxlbmd0aCA9IHdpbmRvdy5tb3VzZU1vdmVGdW5jdGlvbnMubGVuZ3RoID0gd2luZG93LnJlc2l6ZUZucy5sZW5ndGggPSAwO1xyXG4gICAgaWYod2luZG93LmVudmlyb25tZW50ICE9PSAnZWRpdG9yJykge3dpbmRvdy5yZXNwYXduUGxheWVyKCk7IC8qcGxheWVyLnJlbmRlclJhZGl1cyA9IHBsYXllci5zYXQucjsqLyB9XHJcbiAgICBlbHNlIHt3aW5kb3cuaW5maW5pdGVMb29wID0gZmFsc2U7fVxyXG4gICAgZm9yKGxldCBrZXkgaW4gd2luZG93LmRlZmF1bHRDb2xvcnMpIHsgd2luZG93LmNvbG9yc1trZXldID0gd2luZG93LmRlZmF1bHRDb2xvcnNba2V5XTsgfVxyXG4gICAgaWYod2luZG93LmNvbG9ycy52aWduZXR0ZSAhPT0gdW5kZWZpbmVkKSB3aW5kb3cuY29sb3JzLnZpZ25ldHRlID0gc3RydWN0dXJlZENsb25lKHdpbmRvdy5kZWZhdWx0Q29sb3JzLnZpZ25ldHRlKTtcclxuICAgIHdpbmRvdy5tb3VzZURvd25GdW5jdGlvbnMucHVzaCgoKSA9PiB7XHJcbiAgICAgICAgaWYocGxheWVyLmRlYWQgPT09IHRydWUpIHdpbmRvdy5yZXNwYXduUGxheWVyKCk7XHJcbiAgICB9KVxyXG4gICAgaWYod2luZG93LmFkZFNpZGVNZW51RXZ0TGlzdGVuZXJzICE9PSB1bmRlZmluZWQpIHdpbmRvdy5hZGRTaWRlTWVudUV2dExpc3RlbmVycyhuZXh0RmlsZU5hbWUpO1xyXG4gICAgd2luZG93LnNwYXduUG9zaXRpb24ueCA9IDEwMDtcclxuICAgIHdpbmRvdy5zcGF3blBvc2l0aW9uLnkgPSAxNTAwO1xyXG4gICAgY29uc3QgcGxheWVyID0gd2luZG93LnBsYXllcnNbd2luZG93LnNlbGZJZF07XHJcbiAgICBpZihwbGF5ZXIgIT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgcGxheWVyLnNhdC5yID0gNDkuNTtcclxuICAgICAgICBwbGF5ZXIuc3BlZWQgPSBwbGF5ZXIuYmFzZVNwZWVkID0gMC40MztcclxuICAgIH1cclxuICAgIHdpbmRvdy5pZFRvT2JzID0ge307XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHNjcm9sbDsiLCJpbXBvcnQgVXRpbHMgZnJvbSAnLi91dGlscy5qcyc7XHJcbmNvbnN0IHsgZW52aXJvbm1lbnQsIGJsZW5kQ29sb3IsIGVuY29kZUF0UG9zaXRpb24gfSA9IFV0aWxzO1xyXG5pbXBvcnQgc2Nyb2xsIGZyb20gJy4vc2Nyb2xsLmpzJztcclxubGV0IHRvU2Nyb2xsID0gZmFsc2U7XHJcblxyXG53aW5kb3cucmVzcGF3blBsYXllciA9ICgpID0+IHtcclxuICAgIGNvbnN0IHBsYXllciA9IHdpbmRvdy5wbGF5ZXJzW3dpbmRvdy5zZWxmSWRdO1xyXG4gICAgaWYocGxheWVyID09PSB1bmRlZmluZWQpIHJldHVybjtcclxuICAgIHBsYXllci5wb3MueCA9IHdpbmRvdy5zcGF3blBvc2l0aW9uLng7XHJcbiAgICBwbGF5ZXIucG9zLnkgPSB3aW5kb3cuc3Bhd25Qb3NpdGlvbi55O1xyXG4gICAgcGxheWVyLnJlbmRlclJhZGl1cyA9IDA7XHJcbiAgICBwbGF5ZXIuZGVhZCA9IGZhbHNlO1xyXG4gICAgcGxheWVyLmZvcmNlcy5sZW5ndGggPSAwO1xyXG4gICAgaWYoZHJhZ2dpbmcgPT09IHRydWUpIHt3aW5kb3cub25tb3VzZXVwKCk7IGRyYWdnaW5nID0gdHJ1ZTt9XHJcbiAgICBlbHNlIHdpbmRvdy5vbm1vdXNldXAoKTtcclxufVxyXG5cclxuY29uc3QgU0FUID0gd2luZG93LlNBVDtcclxuU0FULkNpcmNsZS5wcm90b3R5cGUucm90YXRlID0gZnVuY3Rpb24gKGFuZ2xlKSB7XHJcbiAgICB0aGlzLnBvcy5yb3RhdGUoYW5nbGUpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGUoc2hhcGUsIHNpbXVsYXRlcywgZWZmZWN0cywgcGFyYW1zKXtcclxuICAgIGNvbnN0IGUgPSB7XHJcbiAgICAgICAgc2F0OiBzYXRNYXBbc2hhcGVdKHBhcmFtcyksXHJcbiAgICAgICAgc2ltdWxhdGU6IFtdLFxyXG4gICAgICAgIGVmZmVjdDogW10sXHJcbiAgICAgICAgcmVuZGVyU2hhcGU6IHJlbmRlclNoYXBlTWFwW3NoYXBlXSxcclxuICAgICAgICByZW5kZXJFZmZlY3Q6IGVmZmVjdHMubWFwKGUgPT4gcmVuZGVyRWZmZWN0TWFwW2VdKSxcclxuICAgIH07XHJcbiAgICBlLnJlbmRlckVmZmVjdFRpbWVyID0gMDtcclxuICAgIGUucG9zID0gZS5zYXQucG9zO1xyXG4gICAgaWYoc2hhcGUgPT09IDApIGUuc2F0LnIgPSBNYXRoLm1heChlLnNhdC5yLCAwLjAwMSk7XHJcbiAgICBlbHNlIGlmKHNoYXBlID09PSAzKSB7ZS5pc1RleHQgPSB0cnVlOyBlLnRleHQgPSBwYXJhbXMudGV4dDsgZS5mb250U2l6ZSA9IHBhcmFtcy5mb250U2l6ZTsgfVxyXG4gICAgZWxzZSBpZihzaGFwZSA9PT0gNCl7XHJcbiAgICAgICAgZS5zYXQuciA9IE1hdGgubWF4KGUuc2F0LnIsIDAuMDAxKTsgZS5pbm5lclJhZGl1cyA9IE1hdGgubWF4KHBhcmFtcy5pbm5lclJhZGl1cywgMCk7XHJcbiAgICAgICAgZS5zdGFydFNsaWNlID0gcGFyYW1zLnN0YXJ0U2xpY2U7IGUuc3RhcnRTbGljZUFuZ2xlID0gcGFyYW1zLnN0YXJ0U2xpY2VBbmdsZTtcclxuICAgICAgICBlLmVuZFNsaWNlID0gcGFyYW1zLmVuZFNsaWNlOyBlLmVuZFNsaWNlQW5nbGUgPSBwYXJhbXMuZW5kU2xpY2VBbmdsZTtcclxuICAgICAgICBlLnN0YXJ0U2xpY2VBbmdsZVJvdGF0ZVNwZWVkID0gcGFyYW1zLnN0YXJ0U2xpY2VBbmdsZVJvdGF0ZVNwZWVkO1xyXG4gICAgICAgIGUuZW5kU2xpY2VBbmdsZVJvdGF0ZVNwZWVkID0gcGFyYW1zLmVuZFNsaWNlQW5nbGVSb3RhdGVTcGVlZDtcclxuICAgICAgICBpZihwYXJhbXMuY2lyY2xlU2xpY2VSb3RhdGUgIT09IHVuZGVmaW5lZCkgZS5zaW11bGF0ZS5wdXNoKHBhcmFtcy5jaXJjbGVTbGljZVJvdGF0ZSk7XHJcbiAgICB9XHJcbiAgICBmb3IobGV0IGtleSBpbiB3aW5kb3cuc2F0Q29uc3RyYWludHNNYXBbc2hhcGVdKXtcclxuICAgICAgICAvLyBbbWluLCBtYXgsIG11c3RCZUludCwgY3VzdG9tVmFsaWRhdG9yKGUpXVxyXG4gICAgICAgIGNvbnN0IGMgPSB3aW5kb3cuc2F0Q29uc3RyYWludHNNYXBbc2hhcGVdW2tleV07XHJcbiAgICAgICAgaWYoY1syXSA9PT0gdHJ1ZSkgZVtrZXldID0gTWF0aC5yb3VuZChlW2tleV0pO1xyXG4gICAgICAgIGlmKGVba2V5XSA8IGNbMF0pIGVba2V5XSA9IGNbMF07XHJcbiAgICAgICAgZWxzZSBpZihlW2tleV0gPiBjWzFdKSBlW2tleV0gPSBjWzFdO1xyXG4gICAgfVxyXG4gICAgZS5kaW1lbnNpb25zID0gZ2VuZXJhdGVEaW1lbnNpb25zKGUpO1xyXG4gICAgZS50b3BMZWZ0ID0gZ2VuZXJhdGVUb3BMZWZ0Q29vcmRpbmF0ZXMoZSk7XHJcbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgc2ltdWxhdGVzLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICBlLnNpbXVsYXRlLnB1c2goc2ltdWxhdGVNYXBbc2ltdWxhdGVzW2ldXSk7XHJcbiAgICAgICAgaW5pdFNpbXVsYXRlTWFwW3NpbXVsYXRlc1tpXV0oZSwgcGFyYW1zKTtcclxuICAgICAgICBmb3IobGV0IGtleSBpbiB3aW5kb3cuc2ltdWxhdGVDb25zdHJhaW50c01hcFtzaW11bGF0ZXNbaV1dKXtcclxuICAgICAgICAgICAgLy8gW21pbiwgbWF4LCBtdXN0QmVJbnQsIGN1c3RvbVZhbGlkYXRvcihlKV1cclxuICAgICAgICAgICAgY29uc3QgYyA9IHdpbmRvdy5zaW11bGF0ZUNvbnN0cmFpbnRzTWFwW3NpbXVsYXRlc1tpXV1ba2V5XTtcclxuICAgICAgICAgICAgaWYoY1syXSA9PT0gdHJ1ZSkgZVtrZXldID0gTWF0aC5yb3VuZChlW2tleV0pO1xyXG4gICAgICAgICAgICBpZihlW2tleV0gPCBjWzBdKSBlW2tleV0gPSBjWzBdO1xyXG4gICAgICAgICAgICBlbHNlIGlmKGVba2V5XSA+IGNbMV0pIGVba2V5XSA9IGNbMV07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZm9yKGxldCBpID0gMDsgaSA8IGVmZmVjdHMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgIGUuZWZmZWN0LnB1c2goZWZmZWN0TWFwW2VmZmVjdHNbaV1dKTtcclxuICAgICAgICBpbml0RWZmZWN0TWFwW2VmZmVjdHNbaV1dKGUsIHBhcmFtcyk7XHJcbiAgICAgICAgaWYoaWRsZUVmZmVjdE1hcFtlZmZlY3RzW2ldXSAhPT0gdW5kZWZpbmVkKSBlLnNpbXVsYXRlLnB1c2goaWRsZUVmZmVjdE1hcFtlZmZlY3RzW2ldXSk7XHJcbiAgICAgICAgZm9yKGxldCBrZXkgaW4gd2luZG93LmVmZmVjdENvbnN0cmFpbnRzTWFwW2VmZmVjdHNbaV1dKXtcclxuICAgICAgICAgICAgLy8gW21pbiwgbWF4LCBtdXN0QmVJbnQsIGN1c3RvbVZhbGlkYXRvcihlKV1cclxuICAgICAgICAgICAgY29uc3QgYyA9IHdpbmRvdy5lZmZlY3RDb25zdHJhaW50c01hcFtlZmZlY3RzW2ldXVtrZXldO1xyXG4gICAgICAgICAgICBpZihjWzJdID09PSB0cnVlKSBlW2tleV0gPSBNYXRoLnJvdW5kKGVba2V5XSk7XHJcbiAgICAgICAgICAgIGlmKGVba2V5XSA8IGNbMF0pIGVba2V5XSA9IGNbMF07XHJcbiAgICAgICAgICAgIGVsc2UgaWYoZVtrZXldID4gY1sxXSkgZVtrZXldID0gY1sxXTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBpZihwYXJhbXMuc2YgIT09IHVuZGVmaW5lZCkgZS5zaW11bGF0ZS5wdXNoKHBhcmFtcy5zZik7XHJcbiAgICBpZihwYXJhbXMuZWYgIT09IHVuZGVmaW5lZCkge2UuZWZmZWN0LnB1c2gocGFyYW1zLmVmKTsgZS5yZW5kZXJFZmZlY3QucHVzaChyZW5kZXJFZmZlY3RNYXBbM10pO31cclxuICAgIGlmKHBhcmFtcy5zZiAhPT0gdW5kZWZpbmVkIHx8IHBhcmFtcy5lZiAhPT0gdW5kZWZpbmVkKSB7ZS5zaW11bGF0ZS5wdXNoKCgpPT57ZS5kaW1lbnNpb25zPWdlbmVyYXRlRGltZW5zaW9ucyhlKTtlLnRvcExlZnQ9Z2VuZXJhdGVUb3BMZWZ0Q29vcmRpbmF0ZXMoZSk7fSl9O1xyXG4gICAgaWYocGFyYW1zLmNyICE9PSB1bmRlZmluZWQpIGUuY3IgPSBwYXJhbXMuY3I7XHJcbiAgICBcclxuICAgIG9ic3RhY2xlcy5wdXNoKGUpO1xyXG5cclxuICAgIC8vIGZpeGluZyBwb2x5Z29uIHBvaW50cyBpZiB0aGV5J3JlIGR5bmFtaWNhbGx5IGdlbmVyYXRlZFxyXG4gICAgaWYocGFyYW1zLmZpeFBvbHkgIT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgaWYoZW52aXJvbm1lbnQgPT09ICdlZGl0b3InKXtcclxuICAgICAgICAgICAgZS5zYXQuc2V0UG9pbnRzKHdpbmRvdy5maXhQb2x5Z29uKHBhcmFtcy5wb2ludHMpLm1hcChwdCA9PiBuZXcgU0FULlZlY3RvcihwdFswXSwgcHRbMV0pKSk7XHJcbiAgICAgICAgICAgIGUuZGltZW5zaW9ucyA9IGdlbmVyYXRlRGltZW5zaW9ucyhlKTtcclxuICAgICAgICAgICAgZS50b3BMZWZ0ID0gZ2VuZXJhdGVUb3BMZWZ0Q29vcmRpbmF0ZXMoZSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgKGFzeW5jKCk9PntcclxuICAgICAgICAgICAgICAgIGF3YWl0IGltcG9ydCgnLi4vc2hhcmVkL2ZpeFBvbHlnb24uanMnKTtcclxuICAgICAgICAgICAgICAgIGUuc2F0LnNldFBvaW50cyh3aW5kb3cuZml4UG9seWdvbihwYXJhbXMucG9pbnRzKS5tYXAocHQgPT4gbmV3IFNBVC5WZWN0b3IocHRbMF0sIHB0WzFdKSkpO1xyXG4gICAgICAgICAgICAgICAgZS5kaW1lbnNpb25zID0gZ2VuZXJhdGVEaW1lbnNpb25zKGUpO1xyXG4gICAgICAgICAgICAgICAgZS50b3BMZWZ0ID0gZ2VuZXJhdGVUb3BMZWZ0Q29vcmRpbmF0ZXMoZSk7XHJcbiAgICAgICAgICAgIH0pKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbndpbmRvdy5DID0gY3JlYXRlO1xyXG53aW5kb3cuaWRUb09icyA9IHt9O1xyXG53aW5kb3cudGlja0ZucyA9IFtdO1xyXG5cclxuZnVuY3Rpb24gaW50ZXJwb2xhdGUoc3RhcnQsIGVuZCwgdCl7XHJcbiAgICByZXR1cm4gKDEtdCkgKiBzdGFydCArIHQgKiBlbmQ7XHJcbn1cclxuXHJcbmxldCByZXMgPSBuZXcgU0FULlJlc3BvbnNlKCk7XHJcbmxldCBhbmdsZSwgY29sbGlkZWQgPSBmYWxzZSwgZ3JhcHBsZUZvcmNlT2JqPXt9O1xyXG5mdW5jdGlvbiBzaW11bGF0ZSgpe1xyXG4gICAgLy8gcGxheWVyIHNpbXVsYXRpb25cclxuICAgIGNvbnN0IHBsYXllciA9IHdpbmRvdy5wbGF5ZXJzW3dpbmRvdy5zZWxmSWRdO1xyXG5cclxuICAgIGlmKHdpbmRvdy5pc0V4Q2xpZW50ID09PSB0cnVlKXtcclxuICAgICAgICBwbGF5ZXIucmVuZGVyUmFkaXVzID0gaW50ZXJwb2xhdGUocGxheWVyLnJlbmRlclJhZGl1cywgcGxheWVyLnNhdC5yLCAxIC8gNS40KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcGxheWVyLnJlbmRlclJhZGl1cyA9IHBsYXllci5yZW5kZXJSYWRpdXMgKiAwLjgzICsgcGxheWVyLnNhdC5yICogMC4xNztcclxuICAgIH1cclxuXHJcbiAgICBpZih3aW5kb3cuaXNFeENsaWVudCA9PT0gdHJ1ZSAmJiBwbGF5ZXIuZGVhZCA9PT0gZmFsc2UpIHtcclxuICAgICAgICBwbGF5ZXIueGEgPSAoaW5wdXQucmlnaHQgLSBpbnB1dC5sZWZ0KSAqIHBsYXllci5zcGVlZDtcclxuICAgICAgICBwbGF5ZXIueWEgPSAoaW5wdXQuZG93biAtIGlucHV0LnVwKSAqIHBsYXllci5zcGVlZDtcclxuXHJcbiAgICAgICAgaWYoaW5wdXQuc2hpZnQgPT09IHRydWUpIHtcclxuICAgICAgICAgICAgaWYocGxheWVyLmdvZCA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgICAgICBwbGF5ZXIueGEgKj0gNTtcclxuICAgICAgICAgICAgICAgIHBsYXllci55YSAqPSA1O1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcGxheWVyLnhhICo9IDAuNTtcclxuICAgICAgICAgICAgICAgIHBsYXllci55YSAqPSAwLjU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmKHBsYXllci5zaGlwID09PSBmYWxzZSl7XHJcbiAgICAgICAgICAgIHBsYXllci54diArPSBwbGF5ZXIueGEgKiBwbGF5ZXIuYXhpc1NwZWVkTXVsdFg7XHJcbiAgICAgICAgICAgIHBsYXllci55diArPSBwbGF5ZXIueWEgKiBwbGF5ZXIuYXhpc1NwZWVkTXVsdFk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcGxheWVyLnNoaXBBbmdsZSArPSBwbGF5ZXIueGEgKiBwbGF5ZXIuc2hpcFR1cm5TcGVlZDtcclxuXHJcbiAgICAgICAgICAgIHBsYXllci54diAtPSBNYXRoLmNvcyhwbGF5ZXIuc2hpcEFuZ2xlKSAqIHBsYXllci55YSAqIHBsYXllci5heGlzU3BlZWRNdWx0WDtcclxuICAgICAgICAgICAgcGxheWVyLnl2IC09IE1hdGguc2luKHBsYXllci5zaGlwQW5nbGUpICogcGxheWVyLnlhICogcGxheWVyLmF4aXNTcGVlZE11bHRZO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcGxheWVyLnBvcy54ICs9IHBsYXllci54djtcclxuICAgICAgICBwbGF5ZXIucG9zLnkgKz0gcGxheWVyLnl2O1xyXG5cclxuICAgICAgICBwbGF5ZXIueHYgKj0gcGxheWVyLmZyaWN0aW9uO1xyXG4gICAgICAgIHBsYXllci55diAqPSBwbGF5ZXIuZnJpY3Rpb247XHJcbiAgICB9IGVsc2UgaWYod2luZG93LmRyYWdnaW5nID09PSB0cnVlICYmIHBsYXllci5kZWFkID09PSBmYWxzZSl7XHJcbiAgICAgICAgaWYocGxheWVyLmF4aXNTcGVlZE11bHRYID09PSAwIHx8IHBsYXllci5heGlzU3BlZWRNdWx0WSA9PT0gMCkgYW5nbGUgPSBNYXRoLmF0YW4yKCh3aW5kb3cubW91c2VZIC0gcGxheWVyLnBvcy55KSwgKHdpbmRvdy5tb3VzZVggLSBwbGF5ZXIucG9zLngpKTtcclxuICAgICAgICBlbHNlIGFuZ2xlID0gTWF0aC5hdGFuMigod2luZG93Lm1vdXNlWSAtIHBsYXllci5wb3MueSkgKiBwbGF5ZXIuYXhpc1NwZWVkTXVsdFgsICh3aW5kb3cubW91c2VYIC0gcGxheWVyLnBvcy54KSAqIHBsYXllci5heGlzU3BlZWRNdWx0WSk7XHJcbiAgICAgICAgcGxheWVyLnh2ID0gTWF0aC5jb3MoYW5nbGUpICogcGxheWVyLnNwZWVkICogcGxheWVyLmF4aXNTcGVlZE11bHRYO1xyXG4gICAgICAgIHBsYXllci55diA9IE1hdGguc2luKGFuZ2xlKSAqIHBsYXllci5zcGVlZCAqIHBsYXllci5heGlzU3BlZWRNdWx0WTtcclxuICAgICAgICBpZihNYXRoLmFicyhwbGF5ZXIueHYpID4gTWF0aC5hYnMocGxheWVyLnBvcy54IC0gd2luZG93Lm1vdXNlWCkpIHBsYXllci54diA9IHdpbmRvdy5tb3VzZVggLSBwbGF5ZXIucG9zLng7XHJcbiAgICAgICAgaWYoTWF0aC5hYnMocGxheWVyLnl2KSA+IE1hdGguYWJzKHBsYXllci5wb3MueSAtIHdpbmRvdy5tb3VzZVkpKSBwbGF5ZXIueXYgPSB3aW5kb3cubW91c2VZIC0gcGxheWVyLnBvcy55O1xyXG4gICAgICAgIHBsYXllci5wb3MueCArPSBwbGF5ZXIueHY7XHJcbiAgICAgICAgcGxheWVyLnBvcy55ICs9IHBsYXllci55djsgXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHBsYXllci54diA9IHBsYXllci55diA9IDA7XHJcbiAgICB9XHJcbiAgICBwbGF5ZXIuYXhpc1NwZWVkTXVsdFggPSBwbGF5ZXIuYXhpc1NwZWVkTXVsdFkgPSAxO1xyXG5cclxuICAgIGlmKHBsYXllci5zdG9wRm9yY2VzID09PSB0cnVlKXtcclxuICAgICAgICBwbGF5ZXIuc3RvcEZvcmNlcyA9IGZhbHNlO1xyXG4gICAgICAgIHBsYXllci5mb3JjZXMubGVuZ3RoID0gMDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IHBsYXllci5mb3JjZXMubGVuZ3RoOyBpKz0zKXtcclxuICAgICAgICAgICAgcGxheWVyLnBvcy54ICs9IHBsYXllci5mb3JjZXNbaV07XHJcbiAgICAgICAgICAgIHBsYXllci5wb3MueSArPSBwbGF5ZXIuZm9yY2VzW2krMV07XHJcblxyXG4gICAgICAgICAgICBwbGF5ZXIuZm9yY2VzW2ldICo9IHBsYXllci5mb3JjZXNbaSsyXTtcclxuICAgICAgICAgICAgcGxheWVyLmZvcmNlc1tpKzFdICo9IHBsYXllci5mb3JjZXNbaSsyXTtcclxuXHJcbiAgICAgICAgICAgIGlmKE1hdGguYWJzKHBsYXllci5mb3JjZXNbaV0pIDwgMC4wMSAmJiBNYXRoLmFicyhwbGF5ZXIuZm9yY2VzW2krMV0pIDwgMC4wMSl7XHJcbiAgICAgICAgICAgICAgICBwbGF5ZXIuZm9yY2VzLnNwbGljZShpLDMpO1xyXG4gICAgICAgICAgICAgICAgaS09MztcclxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmKHBsYXllci5kZWFkID09PSB0cnVlKXtcclxuICAgICAgICBwbGF5ZXIuZm9yY2VzLmxlbmd0aCA9IDA7XHJcbiAgICAgICAgcGxheWVyLnJlbmRlclJhZGl1cyA9IHBsYXllci5sYXN0QWxpdmVSYWRpdXM7XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IG9ic3RhY2xlcy5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgIC8vIG9ic3RhY2xlIHNpbXVsYXRpb25cclxuICAgICAgICAgICAgZm9yKGxldCBqID0gMDsgaiA8IG9ic3RhY2xlc1tpXS5zaW11bGF0ZS5sZW5ndGg7IGorKyl7XHJcbiAgICAgICAgICAgICAgICBvYnN0YWNsZXNbaV0uc2ltdWxhdGVbal0ob2JzdGFjbGVzW2ldLCBwbGF5ZXIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBwbGF5ZXIubGFzdEFsaXZlUmFkaXVzID0gcGxheWVyLnNhdC5yO1xyXG4gICAgICAgIGlmKHBsYXllci5nb2QgIT09IHRydWUpe1xyXG4gICAgICAgICAgICBpZihwbGF5ZXIucG9zLnggLSBwbGF5ZXIuc2F0LnIgPCAwKSBwbGF5ZXIucG9zLnggPSBwbGF5ZXIuc2F0LnI7XHJcbiAgICAgICAgICAgIGVsc2UgaWYocGxheWVyLnBvcy54ICsgcGxheWVyLnNhdC5yID4gd2luZG93Lm1hcERpbWVuc2lvbnMueCkgcGxheWVyLnBvcy54ID0gd2luZG93Lm1hcERpbWVuc2lvbnMueCAtIHBsYXllci5zYXQucjtcclxuICAgICAgICAgICAgaWYocGxheWVyLnBvcy55IC0gcGxheWVyLnNhdC5yIDwgMCkgcGxheWVyLnBvcy55ID0gcGxheWVyLnNhdC5yO1xyXG4gICAgICAgICAgICBlbHNlIGlmKHBsYXllci5wb3MueSArIHBsYXllci5zYXQuciA+IHdpbmRvdy5tYXBEaW1lbnNpb25zLnkpIHBsYXllci5wb3MueSA9IHdpbmRvdy5tYXBEaW1lbnNpb25zLnkgLSBwbGF5ZXIuc2F0LnI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBvYnN0YWNsZXMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgLy8gY29sbGlzaW9uIChkb25lIGJlZm9yZSBzaW11bGF0aW9uIGJlY2F1c2UgdGhhdCBpcyB3aGF0IGxhc3QgcmVuZGVyZWQgZnJhbWUgc2VlcylcclxuICAgICAgICAgICAgICAgIGlmKG9ic3RhY2xlc1tpXS5zYXQuciAhPT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgICAgICAgICAgICBpZihvYnN0YWNsZXNbaV0uc3RhcnRTbGljZSAhPT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29sbGlkZWQgPSB0ZXN0Q2lyY2xlU2xpY2VDaXJjbGUob2JzdGFjbGVzW2ldLCBwbGF5ZXIsIHJlcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29sbGlkZWQgPSBTQVQudGVzdENpcmNsZUNpcmNsZShvYnN0YWNsZXNbaV0uc2F0LCBwbGF5ZXIuc2F0LCByZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sbGlkZWQgPSBTQVQudGVzdFBvbHlnb25DaXJjbGUob2JzdGFjbGVzW2ldLnNhdCwgcGxheWVyLnNhdCwgcmVzKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKGNvbGxpZGVkID09PSB0cnVlKXtcclxuICAgICAgICAgICAgICAgICAgICBmb3IobGV0IGogPSAwOyBqIDwgb2JzdGFjbGVzW2ldLmVmZmVjdC5sZW5ndGg7IGorKyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ic3RhY2xlc1tpXS5lZmZlY3Rbal0ocGxheWVyLCByZXMsIG9ic3RhY2xlc1tpXSwgaSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmVzLmNsZWFyKCk7Ly8gVE9ETzogdGVzdCBpZiB0aGlzIGlzIHJlYWxseSBuZWVkZWRcclxuICAgICAgICBcclxuICAgICAgICAgICAgICAgIC8vIG9ic3RhY2xlIHNpbXVsYXRpb25cclxuICAgICAgICAgICAgICAgIGZvcihsZXQgaiA9IDA7IGogPCBvYnN0YWNsZXNbaV0uc2ltdWxhdGUubGVuZ3RoOyBqKyspe1xyXG4gICAgICAgICAgICAgICAgICAgIG9ic3RhY2xlc1tpXS5zaW11bGF0ZVtqXShvYnN0YWNsZXNbaV0sIHBsYXllcik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvLyBqdXN0IGRvIHNpbXVsYXRpb24gaWYgaW4gZ29kbW9kZVxyXG4gICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgb2JzdGFjbGVzLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgICAgIGZvcihsZXQgaiA9IDA7IGogPCBvYnN0YWNsZXNbaV0uc2ltdWxhdGUubGVuZ3RoOyBqKyspe1xyXG4gICAgICAgICAgICAgICAgICAgIG9ic3RhY2xlc1tpXS5zaW11bGF0ZVtqXShvYnN0YWNsZXNbaV0sIHBsYXllcik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmKHBsYXllci5ncmFwcGxlID09PSB0cnVlKXtcclxuICAgICAgICAgICAgaWYoaW5wdXQuYWN0aW9uMSA9PT0gdHJ1ZSAmJiBwbGF5ZXIuZ3JhcHBsZVggPT09IC0xKXtcclxuICAgICAgICAgICAgICAgIGxldCByZXNldFJhZGl1cyA9IHBsYXllci5zYXQucjtcclxuICAgICAgICAgICAgICAgIHBsYXllci5zYXQuciA9IHBsYXllci5ncmFwcGxlUmFuZ2U7XHJcbiAgICAgICAgICAgICAgICBsZXQgY2xvc2VzdEFuZ2xlID0gMDtcclxuICAgICAgICAgICAgICAgIGxldCBwcmlvcml0eVJlc2V0UmFkaXVzID0gMDtcclxuICAgICAgICAgICAgICAgIGxldCBncmFwUG9pbnRQcmlvcml0eSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IG9ic3RhY2xlcy5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYob2JzdGFjbGVzW2ldLmlzR3JhcHBsZVBvaW50ID09PSB0cnVlICYmIGdyYXBQb2ludFByaW9yaXR5ID09PSBmYWxzZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByaW9yaXR5UmVzZXRSYWRpdXMgPSBwbGF5ZXIuc2F0LnI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllci5zYXQuciA9IHBsYXllci5ncmFwcGxlUmFuZ2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICBpZihvYnN0YWNsZXNbaV0uc2F0LnIgIT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKG9ic3RhY2xlc1tpXS5zdGFydFNsaWNlICE9PSB1bmRlZmluZWQpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbGlkZWQgPSB0ZXN0Q2lyY2xlU2xpY2VDaXJjbGUob2JzdGFjbGVzW2ldLCBwbGF5ZXIsIHJlcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsaWRlZCA9IFNBVC50ZXN0Q2lyY2xlQ2lyY2xlKG9ic3RhY2xlc1tpXS5zYXQsIHBsYXllci5zYXQsIHJlcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xsaWRlZCA9IFNBVC50ZXN0UG9seWdvbkNpcmNsZShvYnN0YWNsZXNbaV0uc2F0LCBwbGF5ZXIuc2F0LCByZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBpZihvYnN0YWNsZXNbaV0uaXNHcmFwcGxlUG9pbnQgPT09IHRydWUpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihjb2xsaWRlZCA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBncmFwUG9pbnRQcmlvcml0eSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGF5ZXIuc2F0LnIgLT0gcmVzLm92ZXJsYXA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG9zZXN0QW5nbGUgPSBNYXRoLmF0YW4yKHJlcy5vdmVybGFwTi55LCByZXMub3ZlcmxhcE4ueCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZihncmFwUG9pbnRQcmlvcml0eSA9PT0gZmFsc2Upe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyLnNhdC5yID0gcHJpb3JpdHlSZXNldFJhZGl1cztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZihjb2xsaWRlZCA9PT0gdHJ1ZSAmJiBncmFwUG9pbnRQcmlvcml0eSA9PT0gZmFsc2Upe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwbGF5ZXIuc2F0LnIgLT0gcmVzLm92ZXJsYXA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsb3Nlc3RBbmdsZSA9IE1hdGguYXRhbjIocmVzLm92ZXJsYXBOLnksIHJlcy5vdmVybGFwTi54KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgcmVzLmNsZWFyKCk7Ly8gVE9ETzogdGVzdCBpZiB0aGlzIGlzIHJlYWxseSBuZWVkZWRcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBpZihwbGF5ZXIuc2F0LnIgPCBwbGF5ZXIuZ3JhcHBsZVJhbmdlKXtcclxuICAgICAgICAgICAgICAgICAgICBwbGF5ZXIuc2F0LnIgPSBNYXRoLm1heChwbGF5ZXIuc2F0LnIsIDApO1xyXG4gICAgICAgICAgICAgICAgICAgIHBsYXllci5ncmFwcGxlWCA9IHBsYXllci5wb3MueCAtIE1hdGguY29zKGNsb3Nlc3RBbmdsZSkgKiBwbGF5ZXIuc2F0LnI7XHJcbiAgICAgICAgICAgICAgICAgICAgcGxheWVyLmdyYXBwbGVZID0gcGxheWVyLnBvcy55IC0gTWF0aC5zaW4oY2xvc2VzdEFuZ2xlKSAqIHBsYXllci5zYXQucjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHBsYXllci5zYXQuciA9IHJlc2V0UmFkaXVzO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYocGxheWVyLmdyYXBwbGVYICE9PSAtMSl7XHJcbiAgICAgICAgICAgICAgICBpZihpbnB1dC5hY3Rpb24xID09PSBmYWxzZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgcGxheWVyLmdyYXBwbGVYID0gcGxheWVyLmdyYXBwbGVZID0gLTE7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBncmFwcGxlTGVuID0gTWF0aC5zcXJ0KChwbGF5ZXIucG9zLnggLSBwbGF5ZXIuZ3JhcHBsZVgpICoqIDIgKyAocGxheWVyLnBvcy55IC0gcGxheWVyLmdyYXBwbGVZKSAqKiAyKTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgZ3JhcHBsZUFuZ2xlID0gTWF0aC5hdGFuMihwbGF5ZXIuZ3JhcHBsZVkgLSBwbGF5ZXIucG9zLnksIHBsYXllci5ncmFwcGxlWCAtIHBsYXllci5wb3MueCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHBsYXllci5mb3JjZXMucHVzaChcclxuICAgICAgICAgICAgICAgICAgICAgICAgTWF0aC5jb3MoZ3JhcHBsZUFuZ2xlKSAqIGdyYXBwbGVMZW4gKiBwbGF5ZXIuZ3JhcHBsZUZvcmNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBNYXRoLnNpbihncmFwcGxlQW5nbGUpICogZ3JhcHBsZUxlbiAqIHBsYXllci5ncmFwcGxlRm9yY2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllci5ncmFwcGxlRnJpY1xyXG4gICAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYocGxheWVyLnRvdWNoaW5nTm9ybWFsSW5kZXhlcy5sZW5ndGggIT09IDAgfHwgcGxheWVyLmxhc3RUb3VjaGluZ05vcm1hbEluZGV4ZXMubGVuZ3RoICE9PSAwKXtcclxuICAgICAgICBwbGF5ZXIubGFzdFRvdWNoaW5nTm9ybWFsSW5kZXhlcyA9IHBsYXllci50b3VjaGluZ05vcm1hbEluZGV4ZXM7XHJcbiAgICAgICAgcGxheWVyLnRvdWNoaW5nTm9ybWFsSW5kZXhlcyA9IFtdO1xyXG4gICAgfVxyXG5cclxuICAgIGlmKHBsYXllci5vblNhZmUgPT09IHRydWUpe1xyXG4gICAgICAgIHBsYXllci5vblNhZmUgPSBmYWxzZTtcclxuICAgICAgICBpZihwbGF5ZXIudGltZVRyYXBPdmVycmlkZVNhZmUgPT09IHRydWUpe1xyXG4gICAgICAgICAgICBwbGF5ZXIudGltZVRyYXBPdmVycmlkZVNhZmUgPSBmYWxzZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBwbGF5ZXIuZGVhZCA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpZihwbGF5ZXIuZGVhdGhUaW1lciA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgcGxheWVyLmRlYXRoVGltZS0tO1xyXG4gICAgICAgIGlmKHBsYXllci5kZWF0aFRpbWUgPCAwIHx8IHBsYXllci5kZWFkID09PSB0cnVlKXtcclxuICAgICAgICAgICAgcGxheWVyLmRlYXRoVGltZSA9IEluZmluaXR5O1xyXG4gICAgICAgICAgICBwbGF5ZXIuZGVhdGhUaW1lciA9IGZhbHNlO1xyXG4gICAgICAgICAgICBwbGF5ZXIuZGVhZCA9IHRydWU7XHJcblxyXG4gICAgICAgICAgICB3aW5kb3cudTRbMF0gPSAxNDtcclxuICAgICAgICAgICAgc2VuZCh3aW5kb3cudTQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBib3VuZGluZyB0aGUgcGxheWVyIGJ5IHRoZSB3YWxsc1xyXG4gICAgcGxheWVyLnRvdWNoaW5nV2FsbCA9IGZhbHNlO1xyXG4gICAgaWYocGxheWVyLnNhdC5yID4gOTAwKSBwbGF5ZXIuc2F0LnIgPSA5MDA7XHJcblxyXG4gICAgaWYocGxheWVyLmdvZCAhPT0gdHJ1ZSl7XHJcbiAgICAgICAgaWYocGxheWVyLnBvcy54IC0gcGxheWVyLnNhdC5yIDwgMCl7XHJcbiAgICAgICAgICAgIHBsYXllci5wb3MueCA9IHBsYXllci5zYXQucjtcclxuICAgICAgICAgICAgcGxheWVyLnRvdWNoaW5nV2FsbCA9IHRydWU7XHJcbiAgICAgICAgfSBlbHNlIGlmKHBsYXllci5wb3MueCArIHBsYXllci5zYXQuciA+IG1hcERpbWVuc2lvbnMueCl7XHJcbiAgICAgICAgICAgIHBsYXllci5wb3MueCA9IG1hcERpbWVuc2lvbnMueCAtIHBsYXllci5zYXQucjtcclxuICAgICAgICAgICAgcGxheWVyLnRvdWNoaW5nV2FsbCA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHBsYXllci5wb3MueSAtIHBsYXllci5zYXQuciA8IDApe1xyXG4gICAgICAgICAgICBwbGF5ZXIucG9zLnkgPSBwbGF5ZXIuc2F0LnI7XHJcbiAgICAgICAgICAgIHBsYXllci50b3VjaGluZ1dhbGwgPSB0cnVlO1xyXG4gICAgICAgIH0gZWxzZSBpZihwbGF5ZXIucG9zLnkgKyBwbGF5ZXIuc2F0LnIgPiBtYXBEaW1lbnNpb25zLnkpe1xyXG4gICAgICAgICAgICBwbGF5ZXIucG9zLnkgPSBtYXBEaW1lbnNpb25zLnkgLSBwbGF5ZXIuc2F0LnI7XHJcbiAgICAgICAgICAgIHBsYXllci50b3VjaGluZ1dhbGwgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcGxheWVyLmRlYWQgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBpZih3aW5kb3cudGlja0Zucy5sZW5ndGggPiAwKXtcclxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgd2luZG93LnRpY2tGbnMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICB3aW5kb3cudGlja0Zuc1tpXSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB3aW5kb3cudGlja0Zucy5sZW5ndGggPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHNjcm9sbGluZyBpZiBzcGVjaWZpZWQgYnkgYSBzaW11bGF0ZSB0eXBlXHJcbiAgICBpZih0b1Njcm9sbCA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgdG9TY3JvbGwgPSBmYWxzZTtcclxuICAgICAgICBpZih3aW5kb3cuZHJhZ2dpbmcgPT09IHRydWUpIHdpbmRvdy5vbm1vdXNldXAoKTtcclxuICAgICAgICBzY3JvbGwoKTtcclxuICAgIH1cclxuXHJcbiAgICB3aW5kb3cuZnJhbWVzKys7XHJcbn1cclxuXHJcbmxldCBydW5uaW5nT3ZlcmxhcE4gPSBuZXcgU0FULlZlY3RvcigpLCBydW5uaW5nT3ZlcmxhcFYgPSBuZXcgU0FULlZlY3RvcigpO1xyXG5mdW5jdGlvbiB0ZXN0Q2lyY2xlU2xpY2VDaXJjbGUoY2lyY2xlU2xpY2UsIGNpcmNsZSwgcmVzKXtcclxuICAgIGxldCBjb2xsaXNpb25BbmdsZSwgY29sbGlzaW9uRGlzdFNxLCBndHMsIGx0ZSwgYW5nbGVPdmVyZmxvdywgY29sbGlkZWQgPSBmYWxzZTtcclxuXHJcbiAgICAvLyBkbyBjaXJjbGUgZmlyc3QsIHRoZW4gc2xpY2VzLiBJZiB3ZSBjb2xsaWRlIHdpdGggdGhlIGNpcmNsZSB0aGVuIHdlIGRvbid0IHdhbnQgdG8gY29sbGlkZSB3LyBzbGljZXNcclxuICAgIGNvbGxpc2lvbkFuZ2xlID0gTWF0aC5hdGFuMihjaXJjbGUucG9zLnkgLSBjaXJjbGVTbGljZS5wb3MueSwgY2lyY2xlLnBvcy54IC0gY2lyY2xlU2xpY2UucG9zLngpO1xyXG4gICAgaWYoY29sbGlzaW9uQW5nbGUgPCAwKSBjb2xsaXNpb25BbmdsZSArPSBNYXRoLlBJICogMjtcclxuXHJcbiAgICBndHMgPSBjaXJjbGVTbGljZS5zdGFydFNsaWNlQW5nbGUgPCBjb2xsaXNpb25BbmdsZTtcclxuICAgIGx0ZSA9IGNvbGxpc2lvbkFuZ2xlIDwgY2lyY2xlU2xpY2UuZW5kU2xpY2VBbmdsZTtcclxuICAgIFxyXG4gICAgYW5nbGVPdmVyZmxvdyA9IGNpcmNsZVNsaWNlLnN0YXJ0U2xpY2VBbmdsZSA+IGNpcmNsZVNsaWNlLmVuZFNsaWNlQW5nbGU7XHJcblxyXG4gICAgaWYoYW5nbGVPdmVyZmxvdyA9PT0gdHJ1ZSA/IChndHMgPT09IHRydWUgfHwgbHRlID09PSB0cnVlKSA6IChndHMgPT09IHRydWUgJiYgbHRlID09PSB0cnVlKSl7XHJcbiAgICAgICAgY29sbGlkZWQgPSBTQVQudGVzdENpcmNsZUNpcmNsZShjaXJjbGVTbGljZS5zYXQsIGNpcmNsZS5zYXQsIHJlcyk7XHJcblxyXG4gICAgICAgIGlmKGNvbGxpZGVkID09PSB0cnVlKXtcclxuICAgICAgICAgICAgY29sbGlzaW9uRGlzdFNxID0gKGNpcmNsZS5wb3MueSAtIGNpcmNsZVNsaWNlLnBvcy55KSAqKiAyICsgKGNpcmNsZS5wb3MueCAtIGNpcmNsZVNsaWNlLnBvcy54KSAqKiAyO1xyXG5cclxuICAgICAgICAgICAgaWYoY29sbGlzaW9uRGlzdFNxID4gKChjaXJjbGVTbGljZS5pbm5lclJhZGl1cyArIGNpcmNsZVNsaWNlLnNhdC5yICsgY2lyY2xlLnNhdC5yKSAvIDIpICoqIDIpe1xyXG4gICAgICAgICAgICAgICAgLy8gbm9ybWFsIGNpcmNsZSBjb2xsaXNpb25cclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYoY29sbGlzaW9uRGlzdFNxIDw9IChjaXJjbGVTbGljZS5pbm5lclJhZGl1cyAtIGNpcmNsZS5zYXQucikgKiogMil7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gd2UncmUgdG9vIGZhciBpbnNpZGUsIG5vIGNvbGxpc2lvblxyXG4gICAgICAgICAgICAgICAgICAgIHJlcy5jbGVhcigpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcy5vdmVybGFwTi54ID0gcmVzLm92ZXJsYXBOLnkgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcy5vdmVybGFwVi54ID0gcmVzLm92ZXJsYXBWLnkgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gd2UncmUgaW5zaWRlIHRoZSBjaXJjbGUgLSBib3VuZCB0aGUgb3BwIHdheVxyXG4gICAgICAgICAgICAgICAgICAgIHJlcy5vdmVybGFwTiA9IHJlcy5vdmVybGFwTi5zY2FsZSgtMSwtMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzLm92ZXJsYXAgPSAoY2lyY2xlU2xpY2Uuc2F0LnIgLSBjaXJjbGVTbGljZS5pbm5lclJhZGl1cyArIGNpcmNsZS5zYXQuciAqIDIpIC0gcmVzLm92ZXJsYXA7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzLm92ZXJsYXBWID0gbmV3IFNBVC5WZWN0b3IocmVzLm92ZXJsYXBOLnggKiByZXMub3ZlcmxhcCwgcmVzLm92ZXJsYXBOLnkgKiByZXMub3ZlcmxhcCk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYoTWF0aC5hYnMoKGNpcmNsZVNsaWNlLnN0YXJ0U2xpY2VBbmdsZSAtIGNpcmNsZVNsaWNlLmVuZFNsaWNlQW5nbGUpICUgKE1hdGguUEkgKiAyKSkgPCAwLjAwMSl7XHJcbiAgICAgICAgLy8gY2lyY2xlIHNsaWNlcyBhcmUgb24gdG9wIG9mIGVhY2ggb3RoZXIuIFdlIG1pc3NlZCBjb2xsaXNpb24gd2l0aCB0aGUgY2lyY2xlLCBzbyB3ZSdyZSBkb25lXHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIHJ1bm5pbmdPdmVybGFwTi54ID0gcnVubmluZ092ZXJsYXBOLnkgPSAwO1xyXG4gICAgcnVubmluZ092ZXJsYXBWLnggPSBydW5uaW5nT3ZlcmxhcFYueSA9IDA7XHJcblxyXG4gICAgLy8gY29sbGlzaW9uIHdpdGggc3RhcnRTbGljZVxyXG4gICAgaWYoU0FULnRlc3RQb2x5Z29uQ2lyY2xlKGNpcmNsZVNsaWNlLnN0YXJ0U2xpY2UsIGNpcmNsZS5zYXQsIHJlcykgPT09IHRydWUpe1xyXG4gICAgICAgIGNvbGxpZGVkID0gdHJ1ZTtcclxuICAgICAgICBydW5uaW5nT3ZlcmxhcE4ueCArPSByZXMub3ZlcmxhcE4ueDtcclxuICAgICAgICBydW5uaW5nT3ZlcmxhcE4ueSArPSByZXMub3ZlcmxhcE4ueTtcclxuICAgICAgICBydW5uaW5nT3ZlcmxhcFYueCArPSByZXMub3ZlcmxhcFYueDtcclxuICAgICAgICBydW5uaW5nT3ZlcmxhcFYueSArPSByZXMub3ZlcmxhcFYueTtcclxuICAgICAgICByZXMuY2xlYXIoKTtcclxuICAgICAgICByZXMub3ZlcmxhcE4ueCA9IHJlcy5vdmVybGFwTi55ID0gMDtcclxuICAgICAgICByZXMub3ZlcmxhcFYueCA9IHJlcy5vdmVybGFwVi55ID0gMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gY29sbGlzaW9uIHdpdGggZW5kU2xpY2VcclxuICAgIGNvbGxpZGVkIHx8PSBTQVQudGVzdFBvbHlnb25DaXJjbGUoY2lyY2xlU2xpY2UuZW5kU2xpY2UsIGNpcmNsZS5zYXQsIHJlcyk7XHJcblxyXG4gICAgcmVzLm92ZXJsYXBOLnggKz0gcnVubmluZ092ZXJsYXBOLng7XHJcbiAgICByZXMub3ZlcmxhcE4ueSArPSBydW5uaW5nT3ZlcmxhcE4ueTtcclxuICAgIHJlcy5vdmVybGFwTiA9IHJlcy5vdmVybGFwTi5ub3JtYWxpemUoKTtcclxuICAgIHJlcy5vdmVybGFwVi54ICs9IHJ1bm5pbmdPdmVybGFwVi54O1xyXG4gICAgcmVzLm92ZXJsYXBWLnkgKz0gcnVubmluZ092ZXJsYXBWLnk7XHJcbiAgICByZXMub3ZlcmxhcCA9IHJlcy5vdmVybGFwVi54IC8gcmVzLm92ZXJsYXBOLng7XHJcblxyXG4gICAgcmV0dXJuIGNvbGxpZGVkO1xyXG59XHJcblxyXG4vLyAwIC0gY2lyY2xlLCAxIC0gcG9seWdvblxyXG5jb25zdCBjb2xsaXNpb25NYXRyaXggPSBbXHJcbiAgICBTQVQudGVzdENpcmNsZUNpcmNsZSwgU0FULnRlc3RDaXJjbGVQb2x5Z29uLFxyXG4gICAgU0FULnRlc3RQb2x5Z29uQ2lyY2xlLCBTQVQudGVzdFBvbHlnb25Qb2x5Z29uXHJcbl1cclxud2luZG93LmNvbGxpZGUgPSAoYSxiKSA9PiB7XHJcbiAgICByZXMuaGFzQ29sbGlkZWQgPSBjb2xsaXNpb25NYXRyaXhbKGEuc2F0LnIgPT09IHVuZGVmaW5lZCkgKiAyICsgKGIuc2F0LnIgPT09IHVuZGVmaW5lZCldKGEuc2F0LCBiLnNhdCwgcmVzKTtcclxuICAgIHJldHVybiByZXM7Ly8gbWFrZSBzdXJlIHRvIGNsZWFyIGFmdGVyIHVzZSFcclxufVxyXG53aW5kb3cuYm91bmRBQiA9IChhLGIpID0+IHtcclxuICAgIGNvbnN0IHJlcyA9IHdpbmRvdy5jb2xsaWRlKGEsYik7XHJcbiAgICBpZihyZXMuaGFzQ29sbGlkZWQgPT09IHRydWUpIHtcclxuICAgICAgICBhLnBvcy54IC09IHJlcy5vdmVybGFwVi54O1xyXG4gICAgICAgIGEucG9zLnkgLT0gcmVzLm92ZXJsYXBWLnk7XHJcbiAgICB9XHJcbiAgICByZXMuY2xlYXIoKTtcclxufVxyXG53aW5kb3cuaXNBQkNvbGxpZGluZyA9IChhLGIpID0+IHtcclxuICAgIGlmKGEgPT09IHVuZGVmaW5lZCB8fCBiID09PSB1bmRlZmluZWQpIHJldHVybiBmYWxzZTtcclxuICAgIGNvbnN0IHJlcyA9IHdpbmRvdy5jb2xsaWRlKGEsYik7XHJcbiAgICBjb25zdCBoYXNDb2xsaWRlZCA9IHJlcy5oYXNDb2xsaWRlZDtcclxuICAgIHJlcy5jbGVhcigpO1xyXG4gICAgcmV0dXJuIGhhc0NvbGxpZGVkO1xyXG59XHJcblxyXG5jb25zdCBzYXRNYXAgPSBbXHJcbiAgICAvKmNpcmNsZSovXHJcbiAgICAocCkgPT4ge1xyXG4gICAgICAgIC8vIHgseSxyXHJcbiAgICAgICAgcmV0dXJuIG5ldyBTQVQuQ2lyY2xlKG5ldyBTQVQuVmVjdG9yKHAueCwgcC55KSwgcC5yKTtcclxuICAgIH0sXHJcbiAgICAvKnJlY3RhbmdsZSovXHJcbiAgICAocCkgPT4ge1xyXG4gICAgICAgIC8vIHgseSx3LGhcclxuICAgICAgICByZXR1cm4gbmV3IFNBVC5Cb3gobmV3IFNBVC5WZWN0b3IocC54LCBwLnkpLCBwLncsIHAuaCkudG9Qb2x5Z29uKCk7XHJcbiAgICB9LFxyXG4gICAgLypwb2x5Z29uKi9cclxuICAgIChwKSA9PiB7XHJcbiAgICAgICAgLy8gcG9pbnRzOiBbW3gseV0sIC4uLl1cclxuICAgICAgICBpZihwLnBvaW50cy5sZW5ndGggPCAyKSBwLnBvaW50cyA9IHdpbmRvdy5zYXREZWZhdWx0TWFwWzJdLnBvaW50cztcclxuICAgICAgICBwLnggPSAwOyBwLnkgPSAwO1xyXG4gICAgICAgIGNvbnN0IHMgPSBuZXcgU0FULlBvbHlnb24obmV3IFNBVC5WZWN0b3IoKSwgcC5wb2ludHMubWFwKHB0ID0+IG5ldyBTQVQuVmVjdG9yKHB0WzBdLCBwdFsxXSkpKTtcclxuICAgICAgICBzLnBvcy54ID0gcC54O1xyXG4gICAgICAgIHMucG9zLnkgPSBwLnk7XHJcbiAgICAgICAgcmV0dXJuIHM7XHJcbiAgICB9LFxyXG4gICAgLyp0ZXh0Ki9cclxuICAgIChwKSA9PiB7XHJcbiAgICAgICAgaWYod2luZG93LmlzU2VydmVyID09PSB0cnVlKSByZXR1cm4gbmV3IFNBVC5Cb3gobmV3IFNBVC5WZWN0b3IocC54LCBwLnkpLCAxMDAsIDEwMCkudG9Qb2x5Z29uKCk7XHJcbiAgICAgICAgY3R4LnRleHRBbGlnbiA9ICdjZW50ZXInO1xyXG4gICAgICAgIGN0eC50ZXh0QmFzZWxpbmUgPSAnbWlkZGxlJztcclxuICAgICAgICBjdHguZm9udCA9IGAke3AuZm9udFNpemV9cHggSW50ZXJgO1xyXG4gICAgICAgIGNvbnN0IGRpbWVuc2lvbnMgPSBjdHgubWVhc3VyZVRleHQocC50ZXh0KTtcclxuICAgICAgICBjb25zdCB3ID0gZGltZW5zaW9ucy5hY3R1YWxCb3VuZGluZ0JveFJpZ2h0ICsgZGltZW5zaW9ucy5hY3R1YWxCb3VuZGluZ0JveExlZnQ7XHJcbiAgICAgICAgY29uc3QgaCA9IGRpbWVuc2lvbnMuYWN0dWFsQm91bmRpbmdCb3hEZXNjZW50ICsgZGltZW5zaW9ucy5hY3R1YWxCb3VuZGluZ0JveEFzY2VudDtcclxuICAgICAgICBjb25zdCBzID0gbmV3IFNBVC5Cb3gobmV3IFNBVC5WZWN0b3IocC54IC0gdyAvIDIsIHAueSAtIGggLyAyKSwgdywgaCkudG9Qb2x5Z29uKCk7XHJcbiAgICAgICAgcmV0dXJuIHM7XHJcbiAgICB9LFxyXG4gICAgLypjaXJjbGVTbGljZSovXHJcbiAgICAocCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHNhdCA9IG5ldyBTQVQuQ2lyY2xlKG5ldyBTQVQuVmVjdG9yKHAueCwgcC55KSwgcC5yKTtcclxuICAgICAgICBjb25zdCBvID0gcDtcclxuICAgICAgICBvLnN0YXJ0U2xpY2VBbmdsZSAlPSBNYXRoLlBJICogMjtcclxuICAgICAgICBvLmVuZFNsaWNlQW5nbGUgJT0gTWF0aC5QSSAqIDI7XHJcbiAgICAgICAgaWYoby5zdGFydFNsaWNlQW5nbGUgPCAwKSBvLnN0YXJ0U2xpY2VBbmdsZSArPSBNYXRoLlBJICogMjtcclxuICAgICAgICBpZihvLmVuZFNsaWNlQW5nbGUgPCAwKSBvLmVuZFNsaWNlQW5nbGUgKz0gTWF0aC5QSSAqIDI7XHJcbiAgICAgICAgby5zdGFydFNsaWNlID0gbmV3IFNBVC5Qb2x5Z29uKG5ldyBTQVQuVmVjdG9yKCksIFtcclxuICAgICAgICAgICAgbmV3IFNBVC5WZWN0b3IoTWF0aC5jb3Moby5zdGFydFNsaWNlQW5nbGUpICogby5yLCBNYXRoLnNpbihvLnN0YXJ0U2xpY2VBbmdsZSkgKiBvLnIpLFxyXG4gICAgICAgICAgICBuZXcgU0FULlZlY3RvcihNYXRoLmNvcyhvLnN0YXJ0U2xpY2VBbmdsZSkgKiBvLmlubmVyUmFkaXVzLCBNYXRoLnNpbihvLnN0YXJ0U2xpY2VBbmdsZSkgKiBvLmlubmVyUmFkaXVzKSxcclxuICAgICAgICBdKTtcclxuICAgICAgICBvLmVuZFNsaWNlID0gbmV3IFNBVC5Qb2x5Z29uKG5ldyBTQVQuVmVjdG9yKCksIFtcclxuICAgICAgICAgICAgbmV3IFNBVC5WZWN0b3IoTWF0aC5jb3Moby5lbmRTbGljZUFuZ2xlKSAqIG8uciwgTWF0aC5zaW4oby5lbmRTbGljZUFuZ2xlKSAqIG8uciksXHJcbiAgICAgICAgICAgIG5ldyBTQVQuVmVjdG9yKE1hdGguY29zKG8uZW5kU2xpY2VBbmdsZSkgKiBvLmlubmVyUmFkaXVzLCBNYXRoLnNpbihvLmVuZFNsaWNlQW5nbGUpICogby5pbm5lclJhZGl1cyksXHJcbiAgICAgICAgXSk7XHJcbiAgICAgICAgby5zdGFydFNsaWNlLnBvcyA9IG8uZW5kU2xpY2UucG9zID0gc2F0LnBvcztcclxuICAgICAgICBpZihwLnN0YXJ0U2xpY2VBbmdsZVJvdGF0ZVNwZWVkICE9PSAwIHx8IHAuZW5kU2xpY2VBbmdsZVJvdGF0ZVNwZWVkICE9PSAwKXtcclxuICAgICAgICAgICAgcC5jaXJjbGVTbGljZVJvdGF0ZSA9IChvKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBvLnN0YXJ0U2xpY2VBbmdsZSArPSBvLnN0YXJ0U2xpY2VBbmdsZVJvdGF0ZVNwZWVkO1xyXG4gICAgICAgICAgICAgICAgby5lbmRTbGljZUFuZ2xlICs9IG8uZW5kU2xpY2VBbmdsZVJvdGF0ZVNwZWVkO1xyXG4gICAgICAgICAgICAgICAgby5zdGFydFNsaWNlQW5nbGUgJT0gTWF0aC5QSSAqIDI7XHJcbiAgICAgICAgICAgICAgICBvLmVuZFNsaWNlQW5nbGUgJT0gTWF0aC5QSSAqIDI7XHJcbiAgICAgICAgICAgICAgICBpZihvLnN0YXJ0U2xpY2VBbmdsZSA8IDApIG8uc3RhcnRTbGljZUFuZ2xlICs9IE1hdGguUEkgKiAyO1xyXG4gICAgICAgICAgICAgICAgaWYoby5lbmRTbGljZUFuZ2xlIDwgMCkgby5lbmRTbGljZUFuZ2xlICs9IE1hdGguUEkgKiAyO1xyXG4gICAgICAgICAgICAgICAgby5zdGFydFNsaWNlLnNldFBvaW50cyhbXHJcbiAgICAgICAgICAgICAgICAgICAgbmV3IFNBVC5WZWN0b3IoTWF0aC5jb3Moby5zdGFydFNsaWNlQW5nbGUpICogby5zYXQuciwgTWF0aC5zaW4oby5zdGFydFNsaWNlQW5nbGUpICogby5zYXQuciksXHJcbiAgICAgICAgICAgICAgICAgICAgbmV3IFNBVC5WZWN0b3IoTWF0aC5jb3Moby5zdGFydFNsaWNlQW5nbGUpICogby5pbm5lclJhZGl1cywgTWF0aC5zaW4oby5zdGFydFNsaWNlQW5nbGUpICogby5pbm5lclJhZGl1cyksXHJcbiAgICAgICAgICAgICAgICBdKTtcclxuICAgICAgICAgICAgICAgIG8uZW5kU2xpY2Uuc2V0UG9pbnRzKFtcclxuICAgICAgICAgICAgICAgICAgICBuZXcgU0FULlZlY3RvcihNYXRoLmNvcyhvLmVuZFNsaWNlQW5nbGUpICogby5zYXQuciwgTWF0aC5zaW4oby5lbmRTbGljZUFuZ2xlKSAqIG8uc2F0LnIpLFxyXG4gICAgICAgICAgICAgICAgICAgIG5ldyBTQVQuVmVjdG9yKE1hdGguY29zKG8uZW5kU2xpY2VBbmdsZSkgKiBvLmlubmVyUmFkaXVzLCBNYXRoLnNpbihvLmVuZFNsaWNlQW5nbGUpICogby5pbm5lclJhZGl1cyksXHJcbiAgICAgICAgICAgICAgICBdKVxyXG4gICAgICAgICAgICAgICAgby5zdGFydFNsaWNlLnBvcyA9IG8uZW5kU2xpY2UucG9zID0gby5zYXQucG9zO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBzYXQ7XHJcbiAgICB9XHJcbl07XHJcblxyXG4vLyBmb250IGxvYWRpbmcgZml4XHJcbmZ1bmN0aW9uIGZpeEZvbnRzKCkge1xyXG4gICAgY29uc3Qgb3MgPSB3aW5kb3cub2JzdGFjbGVzO1xyXG4gICAgZm9yKGxldCBpID0gMDsgaSA8IG9zLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICBpZihvc1tpXS5pc1RleHQgIT09IHRydWUpIGNvbnRpbnVlO1xyXG4gICAgICAgIGNvbnN0IG9sZERpbWVuc2lvbnMgPSBvc1tpXS5kaW1lbnNpb25zO1xyXG4gICAgICAgIG9zW2ldLmRpbWVuc2lvbnMgPSBnZW5lcmF0ZURpbWVuc2lvbnMob3NbaV0pO1xyXG4gICAgICAgIG9zW2ldLnBvcy54ICs9IChvbGREaW1lbnNpb25zLnggLSBvc1tpXS5kaW1lbnNpb25zLngpIC8gMjtcclxuICAgICAgICBvc1tpXS5wb3MueSArPSAob2xkRGltZW5zaW9ucy55IC0gb3NbaV0uZGltZW5zaW9ucy55KSAvIDI7XHJcbiAgICAgICAgb3NbaV0udG9wTGVmdCA9IGdlbmVyYXRlVG9wTGVmdENvb3JkaW5hdGVzKG9zW2ldKTtcclxuICAgIH1cclxufVxyXG5zZXRUaW1lb3V0KGZpeEZvbnRzLCAxMDAwKTtcclxuc2V0VGltZW91dChmaXhGb250cywgMzAwMCk7XHJcblxyXG5mdW5jdGlvbiBnZW5lcmF0ZURpbWVuc2lvbnMobyl7XHJcbiAgICBjb25zdCBzYXQgPSBvLnNhdDtcclxuICAgIGlmKHNhdC5yICE9PSB1bmRlZmluZWQpe1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHg6IHNhdC5yICogMixcclxuICAgICAgICAgICAgeTogc2F0LnIgKiAyXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBpZihvLmlzVGV4dCA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgY3R4LnRleHRBbGlnbiA9ICdjZW50ZXInO1xyXG4gICAgICAgIGN0eC50ZXh0QmFzZWxpbmUgPSAnbWlkZGxlJztcclxuICAgICAgICBjdHguZm9udCA9IGAke28uZm9udFNpemV9cHggSW50ZXJgO1xyXG4gICAgICAgIGNvbnN0IGRpbWVuc2lvbnMgPSBjdHgubWVhc3VyZVRleHQoby50ZXh0KTtcclxuICAgICAgICBvLndPZmZzZXQgPSAoZGltZW5zaW9ucy5hY3R1YWxCb3VuZGluZ0JveFJpZ2h0IC0gZGltZW5zaW9ucy5hY3R1YWxCb3VuZGluZ0JveExlZnQpIC8gMjtcclxuICAgICAgICBvLmhPZmZzZXQgPSAoZGltZW5zaW9ucy5hY3R1YWxCb3VuZGluZ0JveERlc2NlbnQgLSBkaW1lbnNpb25zLmFjdHVhbEJvdW5kaW5nQm94QXNjZW50KSAvIDI7IC8vICowLjc1P1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHg6IGRpbWVuc2lvbnMuYWN0dWFsQm91bmRpbmdCb3hSaWdodCArIGRpbWVuc2lvbnMuYWN0dWFsQm91bmRpbmdCb3hMZWZ0LFxyXG4gICAgICAgICAgICB5OiBkaW1lbnNpb25zLmFjdHVhbEJvdW5kaW5nQm94RGVzY2VudCArIGRpbWVuc2lvbnMuYWN0dWFsQm91bmRpbmdCb3hBc2NlbnQsXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBsZXQgdG9wLCByaWdodCwgYm90dG9tLCBsZWZ0O1xyXG4gICAgYm90dG9tID0gcmlnaHQgPSAtSW5maW5pdHk7XHJcbiAgICB0b3AgPSBsZWZ0ID0gSW5maW5pdHk7XHJcbiAgICBmb3IobGV0IHAgb2Ygc2F0LnBvaW50cyl7XHJcbiAgICAgICAgaWYocC54IDwgbGVmdCkgbGVmdCA9IHAueDtcclxuICAgICAgICBpZihwLnggPiByaWdodCkgcmlnaHQgPSBwLng7XHJcbiAgICAgICAgaWYocC55ID4gYm90dG9tKSBib3R0b20gPSBwLnk7XHJcbiAgICAgICAgaWYocC55IDwgdG9wKSB0b3AgPSBwLnk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICB4OiByaWdodCAtIGxlZnQsXHJcbiAgICAgICAgeTogYm90dG9tIC0gdG9wXHJcbiAgICB9XHJcbn1cclxud2luZG93LmdlbmVyYXRlRGltZW5zaW9ucyA9IGdlbmVyYXRlRGltZW5zaW9ucztcclxuXHJcbmZ1bmN0aW9uIGdlbmVyYXRlVG9wTGVmdENvb3JkaW5hdGVzKG8pe1xyXG4gICAgbGV0IHRvcExlZnRYID0gby5wb3MueCwgdG9wTGVmdFkgPSBvLnBvcy55O1xyXG4gICAgaWYoby5zYXQuciAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgdG9wTGVmdFggLT0gby5zYXQucjtcclxuICAgICAgICB0b3BMZWZ0WSAtPSBvLnNhdC5yOyBcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgbGV0IG1pblggPSBJbmZpbml0eTtcclxuICAgICAgICBsZXQgbWluWSA9IEluZmluaXR5O1xyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBvLnNhdC5wb2ludHMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICBpZihvLnNhdC5wb2ludHNbaV0ueCA8IG1pblgpIG1pblggPSBvLnNhdC5wb2ludHNbaV0ueDtcclxuICAgICAgICAgICAgaWYoby5zYXQucG9pbnRzW2ldLnkgPCBtaW5ZKSBtaW5ZID0gby5zYXQucG9pbnRzW2ldLnk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRvcExlZnRYICs9IG1pblg7XHJcbiAgICAgICAgdG9wTGVmdFkgKz0gbWluWTtcclxuICAgIH1cclxuICAgIHJldHVybiB7eDogdG9wTGVmdFgsIHk6IHRvcExlZnRZfTtcclxufVxyXG53aW5kb3cuZ2VuZXJhdGVUb3BMZWZ0Q29vcmRpbmF0ZXMgPSBnZW5lcmF0ZVRvcExlZnRDb29yZGluYXRlcztcclxuXHJcbndpbmRvdy5zYXRNYXBJMk4gPSBbXHJcbiAgICAnY2lyY2xlJyxcclxuICAgICdyZWN0YW5nbGUnLFxyXG4gICAgJ3BvbHlnb24nLFxyXG4gICAgJ3RleHQnLFxyXG4gICAgJ2NpcmNsZVNsaWNlJ1xyXG5dO1xyXG5cclxud2luZG93LnNhdENvbnN0cmFpbnRzTWFwID0gW1xyXG4gICAgdW5kZWZpbmVkLFxyXG4gICAgdW5kZWZpbmVkLFxyXG4gICAgdW5kZWZpbmVkLFxyXG4gICAge2ZvbnRTaXplOiBbMV19LFxyXG4gICAgdW5kZWZpbmVkLFxyXG5dO1xyXG5cclxud2luZG93LnNhdERlZmF1bHRNYXAgPSBbXHJcbiAgICAvLyBjaXJjbGVcclxuICAgIHtcclxuICAgICAgICB4OiA0NTAsXHJcbiAgICAgICAgeTogODAwLFxyXG4gICAgICAgIHI6IDEyMFxyXG4gICAgfSxcclxuICAgIC8vIHJlY3RhbmdsZVxyXG4gICAge1xyXG4gICAgICAgIHg6IDMwMCxcclxuICAgICAgICB5OiA3MDAsXHJcbiAgICAgICAgdzogMzAwLFxyXG4gICAgICAgIGg6IDIwMFxyXG4gICAgfSxcclxuICAgIC8vIHBvbHlnb25cclxuICAgIHtcclxuICAgICAgICBwb2ludHM6IFtbMzAwLDcwMF0sWzYwMCw3MDBdLFs0NTAsOTAwXV0sXHJcbiAgICB9LFxyXG4gICAgLy8gdGV4dFxyXG4gICAge1xyXG4gICAgICAgIHg6IDQ1MCxcclxuICAgICAgICB5OiA4MDAsXHJcbiAgICAgICAgdGV4dDogWydXaHkgaGVsbG8gdGhlcmUnLCAnSSBhbSBhIHRleHQgOkQnLCAnRXZhZGVzIFgnLCAnVGFzdGUgdGhlIEVkZ2UuJ11bTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNCldLFxyXG4gICAgICAgIGZvbnRTaXplOiA4MCxcclxuICAgIH0sXHJcbiAgICAvLyBjaXJjbGVTbGljZVxyXG4gICAge1xyXG4gICAgICAgIHg6IDQ1MCxcclxuICAgICAgICB5OiA4MDAsXHJcbiAgICAgICAgcjogMTIwLFxyXG4gICAgICAgIGlubmVyUmFkaXVzOiA4MCxcclxuICAgICAgICBzdGFydFNsaWNlQW5nbGU6IDAsXHJcbiAgICAgICAgZW5kU2xpY2VBbmdsZTogMCxcclxuICAgICAgICBzdGFydFNsaWNlQW5nbGVSb3RhdGVTcGVlZDogMCxcclxuICAgICAgICBlbmRTbGljZUFuZ2xlUm90YXRlU3BlZWQ6IDBcclxuICAgIH1cclxuXVxyXG5cclxuY29uc3QgVEFVID0gTWF0aC5QSSAqIDI7XHJcbmNvbnN0IHJlbmRlclNoYXBlTWFwID0gW1xyXG4gICAgLypjaXJjbGUqL1xyXG4gICAgKG8pID0+IHtcclxuICAgICAgICBjdHguYXJjKG8ucG9zLngsIG8ucG9zLnksIG8uc2F0LnIsIDAsIFRBVSk7XHJcbiAgICB9LFxyXG4gICAgLypyZWN0YW5nbGUqL1xyXG4gICAgKG8pID0+IHtcclxuICAgICAgICAvLyBvLnNhdC5jYWxjUG9pbnRzWzBdIGlzIGF0IDAsMCBzbyB3ZSBjYW4gZHJvcCB0aGF0IGZyb20gdGhlIGZpcnN0IHR3byBhcmdzXHJcbiAgICAgICAgaWYoby5yb3RhdGlvbiAhPT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgICAgcmVuZGVyU2hhcGVNYXBbMl0obyk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgY3R4LnJlY3Qoby5wb3MueCwgby5wb3MueSwgby5kaW1lbnNpb25zLngsIG8uZGltZW5zaW9ucy55KTtcclxuICAgIH0sXHJcbiAgICAvKnBvbHlnb24qL1xyXG4gICAgKG8pID0+IHtcclxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgby5zYXQucG9pbnRzLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgY3R4LmxpbmVUbyhvLnBvcy54ICsgby5zYXQucG9pbnRzW2ldLngsIG8ucG9zLnkgKyBvLnNhdC5wb2ludHNbaV0ueSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGN0eC5saW5lVG8oby5wb3MueCArIG8uc2F0LnBvaW50c1swXS54LCBvLnBvcy55ICsgby5zYXQucG9pbnRzWzBdLnkpO1xyXG4gICAgfSxcclxuICAgIC8qdGV4dCovXHJcbiAgICAobykgPT4ge1xyXG4gICAgICAgIC8vIGRyYXcgcmVjdGFuZ2xlIGZvciBjbGlwcGluZyBwdXJwb3Nlc1xyXG4gICAgICAgIHJlbmRlclNoYXBlTWFwWzFdKG8pO1xyXG4gICAgfSxcclxuICAgIC8qY2lyY2xlU2xpY2UqL1xyXG4gICAgKG8pID0+IHtcclxuICAgICAgICBjdHgubW92ZVRvKG8ucG9zLnggKyBNYXRoLmNvcyhvLnN0YXJ0U2xpY2VBbmdsZSkgKiBvLmlubmVyUmFkaXVzLCBvLnBvcy55ICsgTWF0aC5zaW4oby5zdGFydFNsaWNlQW5nbGUpICogby5pbm5lclJhZGl1cyk7XHJcbiAgICAgICAgY3R4LmxpbmVUbyhvLnBvcy54ICsgTWF0aC5jb3Moby5zdGFydFNsaWNlQW5nbGUpICogby5zYXQuciwgby5wb3MueSArIE1hdGguc2luKG8uc3RhcnRTbGljZUFuZ2xlKSAqIG8uc2F0LnIpO1xyXG4gICAgICAgIGN0eC5hcmMoby5wb3MueCwgby5wb3MueSwgby5zYXQuciwgby5zdGFydFNsaWNlQW5nbGUsIG8uZW5kU2xpY2VBbmdsZSk7XHJcbiAgICAgICAgY3R4LmxpbmVUbyhvLnBvcy54ICsgTWF0aC5jb3Moby5lbmRTbGljZUFuZ2xlKSAqIG8uaW5uZXJSYWRpdXMsIG8ucG9zLnkgKyBNYXRoLnNpbihvLmVuZFNsaWNlQW5nbGUpICogby5pbm5lclJhZGl1cyk7XHJcbiAgICAgICAgaWYoby5pbm5lclJhZGl1cyAhPT0gMCljdHguYXJjKG8ucG9zLngsIG8ucG9zLnksIG8uaW5uZXJSYWRpdXMsIG8uZW5kU2xpY2VBbmdsZSwgby5zdGFydFNsaWNlQW5nbGUsIHRydWUpO1xyXG4gICAgfVxyXG5dXHJcblxyXG5jb25zdCBpbml0U2ltdWxhdGVNYXAgPSBbXHJcbiAgICAvKnBhdGhNb3ZlKi9cclxuICAgIChvLCBpbml0KSA9PiB7XHJcblx0XHRvLnBhdGggPSBpbml0LnBhdGg7Ly8gbGlrZSBbW3gseSxzcGVlZF0sIC4uLl1cclxuXHJcbiAgICAgICAgLy8gZmlsdGVyaW5nIG91dCBjb25zZWN1dGl2ZSBkdXBsaWNhdGVzXHJcbiAgICAgICAgZm9yKGxldCBpID0gby5wYXRoLmxlbmd0aC0xOyBpID49IDE7IGktLSl7XHJcbiAgICAgICAgICAgIGlmKG8ucGF0aFtpXVswXSA9PT0gby5wYXRoW2ktMV1bMF0gJiYgby5wYXRoW2ldWzFdID09PSBvLnBhdGhbaS0xXVsxXSkgby5wYXRoLnNwbGljZShpLDEpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYoby5wYXRoLmxlbmd0aCA8IDIpIG8ucGF0aCA9IHdpbmRvdy5zaW11bGF0ZURlZmF1bHRNYXBbMF0ucGF0aDtcclxuXHJcbiAgICAgICAgby5jdXJyZW50UG9pbnQgPSBNYXRoLmZsb29yKGluaXQuY3VycmVudFBvaW50KSAlIG8ucGF0aC5sZW5ndGg7XHJcblxyXG4gICAgICAgIG8ucG9pbnRPbiA9IG8ucGF0aFtvLmN1cnJlbnRQb2ludF07XHJcbiAgICAgICAgby5zcGVlZCA9IG8ucG9pbnRPblsyXTtcclxuICAgICAgICBcclxuICAgICAgICBsZXQgbmV4dFBvaW50SW5kZXggPSBvLmN1cnJlbnRQb2ludCArIDE7XHJcbiAgICAgICAgaWYgKG5leHRQb2ludEluZGV4ID09PSBvLnBhdGgubGVuZ3RoKSBuZXh0UG9pbnRJbmRleCA9IDA7XHJcbiAgICAgICAgXHJcbiAgICAgICAgby5wb2ludFRvID0gby5wYXRoW25leHRQb2ludEluZGV4XTtcclxuICAgICAgICBhbmdsZSA9IE1hdGguYXRhbjIoby5wb2ludFRvWzFdIC0gby5wb2ludE9uWzFdLCBvLnBvaW50VG9bMF0gLSBvLnBvaW50T25bMF0pO1xyXG4gICAgICAgIG8ueHYgPSBNYXRoLmNvcyhhbmdsZSkgKiBvLnNwZWVkO1xyXG4gICAgICAgIG8ueXYgPSBNYXRoLnNpbihhbmdsZSkgKiBvLnNwZWVkO1xyXG5cclxuICAgICAgICBvLnRpbWVSZW1haW4gPSBNYXRoLnNxcnQoKG8ucG9pbnRPblswXSAtIG8ucG9pbnRUb1swXSkqKjIgKyAoby5wb2ludE9uWzFdIC0gby5wb2ludFRvWzFdKSoqMikgLyBvLnNwZWVkO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnN0IGZyYWN0aW9uYWxQb2ludE9mZnNldCA9IGluaXQuY3VycmVudFBvaW50IC0gTWF0aC5mbG9vcihpbml0LmN1cnJlbnRQb2ludCk7XHJcbiAgICAgICAgaWYoZnJhY3Rpb25hbFBvaW50T2Zmc2V0ICE9PSAwKXtcclxuICAgICAgICAgICAgY29uc3QgbmV3VGltZVJlbWFpbiA9IG8udGltZVJlbWFpbiAqICgxIC0gZnJhY3Rpb25hbFBvaW50T2Zmc2V0KTtcclxuICAgICAgICAgICAgY29uc3QgZGVsdGEgPSBvLnRpbWVSZW1haW4gLSBuZXdUaW1lUmVtYWluO1xyXG4gICAgICAgICAgICBvLnBvcy54ICs9IGRlbHRhICogby54djtcclxuICAgICAgICAgICAgby5wb3MueSArPSBkZWx0YSAqIG8ueXY7XHJcbiAgICAgICAgICAgIG8udGltZVJlbWFpbiA9IG5ld1RpbWVSZW1haW47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBvLnBvcy54ICs9IG8ucG9pbnRPblswXSAtIG8ucGF0aFswXVswXTtcclxuICAgICAgICBvLnBvcy55ICs9IG8ucG9pbnRPblsxXSAtIG8ucGF0aFswXVsxXTtcclxuICAgIH0sXHJcbiAgICAvLyAvKnJvdGF0ZSovXHJcbiAgICAobywgaW5pdCkgPT4ge1xyXG4gICAgICAgIG8ucGl2b3RYID0gaW5pdC5waXZvdFg7XHJcbiAgICAgICAgby5waXZvdFkgPSBpbml0LnBpdm90WTtcclxuICAgICAgICBvLnJvdGF0aW9uID0gMDtcclxuICAgICAgICBpZihpbml0LmluaXRpYWxSb3RhdGlvbiAhPT0gMCAmJiBpbml0LmluaXRpYWxSb3RhdGlvbiAhPT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgICAgby5yb3RhdGVTcGVlZCA9IGluaXQuaW5pdGlhbFJvdGF0aW9uO1xyXG4gICAgICAgICAgICBzaW11bGF0ZU1hcFsxXShvKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgby5yb3RhdGVTcGVlZCA9IGluaXQucm90YXRlU3BlZWQ7XHJcbiAgICB9LFxyXG4gICAgLy8gLypncm93Ki9cclxuICAgIChvLCBpbml0KSA9PiB7XHJcbiAgICAgICAgby5ncm93U3BlZWQgPSBpbml0Lmdyb3dTcGVlZDtcclxuICAgICAgICBvLnNocmlua1NwZWVkID0gaW5pdC5zaHJpbmtTcGVlZDtcclxuICAgICAgICBvLm1heEdyb3d0aCA9IGluaXQubWF4R3Jvd3RoO1xyXG4gICAgICAgIG8ubWluR3Jvd3RoID0gaW5pdC5taW5Hcm93dGg7XHJcbiAgICAgICAgby5ncm93aW5nID0gaW5pdC50b1N0YXJ0R3Jvd2luZztcclxuICAgICAgICBvLmdyb3d0aCA9IG8ubGFzdEdyb3d0aCA9IGluaXQuc3RhcnRHcm93dGg7XHJcbiAgICB9LFxyXG4gICAgLy8gLypjdXN0b20qL1xyXG4gICAgKCkgPT4ge30sXHJcbiAgICAvLyAvKmlkKi9cclxuICAgIChvLCBpbml0KSA9PiB7XHJcbiAgICAgICAgbGV0IGlkID0gaW5pdC5pZC50b1N0cmluZygpLnRyaW0oKTtcclxuICAgICAgICBpZih3aW5kb3cuaWRUb09ic1tpZF0gIT09IHVuZGVmaW5lZCAmJiBlbnZpcm9ubWVudCA9PT0gJ2VkaXRvcicpIGFsZXJ0KGBXYXJuaW5nISBEdXBsaWNhdGUgaWQgXCIke2lkfVwiIGZvdW5kISBEdXBsaWNhdGUgaWRzIG92ZXJyaWRlIGVhY2ggb3RoZXIuYCk7XHJcbiAgICAgICAgd2luZG93LmlkVG9PYnNbaWRdID0gbztcclxuICAgIH0sXHJcbiAgICAvLyAvKnJvdGF0ZUhvbWluZyovXHJcbiAgICAobywgaW5pdCkgPT4ge1xyXG4gICAgICAgIG8udG9SZXN0ID0gaW5pdC50b1Jlc3Q7XHJcbiAgICAgICAgby5yZXN0QW5nbGVzID0gaW5pdC5yZXN0QW5nbGVzO1xyXG4gICAgICAgIG8uaG9taW5nUm90YXRlU3BlZWQgPSBpbml0LmhvbWluZ1JvdGF0ZVNwZWVkO1xyXG4gICAgICAgIG8ucm90YXRpb24gPSAwO1xyXG4gICAgICAgIG8uZGV0ZWN0aW9uUmFkaXVzU3F1YXJlZCA9IGluaXQuZGV0ZWN0aW9uUmFkaXVzICoqIDI7XHJcbiAgICAgICAgby5zcG9rZUFuZ2xlcyA9IGluaXQuc3Bva2VBbmdsZXM7Ly8gYXJyYXkgb2YgYW5nbGVzIG9mIHNwb2tlc1xyXG4gICAgICAgIG8ucGl2b3RYID0gaW5pdC5waXZvdFg7XHJcbiAgICAgICAgby5waXZvdFkgPSBpbml0LnBpdm90WTtcclxuICAgIH1cclxuXVxyXG5cclxuY29uc3Qgc2ltdWxhdGVNYXAgPSBbXHJcbiAgICAvKnBhdGhNb3ZlKi9cclxuICAgIChvKSA9PiB7XHJcbiAgICAgICAgby5wb3MueCArPSBvLnh2O1xyXG4gICAgICAgIG8ucG9zLnkgKz0gby55djtcclxuXHJcbiAgICAgICAgby50aW1lUmVtYWluLS07XHJcbiAgICAgICAgaWYgKG8udGltZVJlbWFpbiA8PSAwKSB7XHJcbiAgICAgICAgICAgIG8uY3VycmVudFBvaW50Kys7XHJcbiAgICAgICAgICAgIGlmIChvLmN1cnJlbnRQb2ludCA9PT0gby5wYXRoLmxlbmd0aCkgby5jdXJyZW50UG9pbnQgPSAwO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgby5wb2ludE9uID0gby5wYXRoW28uY3VycmVudFBvaW50XTtcclxuICAgICAgICAgICAgby5zcGVlZCA9IG8ucG9pbnRPblsyXTtcclxuICAgIFxyXG4gICAgICAgICAgICAvLyBzbmFwcGluZyBiYWNrIHRvIHRoZSBwb2ludCB0aGF0IHdlIHNob3VsZCBiZSBvblxyXG4gICAgICAgICAgICBvLnBvcy54ICs9IG8ueHYgKiBvLnRpbWVSZW1haW47XHJcbiAgICAgICAgICAgIG8ucG9zLnkgKz0gby55diAqIG8udGltZVJlbWFpbjtcclxuICAgIFxyXG4gICAgICAgICAgICBsZXQgbmV4dFBvaW50SW5kZXggPSBvLmN1cnJlbnRQb2ludCArIDE7XHJcbiAgICAgICAgICAgIGlmIChuZXh0UG9pbnRJbmRleCA9PT0gby5wYXRoLmxlbmd0aCkgbmV4dFBvaW50SW5kZXggPSAwO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgby5wb2ludFRvID0gby5wYXRoW25leHRQb2ludEluZGV4XTtcclxuICAgIFxyXG4gICAgICAgICAgICBhbmdsZSA9IE1hdGguYXRhbjIoby5wb2ludFRvWzFdIC0gby5wb2ludE9uWzFdLCBvLnBvaW50VG9bMF0gLSBvLnBvaW50T25bMF0pO1xyXG4gICAgICAgICAgICBvLnh2ID0gTWF0aC5jb3MoYW5nbGUpICogby5zcGVlZDtcclxuICAgICAgICAgICAgby55diA9IE1hdGguc2luKGFuZ2xlKSAqIG8uc3BlZWQ7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBsZXQgZGlzdCA9IE1hdGguc3FydCgoby5wb2ludE9uWzBdLW8ueHYqby50aW1lUmVtYWluIC0gby5wb2ludFRvWzBdKSoqMiArIChvLnBvaW50T25bMV0tby55dipvLnRpbWVSZW1haW4gLSBvLnBvaW50VG9bMV0pKioyKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmKChvLnh2ICoqIDIgKyBvLnl2ICoqIDIpICogKG8udGltZVJlbWFpbiAqKiAyKSA+IGRpc3Qpe1xyXG4gICAgICAgICAgICAgICAgLy8gd2UndmUgb3ZlcnNob3QgdGhlIG5leHQgcG9pbnQsIGp1c3Qgc3RheSBvbiB0aGUgaW5pdGFsIHBvaW50IChubyBzeW5jKVxyXG4gICAgICAgICAgICAgICAgZGlzdCA9IE1hdGguc3FydCgoby5wb2ludE9uWzBdIC0gby5wb2ludFRvWzBdKSoqMiArIChvLnBvaW50T25bMV0gLSBvLnBvaW50VG9bMV0pKioyKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIC8vIGNvcnJlY3QgdG8gbmV4dCBwdCAoc3luYylcclxuICAgICAgICAgICAgICAgIG8ucG9zLnggLT0gby54diAqIG8udGltZVJlbWFpbjtcclxuICAgICAgICAgICAgICAgIG8ucG9zLnkgLT0gby55diAqIG8udGltZVJlbWFpbjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gdGltZSA9IGRpc3RhbmNlIC8gc3BlZWRcclxuICAgICAgICAgICAgby50aW1lUmVtYWluID0gZGlzdCAvIG8uc3BlZWQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBvLnRvcExlZnQgPSB3aW5kb3cuZ2VuZXJhdGVUb3BMZWZ0Q29vcmRpbmF0ZXMobyk7XHJcbiAgICB9LFxyXG4gICAgLypyb3RhdGUqL1xyXG4gICAgKG8pID0+IHtcclxuICAgICAgICBpZihvLnNhdC5yICE9PSB1bmRlZmluZWQpe1xyXG4gICAgICAgICAgICBvLnBvcy54IC09IG8ucGl2b3RYO1xyXG4gICAgICAgICAgICBvLnBvcy55IC09IG8ucGl2b3RZO1xyXG4gICAgICAgICAgICBvLnNhdC5yb3RhdGUoby5yb3RhdGVTcGVlZCk7XHJcbiAgICAgICAgICAgIG8ucG9zLnggKz0gby5waXZvdFg7XHJcbiAgICAgICAgICAgIG8ucG9zLnkgKz0gby5waXZvdFk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgby5zYXQudHJhbnNsYXRlKG8ucG9zLngtby5waXZvdFgsIG8ucG9zLnktby5waXZvdFkpO1xyXG4gICAgICAgICAgICBvLnNhdC5yb3RhdGUoby5yb3RhdGVTcGVlZCk7XHJcbiAgICAgICAgICAgIG8uc2F0LnRyYW5zbGF0ZShvLnBpdm90WC1vLnBvcy54LCBvLnBpdm90WS1vLnBvcy55KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgby5yb3RhdGlvbiArPSBvLnJvdGF0ZVNwZWVkO1xyXG4gICAgICAgIG8uZGltZW5zaW9ucyA9IGdlbmVyYXRlRGltZW5zaW9ucyhvKTtcclxuICAgICAgICBvLnRvcExlZnQgPSB3aW5kb3cuZ2VuZXJhdGVUb3BMZWZ0Q29vcmRpbmF0ZXMobyk7XHJcbiAgICB9LFxyXG4gICAgLypncm93Ki9cclxuICAgIChvKSA9PiB7XHJcbiAgICAgICAgaWYoby5ncm93aW5nID09PSB0cnVlKSB7XHJcbiAgICAgICAgICAgIG8uZ3Jvd3RoICs9IG8uZ3Jvd1NwZWVkO1xyXG4gICAgICAgICAgICBpZihvLmdyb3d0aCA+PSBvLm1heEdyb3d0aCl7XHJcbiAgICAgICAgICAgICAgICBvLmdyb3dpbmcgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIG8uZ3Jvd3RoID0gby5tYXhHcm93dGg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIG8uZ3Jvd3RoIC09IG8uc2hyaW5rU3BlZWQ7XHJcbiAgICAgICAgICAgIGlmKG8uZ3Jvd3RoIDw9IG8ubWluR3Jvd3RoKXtcclxuICAgICAgICAgICAgICAgIG8uZ3Jvd2luZyA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBvLmdyb3d0aCA9IG8ubWluR3Jvd3RoO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBncm93dGhSYXRpbyA9IG8uZ3Jvd3RoIC8gby5sYXN0R3Jvd3RoO1xyXG5cclxuICAgICAgICBpZihvLnNhdC5yICE9PSB1bmRlZmluZWQpe1xyXG4gICAgICAgICAgICAvLyBjaXJjbGVcclxuICAgICAgICAgICAgby5zYXQuciAqPSBncm93dGhSYXRpbztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvLyBwb2x5XHJcbiAgICAgICAgICAgIGxldCBtaWRkbGVYID0gby50b3BMZWZ0LnggKyBvLmRpbWVuc2lvbnMueC8yO1xyXG4gICAgICAgICAgICBsZXQgbWlkZGxlWSA9IG8udG9wTGVmdC55ICsgby5kaW1lbnNpb25zLnkvMjsgXHJcblxyXG4gICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgby5zYXQucG9pbnRzLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgICAgIG8uc2F0LnBvaW50c1tpXS54ID0gKG8uc2F0LnBvaW50c1tpXS54ICsgby5wb3MueCAtIG1pZGRsZVgpICogZ3Jvd3RoUmF0aW8gLSBvLnBvcy54ICsgbWlkZGxlWDtcclxuICAgICAgICAgICAgICAgIG8uc2F0LnBvaW50c1tpXS55ID0gKG8uc2F0LnBvaW50c1tpXS55ICsgby5wb3MueSAtIG1pZGRsZVkpICogZ3Jvd3RoUmF0aW8gLSBvLnBvcy55ICsgbWlkZGxlWTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBvLnNhdC5zZXRQb2ludHMoby5zYXQucG9pbnRzKTtcclxuXHJcbiAgICAgICAgICAgIGlmKG8uaXNUZXh0ID09PSB0cnVlKXtcclxuICAgICAgICAgICAgICAgIG8uZm9udFNpemUgKj0gZ3Jvd3RoUmF0aW87XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIG8udG9wTGVmdCA9IHdpbmRvdy5nZW5lcmF0ZVRvcExlZnRDb29yZGluYXRlcyhvKTtcclxuICAgICAgICBvLmRpbWVuc2lvbnMgPSBnZW5lcmF0ZURpbWVuc2lvbnMobyk7XHJcbiAgICAgICAgby5sYXN0R3Jvd3RoID0gby5ncm93dGg7XHJcbiAgICB9LFxyXG4gICAgLypjdXN0b20qL1xyXG4gICAgKCkgPT4ge30sXHJcbiAgICAvKmlkKi9cclxuICAgICgpID0+IHt9LFxyXG4gICAgLypyb3RhdGVIb21pbmcqL1xyXG4gICAgKG8sIHApID0+IHtcclxuICAgICAgICBsZXQgbWlkZGxlWCA9IG8udG9wTGVmdC54ICsgby5kaW1lbnNpb25zLngvMjtcclxuICAgICAgICBsZXQgbWlkZGxlWSA9IG8udG9wTGVmdC55ICsgby5kaW1lbnNpb25zLnkvMjsgXHJcblxyXG4gICAgICAgIGlmKHAuZGVhZCA9PT0gdHJ1ZSB8fCAocC5wb3MueCAtIG1pZGRsZVgpKioyICsgKHAucG9zLnkgLSBtaWRkbGVZKSAqKiAyID4gby5kZXRlY3Rpb25SYWRpdXNTcXVhcmVkKSB7XHJcbiAgICAgICAgICAgIGlmKG8udG9SZXN0ID09PSBmYWxzZSkgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgbGV0IG1pblNwb2tlQW5ndWxhckRpc3QgPSBJbmZpbml0eTtcclxuXHJcbiAgICAgICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBvLnJlc3RBbmdsZXMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgbGV0IGFuZ2xlRGlzdCA9IHNob3J0QW5nbGVEaXN0KG8ucm90YXRpb24sIG8ucmVzdEFuZ2xlc1tpXSk7XHJcbiAgICAgICAgICAgICAgICBpZihNYXRoLmFicyhhbmdsZURpc3QpIDwgTWF0aC5hYnMobWluU3Bva2VBbmd1bGFyRGlzdCkpe1xyXG4gICAgICAgICAgICAgICAgICAgIG1pblNwb2tlQW5ndWxhckRpc3QgPSBhbmdsZURpc3Q7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmKG1pblNwb2tlQW5ndWxhckRpc3QgPT09IEluZmluaXR5KSByZXR1cm47XHJcblxyXG4gICAgICAgICAgICBpZihNYXRoLmFicyhtaW5TcG9rZUFuZ3VsYXJEaXN0KSA8IG8uaG9taW5nUm90YXRlU3BlZWQpIG8ucm90YXRlU3BlZWQgPSBtaW5TcG9rZUFuZ3VsYXJEaXN0O1xyXG4gICAgICAgICAgICBlbHNlIG8ucm90YXRlU3BlZWQgPSBNYXRoLnNpZ24obWluU3Bva2VBbmd1bGFyRGlzdCkgKiBvLmhvbWluZ1JvdGF0ZVNwZWVkO1xyXG4gICAgICAgICAgICBzaW11bGF0ZU1hcFsxXShvKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgYW5nbGUgPSBNYXRoLmF0YW4yKHAucG9zLnkgLSBtaWRkbGVZLCBwLnBvcy54IC0gbWlkZGxlWCk7XHJcblxyXG4gICAgICAgIGxldCBtaW5TcG9rZUFuZ3VsYXJEaXN0ID0gSW5maW5pdHk7XHJcblxyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBvLnNwb2tlQW5nbGVzLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgbGV0IGFuZ2xlRGlzdCA9IHNob3J0QW5nbGVEaXN0KG8uc3Bva2VBbmdsZXNbaV0gKyBvLnJvdGF0aW9uLCBhbmdsZSk7XHJcbiAgICAgICAgICAgIGlmKE1hdGguYWJzKGFuZ2xlRGlzdCkgPCBNYXRoLmFicyhtaW5TcG9rZUFuZ3VsYXJEaXN0KSl7XHJcbiAgICAgICAgICAgICAgICBtaW5TcG9rZUFuZ3VsYXJEaXN0ID0gYW5nbGVEaXN0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZihtaW5TcG9rZUFuZ3VsYXJEaXN0ID09PSBJbmZpbml0eSkgcmV0dXJuO1xyXG5cclxuICAgICAgICBpZihNYXRoLmFicyhtaW5TcG9rZUFuZ3VsYXJEaXN0KSA8IG8uaG9taW5nUm90YXRlU3BlZWQpIG8ucm90YXRlU3BlZWQgPSBtaW5TcG9rZUFuZ3VsYXJEaXN0O1xyXG4gICAgICAgIGVsc2Ugby5yb3RhdGVTcGVlZCA9IE1hdGguc2lnbihtaW5TcG9rZUFuZ3VsYXJEaXN0KSAqIG8uaG9taW5nUm90YXRlU3BlZWQ7XHJcblxyXG4gICAgICAgIHNpbXVsYXRlTWFwWzFdKG8pO1xyXG4gICAgfVxyXG5dXHJcblxyXG4vLyAtLS1cclxuXHJcbi8vIC0tLVxyXG5cclxuZnVuY3Rpb24gc2hvcnRBbmdsZURpc3QoYTAsYTEpIHtcclxuICAgIGxldCBkYSA9IChhMSAtIGEwKSAlIFRBVTtcclxuICAgIHJldHVybiAyKmRhICUgVEFVIC0gZGE7XHJcbn1cclxuXHJcbndpbmRvdy5zaW11bGF0ZU1hcEkyTiA9IFtcclxuICAgICdwYXRoTW92ZScsXHJcbiAgICAncm90YXRlJyxcclxuICAgICdncm93JyxcclxuICAgICdjdXN0b20nLFxyXG4gICAgJ2lkJyxcclxuICAgICdyb3RhdGVIb21pbmcnLFxyXG5dXHJcblxyXG53aW5kb3cuc2ltdWxhdGVEZWZhdWx0TWFwID0gW1xyXG4gICAgLy8gcGF0aE1vdmVcclxuICAgIHtcclxuICAgICAgICBjdXJyZW50UG9pbnQ6IDAsXHJcbiAgICAgICAgcGF0aDogW1swLDAsMV0sWzEwMCwwLDJdLFswLDEwMCwzXV0sXHJcbiAgICB9LFxyXG4gICAgLy8gcm90YXRlXHJcbiAgICB7XHJcbiAgICAgICAgaW5pdGlhbFJvdGF0aW9uOiAwLFxyXG4gICAgICAgIHJvdGF0ZVNwZWVkOiAwLjAxLFxyXG4gICAgICAgIHBpdm90WDogNDUwLFxyXG4gICAgICAgIHBpdm90WTogODAwXHJcbiAgICB9LFxyXG4gICAgLy8gZ3Jvd1xyXG4gICAge1xyXG4gICAgICAgIGdyb3dTcGVlZDogMC4wMDYsXHJcbiAgICAgICAgc2hyaW5rU3BlZWQ6IDAuMDA2LFxyXG4gICAgICAgIG1heEdyb3d0aDogMS4yNSxcclxuICAgICAgICBtaW5Hcm93dGg6IDEsXHJcbiAgICAgICAgc3RhcnRHcm93dGg6IDEsXHJcbiAgICAgICAgdG9TdGFydEdyb3dpbmc6IHRydWUsXHJcbiAgICB9LFxyXG4gICAgLy8gY3VzdG9tXHJcbiAgICB7fSxcclxuICAgIC8vIGlkXHJcbiAgICB7XHJcbiAgICAgICAgaWQ6ICd1bmlxdWVJZCdcclxuICAgIH0sXHJcbiAgICAvLyByb3RhdGVIb21pbmdcclxuICAgIHtcclxuICAgICAgICB0b1Jlc3Q6IHRydWUsXHJcbiAgICAgICAgcmVzdEFuZ2xlczogWzAsIE1hdGguUEldLFxyXG4gICAgICAgIGhvbWluZ1JvdGF0ZVNwZWVkOiAwLjAxLFxyXG4gICAgICAgIGRldGVjdGlvblJhZGl1czogMjAwLFxyXG4gICAgICAgIHNwb2tlQW5nbGVzOiBbMCwgTWF0aC5QSV0sXHJcbiAgICAgICAgcGl2b3RYOiA0NTAsXHJcbiAgICAgICAgcGl2b3RZOiA4MDBcclxuICAgIH1cclxuXVxyXG5cclxud2luZG93LnNpbXVsYXRlQ29uc3RyYWludHNNYXAgPSBbXHJcbiAgICB7Y3VycmVudFBvaW50OiBbMF19LFxyXG4gICAgdW5kZWZpbmVkLFxyXG4gICAge2dyb3dTcGVlZDogWzBdLCBzaHJpbmtTcGVlZDogWzBdLCBtaW5Hcm93dGg6IFswLjAwMV0sIG1heEdyb3d0aDogWzAuMDAxXX0sXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICB1bmRlZmluZWQsXHJcbl07XHJcblxyXG5jb25zdCBpbml0RWZmZWN0TWFwID0gW1xyXG4gICAgLypib3VuZCovXHJcbiAgICAoKSA9PiB7fSxcclxuICAgIC8qa2lsbCovXHJcbiAgICAobywgcGFyYW1zKSA9PiB7XHJcbiAgICAgICAgby5ib3VuZFBsYXllciA9IHBhcmFtcy5ib3VuZFBsYXllciA/PyBmYWxzZTtcclxuICAgIH0sXHJcbiAgICAvKmJvdW5jZSovXHJcbiAgICAobywgcGFyYW1zKSA9PiB7XHJcbiAgICAgICAgLy8gYm91bmNpbmVzcywgZGVjYXlcclxuICAgICAgICBvLmJvdW5jaW5lc3MgPSBwYXJhbXMuYm91bmNpbmVzcztcclxuICAgICAgICBvLmRlY2F5ID0gcGFyYW1zLmRlY2F5O1xyXG4gICAgfSxcclxuICAgIC8qY3VzdG9tKi9cclxuICAgICgpID0+IHt9LFxyXG4gICAgLypjdXN0b21JbWFnZSovXHJcbiAgICAobywgcGFyYW1zKSA9PiB7XHJcbiAgICAgICAgby5pbWcgPSB0eXBlb2YgSW1hZ2UgPT09ICd1bmRlZmluZWQnID8ge30gOiBuZXcgSW1hZ2UoKTtcclxuICAgICAgICBvLmltZy5zcmMgPSBwYXJhbXMudXJsO1xyXG4gICAgICAgIG8uaW1nTG9hZGVkID0gZmFsc2U7XHJcbiAgICAgICAgby5pbWcub25sb2FkID0gKCkgPT4ge28uaW1nTG9hZGVkID0gdHJ1ZTt9XHJcbiAgICB9LFxyXG4gICAgLypzdG9wRm9yY2VzKi9cclxuICAgICgpID0+IHt9LFxyXG4gICAgLyp3aW5wYWQqL1xyXG4gICAgKG8sIHBhcmFtcykgPT4ge1xyXG4gICAgICAgIG8uaXNXaW5wYWQgPSB0cnVlO1xyXG4gICAgfSxcclxuICAgIC8qY29pbiovXHJcbiAgICAobywgcGFyYW1zKSA9PiB7XHJcbiAgICAgICAgby5jb2xsZWN0ZWQgPSBmYWxzZTtcclxuICAgICAgICBvLmNvaW5BbW91bnQgPSBwYXJhbXMuY29pbkFtb3VudDtcclxuICAgICAgICBvLmNvbG9yID0gcGFyYW1zLmNvbG9yO1xyXG4gICAgfSxcclxuICAgIC8qY29pbmRvb3IqL1xyXG4gICAgKG8sIHBhcmFtcykgPT4ge1xyXG4gICAgICAgIG8uaXNDb2luZG9vciA9IHRydWU7XHJcbiAgICAgICAgby5tYXhDb2lucyA9IG8uY29pbnMgPSBwYXJhbXMuY29pbmRvb3JDb2luQW1vdW50O1xyXG4gICAgICAgIG8uY29pbkRvb3JDb2xvciA9IHBhcmFtcy5jb2luRG9vckNvbG9yO1xyXG4gICAgfSxcclxuICAgIC8qY2hlY2twb2ludCovXHJcbiAgICAobywgcGFyYW1zKSA9PiB7XHJcbiAgICAgICAgby5jaGVja3BvaW50Q29sbGVjdGVkID0gZmFsc2U7XHJcbiAgICAgICAgby5jaGVja3BvaW50T2Zmc2V0WCA9IHBhcmFtcy5jaGVja3BvaW50T2Zmc2V0WDtcclxuICAgICAgICBvLmNoZWNrcG9pbnRPZmZzZXRZID0gcGFyYW1zLmNoZWNrcG9pbnRPZmZzZXRZO1xyXG4gICAgfSxcclxuICAgIC8qYnJlYWthYmxlKi9cclxuICAgIChvLCBwYXJhbXMpID0+IHtcclxuICAgICAgICBvLm1heFN0cmVuZ3RoID0gcGFyYW1zLm1heFN0cmVuZ3RoOy8vNjBcclxuICAgICAgICBvLnN0cmVuZ3RoID0gby5tYXhTdHJlbmd0aDtcclxuICAgICAgICBvLnJlZ2VuVGltZSA9IHBhcmFtcy5yZWdlblRpbWU7XHJcbiAgICAgICAgby5sYXN0QnJva2VUaW1lID0gLTFFOTk7XHJcbiAgICAgICAgby5oZWFsU3BlZWQgPSBwYXJhbXMuaGVhbFNwZWVkO1xyXG4gICAgfSxcclxuICAgIC8qc2FmZSovXHJcbiAgICAoKSA9PiB7fSxcclxuICAgIC8qdHAqL1xyXG4gICAgKG8sIHBhcmFtcykgPT4ge1xyXG4gICAgICAgIG8udHB4ID0gcGFyYW1zLnRweDtcclxuICAgICAgICBvLnRweSA9IHBhcmFtcy50cHk7XHJcbiAgICB9LFxyXG4gICAgLypjb252ZXlvciovXHJcbiAgICAobywgcGFyYW1zKSA9PiB7XHJcbiAgICAgICAgby5jb252ZXlvckZvcmNlID0gcGFyYW1zLmNvbnZleW9yRm9yY2U7XHJcbiAgICAgICAgby5jb252ZXlvckFuZ2xlID0gcGFyYW1zLmNvbnZleW9yQW5nbGUgKiBNYXRoLlBJIC8gMTgwO1xyXG4gICAgICAgIG8uY29udmV5b3JBbmdsZVJvdGF0ZVNwZWVkID0gcGFyYW1zLmNvbnZleW9yQW5nbGVSb3RhdGVTcGVlZCAqIE1hdGguUEkvMTgwO1xyXG4gICAgICAgIG8uY29udmV5b3JGcmljdGlvbiA9IHBhcmFtcy5jb252ZXlvckZyaWN0aW9uO1xyXG4gICAgfSxcclxuICAgIC8qcGxhdGZvcm1lciovXHJcbiAgICAobywgcGFyYW1zKSA9PiB7XHJcbiAgICAgICAgby5wbGF0Zm9ybWVyRm9yY2UgPSBwYXJhbXMucGxhdGZvcm1lckZvcmNlO1xyXG4gICAgICAgIG8ucGxhdGZvcm1lckFuZ2xlID0gcGFyYW1zLnBsYXRmb3JtZXJBbmdsZSAqIE1hdGguUEkvMTgwO1xyXG4gICAgICAgIG8ucGxhdGZvcm1lckFuZ2xlUm90YXRlU3BlZWQgPSBwYXJhbXMucGxhdGZvcm1lckFuZ2xlUm90YXRlU3BlZWQgKiBNYXRoLlBJLzE4MDtcclxuICAgICAgICBvLnBsYXRmb3JtZXJGcmljdGlvbiA9IHBhcmFtcy5wbGF0Zm9ybWVyRnJpY3Rpb247XHJcblxyXG4gICAgICAgIC8vIG8ubWF4SnVtcHMgPSBwYXJhbXMubWF4SnVtcHMvLyBUT0RPOiBJTVBMRU1FTlQgSlVNUFMuIGFsc28gVE9ETzogYWRkIGEgcHJlc2VydmUganVtcCBwYXJhbWV0ZXIgdGhhdCBtYWtlcyBqdW1wcyBjb25zZXJ2ZSBldmVuIGlmIHlvdSBhcmUgbm90IGJvdW5kZWQgdGhhdCBmcmFtZS4gSWYgZGlzYWJsZWQsIHBsYXRmb3JtZXIgb25seSBsZXRzIHlvdSBqdW1wIHdoZW4geW91J3JlIG9uIGEgcGxhdCBUSEFUIEZSQU1FXHJcbiAgICAgICAgby5tYXhKdW1wQ29vbGRvd24gPSBwYXJhbXMubWF4SnVtcENvb2xkb3duOy8vIGluIHRpY2tzXHJcbiAgICAgICAgby5qdW1wQ29vbGRvd24gPSAwO1xyXG4gICAgICAgIG8uanVtcEZvcmNlID0gcGFyYW1zLmp1bXBGb3JjZTtcclxuICAgICAgICBvLmp1bXBGcmljdGlvbiA9IHBhcmFtcy5qdW1wRGVjYXk7XHJcblxyXG4gICAgICAgIG8uY2FuSnVtcE1pZGFpciA9IHBhcmFtcy5jYW5KdW1wTWlkYWlyO1xyXG4gICAgICAgIG8ubWlkYWlyU3RvcmVkSnVtcCA9IGZhbHNlO1xyXG4gICAgICAgIG8uanVzdEp1bXBlZCA9IGZhbHNlO1xyXG5cclxuICAgICAgICBvLmp1bXBGb3JjZU9iaiA9IHtwbGF5ZXJGb3JjZUlkOiB1bmRlZmluZWR9O1xyXG5cclxuICAgICAgICBvLnRvdWNoaW5nUGxhdGZvcm1lciA9IGZhbHNlO1xyXG4gICAgfSxcclxuICAgIC8qcmVzdHJpY3RBeGlzKi9cclxuICAgIChvLCBwYXJhbXMpID0+IHtcclxuICAgICAgICBvLmF4aXNTcGVlZE11bHRYID0gcGFyYW1zLmF4aXNTcGVlZE11bHRYO1xyXG4gICAgICAgIG8uYXhpc1NwZWVkTXVsdFkgPSBwYXJhbXMuYXhpc1NwZWVkTXVsdFk7XHJcbiAgICB9LFxyXG4gICAgLypzbmFwR3JpZCovXHJcbiAgICAobywgcGFyYW1zKSA9PiB7XHJcbiAgICAgICAgby50b1NuYXBYID0gcGFyYW1zLnRvU25hcFg7XHJcbiAgICAgICAgby50b1NuYXBZID0gcGFyYW1zLnRvU25hcFk7XHJcbiAgICAgICAgby5zbmFwRGlzdGFuY2VYID0gcGFyYW1zLnNuYXBEaXN0YW5jZVg7XHJcbiAgICAgICAgby5zbmFwRGlzdGFuY2VZID0gcGFyYW1zLnNuYXBEaXN0YW5jZVk7XHJcbiAgICAgICAgby5zbmFwQ29vbGRvd24gPSBvLm1heFNuYXBDb29sZG93biA9IHBhcmFtcy5zbmFwQ29vbGRvd247XHJcbiAgICAgICAgby5zbmFwQW5nbGUgPSBwYXJhbXMuc25hcEFuZ2xlICogTWF0aC5QSSAvIDE4MDtcclxuICAgICAgICBvLnNuYXBBbmdsZVJvdGF0ZVNwZWVkID0gcGFyYW1zLnNuYXBBbmdsZVJvdGF0ZVNwZWVkICogTWF0aC5QSS8xODA7XHJcblxyXG4gICAgICAgIG8uaW50ZXJwb2xhdGVQbGF5ZXJEYXRhID0ge3RpbWU6IDAsIG5leHRYOiAtMSwgbmV4dFk6IC0xfTtcclxuICAgICAgICAvLyBvLnNuYXBEaXN0YW5jZVggPSBNYXRoLm1heCgzNSwgby5zbmFwRGlzdGFuY2VYKTtcclxuICAgICAgICAvLyBvLnNuYXBEaXN0YW5jZVkgPSBNYXRoLm1heCgzNSwgby5zbmFwRGlzdGFuY2VZKTtcclxuICAgICAgICBcclxuICAgICAgICBvLnNuYXBNYWduaXR1ZGUgPSBNYXRoLnNxcnQoby5zbmFwRGlzdGFuY2VYICoqIDIgKyBvLnNuYXBEaXN0YW5jZVkgKiogMik7IC8vKG8uc25hcERpc3RhbmNlWCArIG8uc25hcERpc3RhbmNlWSkvMlxyXG4gICAgfSxcclxuICAgIC8qdGltZVRyYXAqL1xyXG4gICAgKG8sIHBhcmFtcykgPT4ge1xyXG4gICAgICAgIG8udGltZVRyYXBUaW1lID0gby50aW1lVHJhcE1heFRpbWUgPSBwYXJhbXMudGltZVRyYXBNYXhUaW1lO1xyXG4gICAgICAgIG8udGltZVRyYXBSZWNvdmVyeVNwZWVkID0gcGFyYW1zLnRpbWVUcmFwUmVjb3ZlcnlTcGVlZDtcclxuICAgICAgICBvLnRpbWVUcmFwVG9LaWxsID0gcGFyYW1zLnRpbWVUcmFwVG9LaWxsO1xyXG4gICAgICAgIG8udGltZVRyYXBUb1Nob3dUZW50aCA9IHBhcmFtcy50aW1lVHJhcFRvU2hvd1RlbnRoO1xyXG4gICAgICAgIG8udGltZVRyYXBJbnRlcnNlY3RpbmcgPSBmYWxzZTtcclxuICAgIH0sXHJcbiAgICAvKmNoYW5nZVNpemUqL1xyXG4gICAgKG8sIHBhcmFtcykgPT4ge1xyXG4gICAgICAgIG8uc2l6ZU11bHQgPSBwYXJhbXMuc2l6ZU11bHQ7XHJcbiAgICAgICAgby5zaXplQ2hhbmdlUGVybWFuZW50ID0gcGFyYW1zLnNpemVDaGFuZ2VQZXJtYW5lbnQ7XHJcbiAgICAgICAgby5sYXN0Q2hhbmdlU2l6ZUNvbGxpZGluZyA9IG8uY2hhbmdlU2l6ZUNvbGxpZGluZyA9IGZhbHNlO1xyXG4gICAgfSxcclxuICAgIC8qY2hhbmdlU3BlZWQqL1xyXG4gICAgKG8sIHBhcmFtcykgPT4ge1xyXG4gICAgICAgIG8uc3BlZWRNdWx0ID0gcGFyYW1zLnNwZWVkTXVsdDtcclxuICAgICAgICBvLnNwZWVkQ2hhbmdlUGVybWFuZW50ID0gcGFyYW1zLnNwZWVkQ2hhbmdlUGVybWFuZW50O1xyXG4gICAgfSxcclxuICAgIC8qc29saWRDb2xvciovXHJcbiAgICAobywgcGFyYW1zKSA9PiB7XHJcbiAgICAgICAgby5oZXggPSBwYXJhbXMuaGV4O1xyXG4gICAgICAgIG8uYWxwaGEgPSBwYXJhbXMuYWxwaGE7XHJcbiAgICB9LFxyXG4gICAgLypkZWNvcmF0aW9uKi9cclxuICAgIChvLCBwYXJhbXMpID0+IHtcclxuICAgICAgICBvLmRlY29GaWxlUGF0aCA9IHBhcmFtcy5kZWNvRmlsZVBhdGg7XHJcbiAgICB9LFxyXG4gICAgLypjaGFuZ2VNYXAqL1xyXG4gICAgKG8sIHBhcmFtcykgPT4ge1xyXG4gICAgICAgIG8ubWFwTmFtZSA9IHBhcmFtcy5tYXBOYW1lO1xyXG4gICAgICAgIG8uZGlmZmljdWx0eSA9IHdpbmRvdy5tYXBEaWZmaWN1bHRpZXNbcGFyYW1zLm1hcE5hbWVdID8/IDA7XHJcbiAgICB9LFxyXG4gICAgLyp0b3JuYWRvKi9cclxuICAgIChvLCBwYXJhbXMpID0+IHtcclxuICAgICAgICBvLnRvcm5hZG9TdHJlbmd0aCA9IHBhcmFtcy50b3JuYWRvU3RyZW5ndGg7XHJcbiAgICB9LFxyXG4gICAgLypjaGFuZ2VWaWduZXR0ZSovXHJcbiAgICAobywgcGFyYW1zKSA9PiB7XHJcbiAgICAgICAgby5pbm5lclIgPSBwYXJhbXMuaW5uZXJSO1xyXG4gICAgICAgIG8uaW5uZXJHID0gcGFyYW1zLmlubmVyRztcclxuICAgICAgICBvLmlubmVyQiA9IHBhcmFtcy5pbm5lckI7XHJcbiAgICAgICAgby5pbm5lclNpemUgPSBwYXJhbXMuaW5uZXJTaXplO1xyXG4gICAgICAgIG8uaW5uZXJPcGFjaXR5ID0gcGFyYW1zLmlubmVyT3BhY2l0eTtcclxuXHJcbiAgICAgICAgby5vdXRlclIgPSBwYXJhbXMub3V0ZXJSO1xyXG4gICAgICAgIG8ub3V0ZXJHID0gcGFyYW1zLm91dGVyRztcclxuICAgICAgICBvLm91dGVyQiA9IHBhcmFtcy5vdXRlckI7XHJcbiAgICAgICAgby5vdXRlclNpemUgPSBwYXJhbXMub3V0ZXJTaXplO1xyXG4gICAgICAgIG8ub3V0ZXJPcGFjaXR5ID0gcGFyYW1zLm91dGVyT3BhY2l0eTtcclxuICAgIH0sXHJcbiAgICAvKnB1c2hhYmxlKi9cclxuICAgIChvLCBwYXJhbXMpID0+IHtcclxuICAgICAgICBvLmxhc3RQdXNoQW5nbGUgPSBvLnB1c2hBbmdsZSA9IHBhcmFtcy5wdXNoQW5nbGUgKiBNYXRoLlBJIC8gMTgwO1xyXG4gICAgICAgIG8ubWF4UHVzaERpc3RhbmNlID0gcGFyYW1zLm1heFB1c2hEaXN0YW5jZTtcclxuICAgICAgICBvLmlkbGVQdXNoQmFja1NwZWVkID0gcGFyYW1zLmlkbGVQdXNoQmFja1NwZWVkO1xyXG4gICAgICAgIG8ucHVzaENvbnZlcnNpb25SYXRpbyA9IHBhcmFtcy5wdXNoQ29udmVyc2lvblJhdGlvO1xyXG4gICAgICAgIG8ucG9zaXRpdmVEaXJlY3Rpb25Pbmx5ID0gcGFyYW1zLnBvc2l0aXZlRGlyZWN0aW9uT25seTtcclxuICAgICAgICBvLnB1c2hBbmdsZVZlY1ggPSBNYXRoLmNvcyhvLnB1c2hBbmdsZSk7XHJcbiAgICAgICAgby5wdXNoQW5nbGVWZWNZID0gTWF0aC5zaW4oby5wdXNoQW5nbGUpO1xyXG4gICAgICAgIG8ucHVzaFBlcmNlbnQgPSAwO1xyXG4gICAgfSxcclxuICAgIC8qY2hhbmdlTXVzaWMqL1xyXG4gICAgKG8sIHBhcmFtcykgPT4ge1xyXG4gICAgICAgIC8vIGVpdGhlciBhIHlvdXR1YmUgdXJsIChodHRwczovL3lvdXR1YmUuY29tL3dhdGNoLy4uLikgb3IgYSBsb2NhbCBmaWxlcGF0aFxyXG4gICAgICAgIC8vIHRoYXQgdGhlIGNsaWVudCBjYW4gYWNjZXNzIHZpYSBhIGZldGNoIHJlcSwgZS5nLiBzb3VuZHMvLi4uIC5tcDNcclxuICAgICAgICBvLm11c2ljUGF0aCA9IHBhcmFtcy5tdXNpY1BhdGg7XHJcbiAgICAgICAgby5tdXNpY1N0YXJ0VGltZSA9IHBhcmFtcy5tdXNpY1N0YXJ0VGltZTtcclxuICAgIH0sXHJcbiAgICAvKmNoYW5nZVNoaXAqL1xyXG4gICAgKG8sIHBhcmFtcykgPT4ge1xyXG4gICAgICAgIG8uY2hhbmdlU2hpcFN0YXRlVG8gPSBwYXJhbXMuY2hhbmdlU2hpcFN0YXRlVG87XHJcbiAgICAgICAgby5pbml0aWFsU2hpcEFuZ2xlID0gcGFyYW1zLmluaXRpYWxTaGlwQW5nbGU7XHJcbiAgICAgICAgby5zaGlwVHVyblNwZWVkID0gcGFyYW1zLnNoaXBUdXJuU3BlZWQ7XHJcbiAgICB9LFxyXG4gICAgLypjaGFuZ2VHcmFwcGxlKi9cclxuICAgIChvLCBwYXJhbXMpID0+IHtcclxuICAgICAgICBvLmNoYW5nZUdyYXBwbGVTdGF0ZVRvID0gcGFyYW1zLmNoYW5nZUdyYXBwbGVTdGF0ZVRvO1xyXG4gICAgICAgIG8uZ3JhcHBsZVJhbmdlID0gcGFyYW1zLmdyYXBwbGVSYW5nZTtcclxuICAgICAgICBvLmdyYXBwbGVGb3JjZSA9IHBhcmFtcy5ncmFwcGxlRm9yY2U7XHJcbiAgICAgICAgby5ncmFwcGxlRnJpYyA9IHBhcmFtcy5ncmFwcGxlRnJpYztcclxuICAgIH0sXHJcbiAgICAvKmNoYW5nZURlYXRoVGltZXIqL1xyXG4gICAgKG8sIHBhcmFtcykgPT4ge1xyXG4gICAgICAgIG8uY2hhbmdlRGVhdGhUaW1lclN0YXRlVG8gPSBwYXJhbXMuY2hhbmdlRGVhdGhUaW1lclN0YXRlVG87XHJcbiAgICAgICAgby5kcmFpbkFtb3VudFdoaWxlU3RhbmRpbmdPbiA9IHBhcmFtcy5kcmFpbkFtb3VudFdoaWxlU3RhbmRpbmdPbjtcclxuICAgICAgICBvLmRlYXRoVGltZSA9IHBhcmFtcy5kZWF0aFRpbWU7XHJcblxyXG4gICAgICAgIC8vIGZvciB2aWduZXR0ZVxyXG4gICAgICAgIGZvcihsZXQga2V5IGluIHdpbmRvdy5lZmZlY3REZWZhdWx0TWFwWzI0XSl7XHJcbiAgICAgICAgICAgIG9ba2V5XSA9IHdpbmRvdy5lZmZlY3REZWZhdWx0TWFwWzI0XVtrZXldO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgby5pbm5lclIgPSBvLm91dGVyUiA9IDI1NTtcclxuICAgIH1cclxuXVxyXG5cclxubGV0IGZyZWVWYXJpYWJsZSA9IC0xO1xyXG5jb25zdCBlZmZlY3RNYXAgPSBbXHJcbiAgICAvKmJvdW5kKi9cclxuICAgIChwLCByZXMsIG8sIGlkKSA9PiB7XHJcbiAgICAgICAgcC5wb3MueCArPSByZXMub3ZlcmxhcFYueDtcclxuICAgICAgICBwLnBvcy55ICs9IHJlcy5vdmVybGFwVi55O1xyXG4gICAgICAgIHAudG91Y2hpbmdOb3JtYWxJbmRleGVzLnB1c2goaWQpO1xyXG4gICAgfSxcclxuICAgIC8qa2lsbCovXHJcbiAgICAocCwgcmVzLCBvKSA9PiB7XHJcbiAgICAgICAgaWYocmVzLm92ZXJsYXAgPiAxKSB7XHJcbiAgICAgICAgICAgIHAuZGVhZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGlmKG8uYm91bmRQbGF5ZXIgPT09IHRydWUpe1xyXG4gICAgICAgICAgICAgICAgcC5wb3MueCArPSByZXMub3ZlcmxhcFYueDtcclxuICAgICAgICAgICAgICAgIHAucG9zLnkgKz0gcmVzLm92ZXJsYXBWLnk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgLypib3VuY2UqL1xyXG4gICAgKHAsIHJlcywgbykgPT4ge1xyXG4gICAgICAgIHAucG9zLnggKz0gcmVzLm92ZXJsYXBWLng7XHJcbiAgICAgICAgcC5wb3MueSArPSByZXMub3ZlcmxhcFYueTtcclxuXHJcbiAgICAgICAgYW5nbGUgPSBNYXRoLmF0YW4yKHJlcy5vdmVybGFwVi55LCByZXMub3ZlcmxhcFYueCk7XHJcblxyXG4gICAgICAgIHAuZm9yY2VzLnB1c2goXHJcbiAgICAgICAgICAgIE1hdGguY29zKGFuZ2xlKSAqIG8uYm91bmNpbmVzcyxcclxuICAgICAgICAgICAgTWF0aC5zaW4oYW5nbGUpICogby5ib3VuY2luZXNzLFxyXG4gICAgICAgICAgICBvLmRlY2F5XHJcbiAgICAgICAgKVxyXG4gICAgfSxcclxuICAgIC8qY3VzdG9tKi9cclxuICAgICgpID0+IHt9LFxyXG4gICAgLypjdXN0b21JbWFnZSovXHJcbiAgICAoKSA9PiB7fSxcclxuICAgIC8qc3RvcEZvcmNlcyovXHJcbiAgICAocCkgPT4ge1xyXG4gICAgICAgIHAuc3RvcEZvcmNlcyA9IHRydWU7XHJcbiAgICB9LFxyXG4gICAgLyp3aW5wYWQqL1xyXG4gICAgKHAsIHJlcywgbykgPT4ge1xyXG4gICAgICAgIGlmKGVudmlyb25tZW50ID09PSAnZWRpdG9yJyB8fCB3aW5kb3cuc3RhbmRhbG9uZSA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgIC8vIHJlc3Bhd25cclxuICAgICAgICAgICAgd2luZG93LnJlc3Bhd25QbGF5ZXIoKTtcclxuICAgICAgICAgICAgaWYod2luZG93LmluQ2xlYXJDaGVja01vZGUgPT09IHRydWUpe1xyXG4gICAgICAgICAgICAgICAgd2luZG93LmV4aXRDbGVhckNoZWNrTW9kZSgpO1xyXG4gICAgICAgICAgICAgICAgdXBsb2FkQ29kZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIGlmKHdpbmRvdy53b24gIT09IHRydWUpe1xyXG4gICAgICAgICAgICB3aW5kb3cud29uID0gdHJ1ZTtcclxuICAgICAgICAgICAgaWYod2luZG93LmlzRXhDbGllbnQgPT09IHRydWUpe1xyXG4gICAgICAgICAgICAgICAgd2luZG93LmNoYW5nZU1hcCgnL21hcHMvd2lucm9vbScpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLy8gc2Nyb2xsXHJcbiAgICAgICAgICAgICAgICB0b1Njcm9sbCA9IHRydWU7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYod2luZG93LnR1dG9yaWFsID09PSB0cnVlKXtcclxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuYmVhdEN1cnJlbnRUdXRvcmlhbE1hcCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIC8qY29pbiovXHJcbiAgICAocCwgcmVzLCBvKSA9PiB7XHJcbiAgICAgICAgaWYoby5jb2xsZWN0ZWQgPT09IHRydWUpe1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIG8uY29sbGVjdGVkID0gdHJ1ZTtcclxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgb2JzdGFjbGVzLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgaWYob2JzdGFjbGVzW2ldLmlzQ29pbmRvb3IgPT09IHRydWUgJiYgb2JzdGFjbGVzW2ldLmNvaW5Eb29yQ29sb3IgPT09IG8uY29sb3Ipe1xyXG4gICAgICAgICAgICAgICAgb2JzdGFjbGVzW2ldLmNvaW5zIC09IG8uY29pbkFtb3VudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICAvKmNvaW5kb29yKi9cclxuICAgIChwLCByZXMsIG8pID0+IHtcclxuICAgICAgICBpZihvLmNvaW5zID4gMCl7XHJcbiAgICAgICAgICAgIHAucG9zLnggKz0gcmVzLm92ZXJsYXBWLng7XHJcbiAgICAgICAgICAgIHAucG9zLnkgKz0gcmVzLm92ZXJsYXBWLnk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIC8qY2hlY2twb2ludCovXHJcbiAgICAocCwgcmVzLCBvKSA9PiB7XHJcbiAgICAgICAgaWYoby5jaGVja3BvaW50Q29sbGVjdGVkID09PSB0cnVlKSByZXR1cm47XHJcbiAgICAgICAgby5jaGVja3BvaW50Q29sbGVjdGVkID0gdHJ1ZTtcclxuICAgICAgICBcclxuICAgICAgICB3aW5kb3cuc3Bhd25Qb3NpdGlvbi54ID0gby50b3BMZWZ0LnggKyBvLmRpbWVuc2lvbnMueCAvIDI7XHJcbiAgICAgICAgd2luZG93LnNwYXduUG9zaXRpb24ueSA9IG8udG9wTGVmdC55ICsgby5kaW1lbnNpb25zLnkgLyAyO1xyXG4gICAgfSxcclxuICAgIC8qYnJlYWthYmxlKi9cclxuICAgIChwLCByZXMsIG8sIGlkKSA9PiB7XHJcbiAgICAgICAgaWYoby5zdHJlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICBwLnBvcy54ICs9IHJlcy5vdmVybGFwVi54O1xyXG4gICAgICAgICAgICBwLnBvcy55ICs9IHJlcy5vdmVybGFwVi55O1xyXG4gICAgICAgICAgICBvLnN0cmVuZ3RoLS07XHJcbiAgICAgICAgICAgIGlmKG8uc3RyZW5ndGggPCAwKSBvLnN0cmVuZ3RoID0gMDtcclxuICAgICAgICAgICAgcC50b3VjaGluZ05vcm1hbEluZGV4ZXMucHVzaChpZCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBicmVha2FibGUgb2JzIHNob3VsZG4ndCByZWdlbmVyYXRlIG9uIHRvcCBvZiB5b3VcclxuICAgICAgICBvLmxhc3RCcm9rZVRpbWUgPSB3aW5kb3cuZnJhbWVzO1xyXG4gICAgfSxcclxuICAgIC8qc2FmZSovXHJcbiAgICAocCwgcmVzLCBvKSA9PiB7XHJcbiAgICAgICAgcC5vblNhZmUgPSB0cnVlO1xyXG4gICAgfSxcclxuICAgIC8qdHAqL1xyXG4gICAgKHAsIHJlcywgbykgPT4ge1xyXG4gICAgICAgIC8vIHdob29zaCBzb3VuZCBlZmZlY3Q/XHJcbiAgICAgICAgcC5wb3MueCA9IG8udHB4O1xyXG4gICAgICAgIHAucG9zLnkgPSBvLnRweTtcclxuICAgICAgICBwLnJlbmRlclJhZGl1cyA9IE1hdGgubWluKHAucmVuZGVyUmFkaXVzLCBwLnNhdC5yIC8gMik7XHJcbiAgICB9LFxyXG4gICAgLypjb252ZXlvciovXHJcbiAgICAocCwgcmVzLCBvKSA9PiB7XHJcbiAgICAgICAgcC5mb3JjZXMucHVzaChNYXRoLmNvcyhvLmNvbnZleW9yQW5nbGUpICogby5jb252ZXlvckZvcmNlLCBNYXRoLnNpbihvLmNvbnZleW9yQW5nbGUpICogby5jb252ZXlvckZvcmNlLCBvLmNvbnZleW9yRnJpY3Rpb24pO1xyXG4gICAgfSxcclxuICAgIC8qcGxhdGZvcm1lciovXHJcbiAgICAocCwgcmVzLCBvLCBpZCkgPT4ge1xyXG4gICAgICAgIG8udG91Y2hpbmdQbGF0Zm9ybWVyID0gdHJ1ZTtcclxuICAgICAgICBvLmp1bXBDb29sZG93bi0tO1xyXG5cclxuICAgICAgICAvLyBhZGQgY29udmV5b3IgZm9yY2VcclxuICAgICAgICBwLmZvcmNlcy5wdXNoKE1hdGguY29zKG8ucGxhdGZvcm1lckFuZ2xlKSAqIG8ucGxhdGZvcm1lckZvcmNlLCBNYXRoLnNpbihvLnBsYXRmb3JtZXJBbmdsZSkgKiBvLnBsYXRmb3JtZXJGb3JjZSwgby5wbGF0Zm9ybWVyRnJpY3Rpb24pO1xyXG5cclxuICAgICAgICAvLyBpZGVhOiBmaW5kIHRoZSBhbW91bnQgb2YgeC95IHRoZSBwbGF5ZXIgbW92ZXMgaW4gdGhlIHBsYXRmb3JtZXIgYW5kIG1vdmUgdGhlIG9wcG9zaXRlIHRvIGVmZmVjdGl2ZWx5IGxvY2sgdGhlIHBsYXllcidzIG1vdGlvbiBwZXJwZW5kaWN1bGFyIHRvIHRoZSBwbGF0Zm9ybWVyJ3MgZGlyZWN0aW9uXHJcbiAgICAgICAgY29uc3QgcGxheWVyVmVsQW5nbGUgPSBNYXRoLmF0YW4yKHAueXYsIHAueHYpO1xyXG5cclxuICAgICAgICBjb25zdCBhbmdsZUJldHdlZW4gPSBvLnBsYXRmb3JtZXJBbmdsZSAtIHBsYXllclZlbEFuZ2xlO1xyXG5cclxuICAgICAgICBjb25zdCBkaXN0TW92ZWRPblBsYXRBbmdsZSA9IE1hdGguY29zKGFuZ2xlQmV0d2VlbikgKiBNYXRoLnNxcnQocC55diAqKiAyICsgcC54diAqKiAyKSAvIHAuZnJpY3Rpb247XHJcblxyXG4gICAgICAgIHAucG9zLnggLT0gTWF0aC5jb3Moby5wbGF0Zm9ybWVyQW5nbGUpICogZGlzdE1vdmVkT25QbGF0QW5nbGU7XHJcbiAgICAgICAgcC5wb3MueSAtPSBNYXRoLnNpbihvLnBsYXRmb3JtZXJBbmdsZSkgKiBkaXN0TW92ZWRPblBsYXRBbmdsZTtcclxuXHJcbiAgICAgICAgY29uc3QgdG91Y2hpbmdOb3JtYWxUaGlzRnJhbWUgPSBwLnRvdWNoaW5nTm9ybWFsSW5kZXhlcy5sZW5ndGggIT09IDAgfHwgKHAubGFzdFRvdWNoaW5nTm9ybWFsSW5kZXhlc1twLmxhc3RUb3VjaGluZ05vcm1hbEluZGV4ZXMubGVuZ3RoLTFdID49IGlkICYmIG8uanVzdEp1bXBlZCA9PT0gZmFsc2UpIHx8IHAudG91Y2hpbmdXYWxsID09PSB0cnVlO1xyXG4gICAgICAgIG8uanVzdEp1bXBlZCA9IGZhbHNlO1xyXG5cclxuICAgICAgICAvLyBjaGVja2luZyBpZiB3ZSB3ZXJlIGVpdGhlciBpbnRlcnNlY3Rpbmcgd2l0aCBhIG5vcm1hbCBsYXN0IGZyYW1lIHRoYXQncyBpbmRleGVkIGFmdGVyIHRoZSBvYnMgb3Igd2UgYXJlIGludGVyc2VjdGluZyB3aXRoIGEgbm9ybWFsIHJuXHJcbiAgICAgICAgaWYoby5qdW1wQ29vbGRvd24gPD0gMCAmJiAodG91Y2hpbmdOb3JtYWxUaGlzRnJhbWUgPT09IHRydWUgfHwgKG8uY2FuSnVtcE1pZGFpciA9PT0gdHJ1ZSAmJiBvLm1pZGFpclN0b3JlZEp1bXAgPT09IHRydWUpKSl7XHJcbiAgICAgICAgICAgIG8ubWlkYWlyU3RvcmVkSnVtcCA9IG8ubWlkYWlyU3RvcmVkSnVtcCB8fCB0b3VjaGluZ05vcm1hbFRoaXNGcmFtZTtcclxuICAgICAgICAgICAgby5jYW5KdW1wID0gdHJ1ZTtcclxuICAgICAgICAgICAgaWYoTWF0aC5hYnMoc2hvcnRBbmdsZURpc3Qoby5wbGF0Zm9ybWVyQW5nbGUgKyBNYXRoLlBJLCBwbGF5ZXJWZWxBbmdsZSkpIDwgTWF0aC5QSSAvIDIgJiYgTWF0aC5zcXJ0KHAueHYqKjIrcC55dioqMik+LjAxKXtcclxuICAgICAgICAgICAgICAgIHAuZm9yY2VzLnB1c2goLU1hdGguY29zKG8ucGxhdGZvcm1lckFuZ2xlKSAqIG8uanVtcEZvcmNlLCAtTWF0aC5zaW4oby5wbGF0Zm9ybWVyQW5nbGUpICogby5qdW1wRm9yY2UsIG8uanVtcEZyaWN0aW9uKTtcclxuICAgICAgICAgICAgICAgIG8uanVtcENvb2xkb3duID0gby5tYXhKdW1wQ29vbGRvd247XHJcbiAgICAgICAgICAgICAgICBvLm1pZGFpclN0b3JlZEp1bXAgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIG8uanVzdEp1bXBlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBvLmNhbkp1bXAgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgLypyZXN0cmljdEF4aXMqL1xyXG4gICAgKHAsIHJlcywgbykgPT4ge1xyXG4gICAgICAgIHAuYXhpc1NwZWVkTXVsdFggKj0gby5heGlzU3BlZWRNdWx0WDtcclxuICAgICAgICBwLmF4aXNTcGVlZE11bHRZICo9IG8uYXhpc1NwZWVkTXVsdFk7XHJcbiAgICB9LFxyXG4gICAgLypzbmFwR3JpZCovXHJcbiAgICAocCwgcmVzLCBvKSA9PiB7XHJcbiAgICAgICAgLy8gZm9yIHRob3NlIHdobyBoYXZlbid0IHNlZW4gaXQsIHRoaXMgaXMga2luZCBvZiBteSBtYWdudW0gb3B1cyBvZiBzaW11bGF0aW9uIGZ1bmN0aW9ucy5cclxuICAgICAgICAvLyBEZXZlbG9wZWQgYSBmZXcgeWVhcnMgYmFjayBsYXRlciBwcmVzZW50ZWQgYXQgYSBjb25mZXJlbmNlLiBBc2sgbWUgKHNlcnVtKSBhYm91dCBpdCFcclxuICAgICAgICAvLyB0aGUgYmFzaWMgaWRlYSBvZiBob3cgaXQgd29ya3MgaXMgd2UgaGF2ZSB0byBzbmFwIHRvIGEgcm90YXRlZCBzbmFwIGdyaWQgaW4gc3BhY2UsIHNvIHdlXHJcbiAgICAgICAgLy8gdHJhbnNsYXRlIHRoZSBwbGF5ZXIgdG8gdGhlIHNuYXBHcmlkIHVudGlsIGl0cyBsaWtlIHRoZSBzbmFwIGdyaWQgaXMgdW5yb3RhdGVkLiBUaGVuIHdlIHNuYXBcclxuICAgICAgICAvLyBieSBtb2R1bG9pbmcgdGhlIHggdG8gdGhlIGdyaWQgYW5kIHRoZW4gcm90YXRlIGJhY2sgdG8gZ2V0IHRoZSBmaW5hbCBwb3NpdGlvbi5cclxuICAgICAgICBvLnNuYXBDb29sZG93bi0tO1xyXG5cclxuICAgICAgICBpZihvLnNuYXBDb29sZG93biA8PSAwICYmICgoby50b1NuYXBYID09PSB0cnVlICYmIE1hdGguYWJzKHAueHYpID4gMC4wMSkgfHwgKG8udG9TbmFwWSA9PT0gdHJ1ZSAmJiBNYXRoLmFicyhwLnl2KSA+IDAuMDEpKSl7XHJcbiAgICAgICAgICAgIG8uc25hcENvb2xkb3duID0gby5tYXhTbmFwQ29vbGRvd247XHJcbiAgICAgICAgICAgIGxldCBwbGF5ZXJTbmFwQW5nbGUgPSBNYXRoLmF0YW4yKG8udG9TbmFwWSA9PT0gdHJ1ZSA/IHAueXYgOiAwLCBvLnRvU25hcFggPT09IHRydWUgPyBwLnh2IDogMCk7XHJcbiAgICAgICAgICAgIG8uaW50ZXJwb2xhdGVQbGF5ZXJEYXRhID0ge1xyXG4gICAgICAgICAgICAgICAgdGltZTogTWF0aC5taW4oby5tYXhTbmFwQ29vbGRvd24tMSwgNSksXHJcbiAgICAgICAgICAgICAgICBuZXh0WDogcC5wb3MueCArIE1hdGguY29zKHBsYXllclNuYXBBbmdsZSkgKiBvLnNuYXBNYWduaXR1ZGUgKiAwLjk1LFxyXG4gICAgICAgICAgICAgICAgbmV4dFk6IHAucG9zLnkgKyBNYXRoLnNpbihwbGF5ZXJTbmFwQW5nbGUpICogby5zbmFwTWFnbml0dWRlICogMC45NVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYoby5pbnRlcnBvbGF0ZVBsYXllckRhdGEudGltZSA+IDEpe1xyXG4gICAgICAgICAgICBvLmludGVycG9sYXRlUGxheWVyRGF0YS50aW1lLS07XHJcbiAgICAgICAgICAgIHAucG9zLnggPSBwLnBvcy54ICogMC44ICsgMC4yICogby5pbnRlcnBvbGF0ZVBsYXllckRhdGEubmV4dFg7XHJcbiAgICAgICAgICAgIHAucG9zLnkgPSBwLnBvcy55ICogMC44ICsgMC4yICogby5pbnRlcnBvbGF0ZVBsYXllckRhdGEubmV4dFk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbGV0IG1pZGRsZVggPSBvLnRvcExlZnQueCArIG8uZGltZW5zaW9ucy54IC8gMjtcclxuICAgICAgICAgICAgbGV0IG1pZGRsZVkgPSBvLnRvcExlZnQueSArIG8uZGltZW5zaW9ucy55IC8gMjtcclxuICAgICAgICAgICAgLy8gaW4gb3JkZXIgdG8gc25hcCBjb3JyZWN0bHksIHJvdGF0ZSBib3RoIHRoZSBwIGFuZCB0aGUgbyB0aGUgbmVnYXRpdmUgc25hcEFuZ2xlIHJlbGF0aXZlIHRvIHRoZSBvJ3MgY2VudGVyXHJcbiAgICAgICAgICAgIC8vIHRoaXMgbWVhbnMgdGhhdCB0aGUgcGxheWVyIHdpbGwgYmUgcmVsYXRpdmVseSBjb3JyZWN0IHRvIHRoZSBvYnMgYW5kIHRoZSBvYnMgd2lsbCBiZSBheGlzLWFsaWduZWRcclxuICAgICAgICAgICAgbGV0IHBydCA9IHtcclxuICAgICAgICAgICAgICAgIGFuZ2xlOiBNYXRoLmF0YW4yKHAucG9zLnkgLSBtaWRkbGVZLCBwLnBvcy54IC0gbWlkZGxlWCkgLSBvLnNuYXBBbmdsZSxcclxuICAgICAgICAgICAgICAgIGRpc3RhbmNlOiBNYXRoLnNxcnQoKHAucG9zLnkgLSBtaWRkbGVZKSoqMiArIChwLnBvcy54IC0gbWlkZGxlWCkqKjIpXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHBydC54ID0gTWF0aC5jb3MocHJ0LmFuZ2xlKSAqIHBydC5kaXN0YW5jZTtcclxuICAgICAgICAgICAgcHJ0LnkgPSBNYXRoLnNpbihwcnQuYW5nbGUpICogcHJ0LmRpc3RhbmNlO1xyXG5cclxuICAgICAgICAgICAgLy8gYXBwbHlpbmcgdGhlIHRyYW5zZm9ybSBqdXN0IGxpa2UgdGhlIG5vcm90YXRlIHNuYXAgdGhhdCBpIGNvZGVkIGVhcmxpZXJcclxuICAgICAgICAgICAgLy8gaW4gb3RoZXIgd29yZHMsIHNuYXAgdGhlIHJlbGF0aXZlIHAgdG8gdGhlIHJlbGF0aXZlIGdyaWRcclxuICAgICAgICAgICAgaWYoby50b1NuYXBYID09PSB0cnVlKSBwcnQueCA9IHBydC54ICogMC40ICsgMC42ICogKE1hdGgucm91bmQocHJ0LnggLyBvLnNuYXBEaXN0YW5jZVgpICogby5zbmFwRGlzdGFuY2VYKTtcclxuICAgICAgICAgICAgaWYoby50b1NuYXBZID09PSB0cnVlKSBwcnQueSA9IHBydC55ICogMC40ICsgMC42ICogKE1hdGgucm91bmQocHJ0LnkgLyBvLnNuYXBEaXN0YW5jZVkpICogby5zbmFwRGlzdGFuY2VZKTtcclxuXHJcbiAgICAgICAgICAgIHBydC5hbmdsZSA9IE1hdGguYXRhbjIocHJ0LnksIHBydC54KSArIG8uc25hcEFuZ2xlO1xyXG4gICAgICAgICAgICBwcnQuZGlzdGFuY2UgPSBNYXRoLnNxcnQocHJ0LnkqKjIgKyBwcnQueCoqMik7XHJcblxyXG4gICAgICAgICAgICAvLyByb3RhdGluZyBiYWNrXHJcbiAgICAgICAgICAgIC8vIHRyYW5zbGF0aW5nIHRoZSByZWxhdGl2ZSBjb29yZGluYXRlcyBiYWNrIHRvIGFic29sdXRlIG9uZXNcclxuICAgICAgICAgICAgcC5wb3MueCA9IE1hdGguY29zKHBydC5hbmdsZSkgKiBwcnQuZGlzdGFuY2UgKyBtaWRkbGVYO1xyXG4gICAgICAgICAgICBwLnBvcy55ID0gTWF0aC5zaW4ocHJ0LmFuZ2xlKSAqIHBydC5kaXN0YW5jZSArIG1pZGRsZVk7XHJcblxyXG4gICAgICAgICAgICAvLyBjaGVja2luZyBpZiB0aGUgb3JpZ2luYWwgcG9pbnQgd2FzIG91dHNpZGUgb2YgdGhlIHNuYXBncmlkIGFzIGEgcmVzdWx0IG9mIHJvdGF0aW9uLiBJZiBzbywgYXBwbHkgdHJhbnNsYXRpb25zIHRvIG1ha2UgaXQgcmlnaHRcclxuICAgICAgICAgICAgLy8gaWYocC5wb3MueCA8IG8udG9wTGVmdC54IC0gcC5zcGVlZCB8fCBwLnBvcy54ID4gby50b3BMZWZ0LnggKyBvLmRpbWVuc2lvbnMueCArIHAuc3BlZWQpe1xyXG4gICAgICAgICAgICAvLyAgICAgcC5wb3MueCArPSBNYXRoLnNpZ24ocC54dikgKiBvLnNuYXBEaXN0YW5jZVgqMC42O1xyXG4gICAgICAgICAgICAvLyB9XHJcblxyXG4gICAgICAgICAgICAvLyBpZihwLnBvcy55IDwgby50b3BMZWZ0LnkgLSBwLnNwZWVkIHx8IHAucG9zLnkgPiBvLnRvcExlZnQueSArIG8uZGltZW5zaW9ucy55ICsgcC5zcGVlZCl7XHJcbiAgICAgICAgICAgIC8vICAgICBwLnBvcy55ICs9IE1hdGguc2lnbihwLnl2KSAqIG8uc25hcERpc3RhbmNlWSowLjY7XHJcbiAgICAgICAgICAgIC8vIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgLyp0aW1lVHJhcCovXHJcbiAgICAocCwgcmVzLCBvKSA9PiB7XHJcbiAgICAgICAgby50aW1lVHJhcEludGVyc2VjdGluZyA9IHRydWU7XHJcbiAgICAgICAgby50aW1lVHJhcFRpbWUtLTtcclxuICAgICAgICBpZihvLnRpbWVUcmFwVGltZSA8IDApe1xyXG4gICAgICAgICAgICBpZihvLnRpbWVUcmFwVG9LaWxsID09PSB0cnVlKSBwLmRlYWQgPSBwLnRpbWVUcmFwT3ZlcnJpZGVTYWZlID0gdHJ1ZTtcclxuICAgICAgICAgICAgby50aW1lVHJhcFRpbWUgPSAwO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICAvKmNoYW5nZVNpemUqL1xyXG4gICAgKHAsIHJlcywgbykgPT4ge1xyXG4gICAgICAgIGlmKG8uc2l6ZU11bHQgPCAxICYmIG8ubGFzdENoYW5nZVNpemVDb2xsaWRpbmcgPT09IGZhbHNlKXtcclxuICAgICAgICAgICAgLy8gaWYgdGhlIHBsYXllciB3b3VsZCBub3QgYmUgY29sbGlkaW5nIHdpdGggdGhlIG9ic3RhY2xlIHdpdGggdGhlIHNtYWxsZXIgcmFkaXVzLFxyXG4gICAgICAgICAgICAvLyBkb24ndCBzY2FsZSB0aGUgcGxheWVyIHRvIGF2b2lkIGZyYW1lIDEgeWVzIGZyYW1lIDIgbm8gaml0dGVyIGVmZmVjdHNcclxuXHJcbiAgICAgICAgICAgIC8vIGJhc2ljYWxseSwgd2UgZG8gdGhpcyBieSBlZmZlY3RpdmVseSBkZWNyZWFzaW5nIHRoZSBvYnN0YWNsZSdzIGJvcmRlciByYWRpdXMgKHNvIHBvbHkgd291bGQganVzdCBiZSBzbWFsbGVyIHBvbHkpXHJcbiAgICAgICAgICAgIC8vIGlmIHRoZSBwbGF5ZXIgaGFzIG5vdCBhbHJlYWR5IGNvbGxpZGVkLiBJZiB0aGUgcGxheWVyIGlzIGNvbGxpZGluZywgd2UgYWxyZWFkeSBkZWNyZWFzZWQgdGhlIHJhZGl1cyBzbyB0aGVyZSdzIG5vIG5lZWQgdG8gZGVjcmVhc2UgdGhlIGJvcmRlclxyXG4gICAgICAgICAgICByZXMuY2xlYXIoKTtcclxuICAgICAgICAgICAgcC5zYXQuciAqPSBvLnNpemVNdWx0O1xyXG4gICAgICAgICAgICBpZihvLnNhdC5yICE9PSB1bmRlZmluZWQpe1xyXG4gICAgICAgICAgICAgICAgY29sbGlkZWQgPSBTQVQudGVzdENpcmNsZUNpcmNsZShvLnNhdCwgcC5zYXQsIHJlcyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb2xsaWRlZCA9IFNBVC50ZXN0UG9seWdvbkNpcmNsZShvLnNhdCwgcC5zYXQsIHJlcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcC5zYXQuciAvPSBvLnNpemVNdWx0O1xyXG4gICAgICAgICAgICBpZihjb2xsaWRlZCA9PT0gZmFsc2Upe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKG8uc2l6ZUNoYW5nZVBlcm1hbmVudCA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgIGlmKG8ucGVybWFuZW50U2l6ZUNoYW5nZURvbmUgPT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgICAgICBvLnBlcm1hbmVudFNpemVDaGFuZ2VEb25lID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHAuc2F0LnIgKj0gby5zaXplTXVsdDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBvLmNoYW5nZVNpemVDb2xsaWRpbmcgPSB0cnVlO1xyXG4gICAgfSxcclxuICAgIC8qY2hhbmdlU3BlZWQqL1xyXG4gICAgKHAsIHJlcywgbykgPT4ge1xyXG4gICAgICAgIGlmKG8uc3BlZWRDaGFuZ2VQZXJtYW5lbnQgPT09IHRydWUpe1xyXG4gICAgICAgICAgICBpZihvLnBlcm1hbmVudFNwZWVkQ2hhbmdlRG9uZSA9PT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgICAgICAgIG8ucGVybWFuZW50U3BlZWRDaGFuZ2VEb25lID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHAuc3BlZWQgKj0gby5zcGVlZE11bHQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBwLmF4aXNTcGVlZE11bHRYICo9IG8uc3BlZWRNdWx0O1xyXG4gICAgICAgICAgICBwLmF4aXNTcGVlZE11bHRZICo9IG8uc3BlZWRNdWx0O1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICAvKnNvbGlkQ29sb3IqL1xyXG4gICAgKHAsIHJlcywgbykgPT4ge30sXHJcbiAgICAvKmRlY29yYXRpb24qL1xyXG4gICAgKHAsIHJlcywgbykgPT4ge30sXHJcbiAgICAvKmNoYW5nZU1hcCovXHJcbiAgICAocCwgcmVzLCBvKSA9PiB7XHJcbiAgICAgICAgaWYod2luZG93LndvbiA9PT0gdHJ1ZSkgcmV0dXJuO1xyXG4gICAgICAgIHdpbmRvdy53b24gPSB0cnVlO1xyXG4gICAgICAgIGlmKHdpbmRvdy5pc0V4Q2xpZW50ID09PSB0cnVlKXtcclxuICAgICAgICAgICAgd2luZG93LmNoYW5nZU1hcCgnL21hcHMvJyArIG8ubWFwTmFtZSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgLy8gVE9ETzogc2VuZCB1c2VyIHRvIHRoZSBzcGVjaWZpZWQgb21uaVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICAvKnRvcm5hZG8qL1xyXG4gICAgKHAsIHJlcywgbykgPT4ge1xyXG4gICAgICAgIHAucG9zLnggKz0gTWF0aC5jb3MoTWF0aC5yYW5kb20oKSAqIDM2MCkgKiBvLnRvcm5hZG9TdHJlbmd0aDtcclxuICAgICAgICBwLnBvcy55ICs9IE1hdGguc2luKE1hdGgucmFuZG9tKCkgKiAzNjApICogby50b3JuYWRvU3RyZW5ndGg7XHJcbiAgICB9LFxyXG4gICAgLypjaGFuZ2VWaWduZXR0ZSovXHJcbiAgICAocCwgcmVzLCBvKSA9PiB7XHJcbiAgICAgICAgY29uc3QgdiA9IHdpbmRvdy5jb2xvcnMudmlnbmV0dGU7XHJcbiAgICAgICAgdi5pbm5lci5yID0gby5pbm5lclI7XHJcbiAgICAgICAgdi5pbm5lci5nID0gby5pbm5lckc7XHJcbiAgICAgICAgdi5pbm5lci5iID0gby5pbm5lckI7XHJcbiAgICAgICAgdi5pbm5lci5zaXplID0gby5pbm5lclNpemU7XHJcbiAgICAgICAgdi5pbm5lci5vcGFjaXR5ID0gby5pbm5lck9wYWNpdHk7XHJcblxyXG4gICAgICAgIHYub3V0ZXIuciA9IG8ub3V0ZXJSO1xyXG4gICAgICAgIHYub3V0ZXIuZyA9IG8ub3V0ZXJHO1xyXG4gICAgICAgIHYub3V0ZXIuYiA9IG8ub3V0ZXJCO1xyXG4gICAgICAgIHYub3V0ZXIuc2l6ZSA9IG8ub3V0ZXJTaXplO1xyXG4gICAgICAgIHYub3V0ZXIub3BhY2l0eSA9IG8ub3V0ZXJPcGFjaXR5O1xyXG4gICAgfSxcclxuICAgIC8qcHVzaGFibGUqL1xyXG4gICAgKHAsIHJlcywgbykgPT4ge1xyXG4gICAgICAgIGlmKG8ucHVzaEFuZ2xlICE9PSBvLmxhc3RQdXNoQW5nbGUpe1xyXG4gICAgICAgICAgICBvLmxhc3RQdXNoQW5nbGUgPSBvLnB1c2hBbmdsZTtcclxuICAgICAgICAgICAgby5wdXNoQW5nbGVWZWNYID0gTWF0aC5jb3Moby5wdXNoQW5nbGUpO1xyXG4gICAgICAgICAgICBvLnB1c2hBbmdsZVZlY1kgPSBNYXRoLnNpbihvLnB1c2hBbmdsZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBkb3QgcHJvZHVjdCBvZiB0aGUgdHdvIHZlY3RvcnMgPSBhbW91bnQgdGhleSBhcmUgcG9pbnRpbmcgdG9nZXRoZXJcclxuICAgICAgICAvLyBmcmVlVmFyaWFibGUgPSBwdXNoRGVsdGFcclxuICAgICAgICBmcmVlVmFyaWFibGUgPSAtKG8ucHVzaEFuZ2xlVmVjWCAqIHJlcy5vdmVybGFwVi54ICsgby5wdXNoQW5nbGVWZWNZICogcmVzLm92ZXJsYXBWLnkpICogby5wdXNoQ29udmVyc2lvblJhdGlvO1xyXG5cclxuICAgICAgICBpZihvLnBvc2l0aXZlRGlyZWN0aW9uT25seSA9PT0gZmFsc2UgfHwgZnJlZVZhcmlhYmxlID4gMCl7XHJcbiAgICAgICAgICAgIG8ucHVzaFBlcmNlbnQgKz0gZnJlZVZhcmlhYmxlIC8gby5tYXhQdXNoRGlzdGFuY2U7XHJcblxyXG4gICAgICAgICAgICBpZihvLnB1c2hQZXJjZW50ID4gMSl7XHJcbiAgICAgICAgICAgICAgICBmcmVlVmFyaWFibGUgLT0gKG8ucHVzaFBlcmNlbnQtMSkgKiBvLm1heFB1c2hEaXN0YW5jZTtcclxuICAgICAgICAgICAgICAgIG8ucHVzaFBlcmNlbnQgPSAxO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYoby5wdXNoUGVyY2VudCA8IDApe1xyXG4gICAgICAgICAgICAgICAgZnJlZVZhcmlhYmxlIC09IG8ucHVzaFBlcmNlbnQgKiBvLm1heFB1c2hEaXN0YW5jZTtcclxuICAgICAgICAgICAgICAgIG8ucHVzaFBlcmNlbnQgPSAwO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBvLnBvcy54ICs9IG8ucHVzaEFuZ2xlVmVjWCAqIGZyZWVWYXJpYWJsZTtcclxuICAgICAgICAgICAgby5wb3MueSArPSBvLnB1c2hBbmdsZVZlY1kgKiBmcmVlVmFyaWFibGU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyB0ZXN0IGNvbGxpc2lvbiBhZ2FpbiB0byBib3VuZCB0aGUgcGxheWVyXHJcbiAgICAgICAgcmVzLmNsZWFyKCk7XHJcbiAgICAgICAgaWYoby5zYXQuciAhPT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgICAgY29sbGlkZWQgPSBTQVQudGVzdENpcmNsZUNpcmNsZShvLnNhdCwgcC5zYXQsIHJlcyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29sbGlkZWQgPSBTQVQudGVzdFBvbHlnb25DaXJjbGUoby5zYXQsIHAuc2F0LCByZXMpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYoY29sbGlkZWQgPT09IHRydWUpe1xyXG4gICAgICAgICAgICBwLnBvcy54ICs9IHJlcy5vdmVybGFwVi54O1xyXG4gICAgICAgICAgICBwLnBvcy55ICs9IHJlcy5vdmVybGFwVi55O1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICAvKmNoYW5nZU11c2ljKi9cclxuICAgIChwLCByZXMsIG8pID0+IHtcclxuICAgICAgICB3aW5kb3cucGxheU11c2ljKG8ubXVzaWNQYXRoLCBvLm11c2ljU3RhcnRUaW1lKTtcclxuICAgIH0sXHJcbiAgICAvKmNoYW5nZVNoaXAqL1xyXG4gICAgKHAsIHJlcywgbykgPT4ge1xyXG4gICAgICAgIGlmKHAuc2hpcCA9PT0gby5jaGFuZ2VTaGlwU3RhdGVUbykgcmV0dXJuO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICBpZih3aW5kb3cuaXNFeENsaWVudCA9PT0gdHJ1ZSAmJiBvLmNoYW5nZVNoaXBTdGF0ZVRvID09PSBmYWxzZSkge1xyXG4gICAgICAgICAgICAvLyBzZW5kIGRpc2FibGUgc2hpcFxyXG4gICAgICAgICAgICB3aW5kb3cudTRbMF0gPSAxMDtcclxuICAgICAgICAgICAgc2VuZCh3aW5kb3cudTQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihwLnNoaXAgPT09IGZhbHNlICYmIG8uY2hhbmdlU2hpcFN0YXRlVG8gPT09IHRydWUpIHtwLnNoaXBBbmdsZSA9IG8uaW5pdGlhbFNoaXBBbmdsZTsgcC5zaGlwVHVyblNwZWVkID0gby5zaGlwVHVyblNwZWVkOyB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgcC5zaGlwID0gby5jaGFuZ2VTaGlwU3RhdGVUbztcclxuICAgIH0sXHJcbiAgICAvKmNoYW5nZUdyYXBwbGUqL1xyXG4gICAgKHAsIHJlcywgbykgPT4ge1xyXG4gICAgICAgIGlmKHAuZ3JhcHBsZSA9PT0gdHJ1ZSAmJiBvLmNoYW5nZUdyYXBwbGVTdGF0ZVRvID09PSBmYWxzZSl7XHJcbiAgICAgICAgICAgIGlmKHdpbmRvdy5pc0V4Q2xpZW50ID09PSB0cnVlKXtcclxuICAgICAgICAgICAgICAgIC8vIHNlbmQgZGlzYWJsZSBncmFwcGxlXHJcbiAgICAgICAgICAgICAgICB3aW5kb3cudTRbMF0gPSAxMjtcclxuICAgICAgICAgICAgICAgIHNlbmQod2luZG93LnU0KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBwLmdyYXBwbGVYID0gcC5ncmFwcGxlWSA9IC0xO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcC5ncmFwcGxlID0gby5jaGFuZ2VHcmFwcGxlU3RhdGVUbztcclxuICAgICAgICBwLmdyYXBwbGVSYW5nZSA9IG8uZ3JhcHBsZVJhbmdlO1xyXG4gICAgICAgIHAuZ3JhcHBsZUZvcmNlID0gby5ncmFwcGxlRm9yY2U7XHJcbiAgICAgICAgcC5ncmFwcGxlRnJpYyA9IG8uZ3JhcHBsZUZyaWM7XHJcbiAgICB9LFxyXG4gICAgLypjaGFuZ2VEZWF0aFRpbWVyKi9cclxuICAgIChwLCByZXMsIG8pID0+IHtcclxuICAgICAgICBpZih3aW5kb3cuaXNFeENsaWVudCA9PT0gdHJ1ZSAmJiBwLmRlYXRoVGltZXIgPT09IHRydWUgJiYgby5jaGFuZ2VEZWF0aFRpbWVyU3RhdGVUbyA9PT0gZmFsc2Upe1xyXG4gICAgICAgICAgICAvLyBzZW5kIGRpc2FibGUgZGVhdGggdGltZXJcclxuICAgICAgICAgICAgd2luZG93LnU0WzBdID0gMTQ7XHJcbiAgICAgICAgICAgIHNlbmQod2luZG93LnU0KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmKG8uY2hhbmdlRGVhdGhUaW1lclN0YXRlVG8gPT09IHRydWUpe1xyXG4gICAgICAgICAgICBpZihwLmRlYXRoVGltZXIgPT09IGZhbHNlKSBwLmRlYXRoVGltZSA9IG8uZGVhdGhUaW1lO1xyXG4gICAgICAgICAgICBlbHNlIHAuZGVhdGhUaW1lID0gTWF0aC5taW4ocC5kZWF0aFRpbWUsIG8uZGVhdGhUaW1lKTtcclxuICAgICAgICAgICAgcC5kZWF0aFRpbWUgLT0gby5kcmFpbkFtb3VudFdoaWxlU3RhbmRpbmdPbjtcclxuXHJcbiAgICAgICAgICAgIC8vIGNoYW5nZVZpZ25ldHRlXHJcbiAgICAgICAgICAgIGVmZmVjdE1hcFsyNF0ocCwgcmVzLCBvKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcC5kZWF0aFRpbWVyID0gby5jaGFuZ2VEZWF0aFRpbWVyU3RhdGVUbztcclxuICAgIH1cclxuXVxyXG5cclxuY29uc3QgaWRsZUVmZmVjdE1hcCA9IFtcclxuICAgIC8vICdib3VuZCcsXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvLyAna2lsbCcsXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvLyAnYm91bmNlJyxcclxuICAgIHVuZGVmaW5lZCxcclxuICAgIC8vICdjdXN0b20nXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvLyAnY3VzdG9tSW1hZ2UnXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvLyAnc3RvcEZvcmNlcycsXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvLyAnd2lucGFkJyxcclxuICAgIHVuZGVmaW5lZCxcclxuICAgIC8vICdjb2luJyxcclxuICAgIHVuZGVmaW5lZCxcclxuICAgIC8vICdjb2luZG9vcicsXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvLyAnY2hlY2twb2ludCcsXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvLyAnYnJlYWthYmxlJyxcclxuICAgIChvKSA9PiB7XHJcbiAgICAgICAgaWYgKG8uc3RyZW5ndGggPCBvLm1heFN0cmVuZ3RoICYmIHdpbmRvdy5mcmFtZXMtby5sYXN0QnJva2VUaW1lID4gby5yZWdlblRpbWUpIHtcclxuICAgICAgICAgICAgby5zdHJlbmd0aCArPSBvLmhlYWxTcGVlZDtcclxuICAgICAgICAgICAgaWYoby5zdHJlbmd0aCA+PSBvLm1heFN0cmVuZ3RoKXtcclxuICAgICAgICAgICAgICAgIG8ubGFzdEJyb2tlVGltZSA9IHdpbmRvdy5mcmFtZXM7XHJcbiAgICAgICAgICAgICAgICBvLnN0cmVuZ3RoID0gby5tYXhTdHJlbmd0aDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICAvLyAnc2FmZScsXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvLyAndHAnLFxyXG4gICAgdW5kZWZpbmVkLFxyXG4gICAgLy8gJ2NvbnZleW9yJyxcclxuICAgIChvKSA9PiB7XHJcbiAgICAgICAgby5jb252ZXlvckFuZ2xlICs9IG8uY29udmV5b3JBbmdsZVJvdGF0ZVNwZWVkO1xyXG4gICAgfSxcclxuICAgIC8vICdwbGF0Zm9ybWVyJyxcclxuICAgIChvKSA9PiB7XHJcbiAgICAgICAgby5wbGF0Zm9ybWVyQW5nbGUgKz0gby5wbGF0Zm9ybWVyQW5nbGVSb3RhdGVTcGVlZDtcclxuICAgIH0sXHJcbiAgICAvLyAncmVzdHJpY3RBeGlzJyxcclxuICAgIHVuZGVmaW5lZCxcclxuICAgIC8vICdzbmFwR3JpZCcsXHJcbiAgICAobykgPT4ge1xyXG4gICAgICAgIG8uc25hcEFuZ2xlICs9IG8uc25hcEFuZ2xlUm90YXRlU3BlZWQ7XHJcbiAgICB9LFxyXG4gICAgLy8gJ3RpbWVUcmFwJ1xyXG4gICAgKG8pID0+IHtcclxuICAgICAgICBpZihvLnRpbWVUcmFwSW50ZXJzZWN0aW5nICE9PSB0cnVlKSBvLnRpbWVUcmFwVGltZSArPSBvLnRpbWVUcmFwUmVjb3ZlcnlTcGVlZDtcclxuICAgICAgICBpZihvLnRpbWVUcmFwVGltZSA+IG8udGltZVRyYXBNYXhUaW1lKSBvLnRpbWVUcmFwVGltZSA9IG8udGltZVRyYXBNYXhUaW1lO1xyXG4gICAgICAgIG8udGltZVRyYXBJbnRlcnNlY3RpbmcgPSBmYWxzZTtcclxuICAgIH0sXHJcbiAgICAvLyAnY2hhbmdlU2l6ZSdcclxuICAgIChvLCBwKSA9PiB7XHJcbiAgICAgICAgaWYoby5zaXplQ2hhbmdlUGVybWFuZW50ID09PSB0cnVlKSByZXR1cm47XHJcblxyXG4gICAgICAgIGlmKG8ubGFzdENoYW5nZVNpemVDb2xsaWRpbmcgPT09IHRydWUgJiYgby5jaGFuZ2VTaXplQ29sbGlkaW5nID09PSBmYWxzZSl7XHJcbiAgICAgICAgICAgIC8vIGV4aXRcclxuICAgICAgICAgICAgcC5zYXQuciAvPSBvLnNpemVNdWx0O1xyXG4gICAgICAgIH0gZWxzZSBpZihvLmxhc3RDaGFuZ2VTaXplQ29sbGlkaW5nID09PSBmYWxzZSAmJiBvLmNoYW5nZVNpemVDb2xsaWRpbmcgPT09IHRydWUpe1xyXG4gICAgICAgICAgICAvLyBlbnRlclxyXG4gICAgICAgICAgICBwLnNhdC5yICo9IG8uc2l6ZU11bHQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBvLmxhc3RDaGFuZ2VTaXplQ29sbGlkaW5nID0gby5jaGFuZ2VTaXplQ29sbGlkaW5nO1xyXG4gICAgICAgIG8uY2hhbmdlU2l6ZUNvbGxpZGluZyA9IGZhbHNlO1xyXG4gICAgfSxcclxuICAgIC8vICdjaGFuZ2VTcGVlZCdcclxuICAgIHVuZGVmaW5lZCxcclxuICAgIC8vICdzb2xpZENvbG9yJ1xyXG4gICAgdW5kZWZpbmVkLFxyXG4gICAgLy8gJ2RlY29yYXRpb24nXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvLyAnY2hhbmdlTWFwJ1xyXG4gICAgdW5kZWZpbmVkLFxyXG4gICAgLy8gJ3Rvcm5hZG8nXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvLyAnY2hhbmdlVmlnbmV0dGUnXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvLyAncHVzaGFibGUnXHJcbiAgICAobywgcCkgPT4ge1xyXG4gICAgICAgIC8vIGZyZWVWYXJpYWJsZSA9IHB1c2hEZWx0YVxyXG4gICAgICAgIGZyZWVWYXJpYWJsZSA9IC1vLmlkbGVQdXNoQmFja1NwZWVkO1xyXG4gICAgICAgIG8ucHVzaFBlcmNlbnQgKz0gZnJlZVZhcmlhYmxlIC8gby5tYXhQdXNoRGlzdGFuY2U7XHJcblxyXG4gICAgICAgIGlmKG8ucHVzaFBlcmNlbnQgPiAxKXtcclxuICAgICAgICAgICAgZnJlZVZhcmlhYmxlIC09IChvLnB1c2hQZXJjZW50LTEpICogby5tYXhQdXNoRGlzdGFuY2U7XHJcbiAgICAgICAgICAgIG8ucHVzaFBlcmNlbnQgPSAxO1xyXG4gICAgICAgIH0gZWxzZSBpZihvLnB1c2hQZXJjZW50IDwgMCl7XHJcbiAgICAgICAgICAgIGZyZWVWYXJpYWJsZSAtPSBvLnB1c2hQZXJjZW50ICogby5tYXhQdXNoRGlzdGFuY2U7XHJcbiAgICAgICAgICAgIG8ucHVzaFBlcmNlbnQgPSAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgby5wb3MueCArPSBmcmVlVmFyaWFibGUgKiBNYXRoLmNvcyhvLnB1c2hBbmdsZSk7XHJcbiAgICAgICAgby5wb3MueSArPSBmcmVlVmFyaWFibGUgKiBNYXRoLnNpbihvLnB1c2hBbmdsZSk7XHJcbiAgICB9LFxyXG4gICAgLy8gY2hhbmdlTXVzaWNcclxuICAgIHVuZGVmaW5lZCxcclxuICAgIC8vIGNoYW5nZVNoaXBcclxuICAgIHVuZGVmaW5lZCxcclxuICAgIC8vIGNoYW5nZUdyYXBwbGVcclxuICAgIHVuZGVmaW5lZCxcclxuICAgIC8vIGNoYW5nZURlYXRoVGltZXJcclxuICAgIHVuZGVmaW5lZCxcclxuXVxyXG5cclxud2luZG93LmVmZmVjdENvbnN0cmFpbnRzTWFwID0gW1xyXG4gICAgLypib3VuZCovXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvKmtpbGwqL1xyXG4gICAgdW5kZWZpbmVkLFxyXG4gICAgLypib3VuY2UqL1xyXG4gICAge2RlY2F5OiBbdW5kZWZpbmVkLCAxXX0sXHJcbiAgICAvKmN1c3RvbSovXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvKmN1c3RvbUltYWdlKi9cclxuICAgIHVuZGVmaW5lZCxcclxuICAgIC8qc3RvcEZvcmNlcyovXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvKndpbnBhZCovXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvKmNvaW4qL1xyXG4gICAge2NvaW5BbW91bnQ6IFsxXX0sXHJcbiAgICAvKmNvaW5kb29yKi9cclxuICAgIHtjb2luczogWzFdLCBtYXhDb2luczogWzFdfSxcclxuICAgIC8qY2hlY2twb2ludCovXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvKmJyZWFrYWJsZSovXHJcbiAgICB7bWF4U3RyZW5ndGg6IFsxXSwgcmVnZW5UaW1lOiBbMF0sIGhlYWxTcGVlZDogWzBdfSxcclxuICAgIC8qc2FmZSovXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvKnRwKi9cclxuICAgIHVuZGVmaW5lZCxcclxuICAgIC8qY29udmV5b3IqL1xyXG4gICAge2NvbnZleW9yRnJpY3Rpb246IFt1bmRlZmluZWQsIDFdfSxcclxuICAgIC8qcGxhdGZvcm1lciovXHJcbiAgICB7cGxhdGZvcm1lckZyaWN0aW9uOiBbdW5kZWZpbmVkLCAxXSwganVtcEZyaWN0aW9uOiBbdW5kZWZpbmVkLCAxXX0sXHJcbiAgICAvKnJlc3RyaWN0QXhpcyovXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvKnNuYXBHcmlkKi9cclxuICAgIHtzbmFwRGlzdGFuY2VYOiBbMC4xXSwgc25hcERpc3RhbmNlWTogWzAuMV0sIHNuYXBDb29sZG93bjogWzBdfSxcclxuICAgIC8qdGltZVRyYXAqL1xyXG4gICAge3RpbWVUcmFwVGltZTogWzBdLCB0aW1lVHJhcE1heFRpbWU6IFswXX0sXHJcbiAgICAvKmNoYW5nZVNpemUqL1xyXG4gICAgdW5kZWZpbmVkLFxyXG4gICAgLypjaGFuZ2VTcGVlZCovXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvKnNvbGlkQ29sb3IqL1xyXG4gICAgdW5kZWZpbmVkLFxyXG4gICAgLypkZWNvcmF0aW9uKi9cclxuICAgIHVuZGVmaW5lZCxcclxuICAgIC8qY2hhbmdlTWFwKi9cclxuICAgIHVuZGVmaW5lZCxcclxuICAgIC8qdG9ybmFkbyovXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvKmNoYW5nZVZpZ25ldHRlKi9cclxuICAgIHVuZGVmaW5lZCxcclxuICAgIC8qcHVzaGFibGUqL1xyXG4gICAge21heFB1c2hEaXN0YW5jZTogWzBdfSxcclxuICAgIC8qY2hhbmdlTXVzaWMqL1xyXG4gICAgdW5kZWZpbmVkLFxyXG4gICAgLypjaGFuZ2VTaGlwKi9cclxuICAgIHVuZGVmaW5lZCxcclxuICAgIC8qY2hhbmdlR3JhcHBsZSovXHJcbiAgICB1bmRlZmluZWQsXHJcbiAgICAvKmNoYW5nZURlYXRoVGltZXIqL1xyXG4gICAgdW5kZWZpbmVkLFxyXG5dXHJcblxyXG53aW5kb3cuZWZmZWN0TWFwSTJOID0gW1xyXG4gICAgJ2JvdW5kJyxcclxuICAgICdraWxsJyxcclxuICAgICdib3VuY2UnLFxyXG4gICAgJ2N1c3RvbScsXHJcbiAgICAnY3VzdG9tSW1hZ2UnLFxyXG4gICAgJ3N0b3BGb3JjZXMnLFxyXG4gICAgJ3dpbnBhZCcsXHJcbiAgICAnY29pbicsXHJcbiAgICAnY29pbmRvb3InLFxyXG4gICAgJ2NoZWNrcG9pbnQnLFxyXG4gICAgJ2JyZWFrYWJsZScsXHJcbiAgICAnc2FmZScsXHJcbiAgICAndHAnLFxyXG4gICAgJ2NvbnZleW9yJyxcclxuICAgICdwbGF0Zm9ybWVyJyxcclxuICAgICdyZXN0cmljdEF4aXMnLFxyXG4gICAgJ3NuYXBHcmlkJyxcclxuICAgICd0aW1lVHJhcCcsXHJcbiAgICAnY2hhbmdlU2l6ZScsXHJcbiAgICAnY2hhbmdlU3BlZWQnLFxyXG4gICAgJ3NvbGlkQ29sb3InLFxyXG4gICAgJ2RlY29yYXRpb24nLFxyXG4gICAgJ2NoYW5nZU1hcCcsXHJcbiAgICAndG9ybmFkbycsXHJcbiAgICAnY2hhbmdlVmlnbmV0dGUnLFxyXG4gICAgJ3B1c2hhYmxlJyxcclxuICAgICdjaGFuZ2VNdXNpYycsXHJcbiAgICAnY2hhbmdlU2hpcCcsXHJcbiAgICAnY2hhbmdlR3JhcHBsZScsXHJcbiAgICAnY2hhbmdlRGVhdGhUaW1lcicsXHJcbl1cclxuXHJcbndpbmRvdy5lZmZlY3REZWZhdWx0TWFwID0gW1xyXG4gICAgLy8gYm91bmRcclxuICAgIHt9LFxyXG4gICAgLy8ga2lsbFxyXG4gICAge1xyXG4gICAgICAgIGJvdW5kUGxheWVyOiBmYWxzZSxcclxuICAgIH0sXHJcbiAgICAvLyBib3VuY2VcclxuICAgIHtcclxuICAgICAgICBib3VuY2luZXNzOiAxLFxyXG4gICAgICAgIGRlY2F5OiAwLjk4XHJcbiAgICB9LFxyXG4gICAgLy8gY3VzdG9tXHJcbiAgICB7fSxcclxuICAgIC8vIGN1c3RvbUltYWdlXHJcbiAgICB7XHJcbiAgICAgICAgdXJsOiAnaHR0cDovL3Rpbnl1cmwuY29tL2R3YXluZS10LXJqJ1xyXG4gICAgfSxcclxuICAgIC8vIHN0b3BGb3JjZXNcclxuICAgIHt9LFxyXG4gICAgLy8gd2lucGFkXHJcbiAgICB7fSxcclxuICAgIC8vIGNvaW5cclxuICAgIHtcclxuICAgICAgICBjb2luQW1vdW50OiAxLFxyXG4gICAgICAgIGNvbG9yOiAnI2Q2ZDYxMSdcclxuICAgIH0sXHJcbiAgICAvLyBjb2luZG9vclxyXG4gICAge1xyXG4gICAgICAgIGNvaW5kb29yQ29pbkFtb3VudDogMyxcclxuICAgICAgICBjb2luRG9vckNvbG9yOiAnI2Q2ZDYxMSdcclxuICAgIH0sXHJcbiAgICAvLyBjaGVja3BvaW50XHJcbiAgICB7XHJcbiAgICAgICAgY2hlY2twb2ludE9mZnNldFg6IDAsXHJcbiAgICAgICAgY2hlY2twb2ludE9mZnNldFk6IDBcclxuICAgIH0sXHJcbiAgICAvLyBicmVha2FibGVcclxuICAgIHtcclxuICAgICAgICBtYXhTdHJlbmd0aDogNjAsXHJcbiAgICAgICAgcmVnZW5UaW1lOiAxMDAsXHJcbiAgICAgICAgaGVhbFNwZWVkOiAxXHJcbiAgICB9LFxyXG4gICAgLy8gc2FmZVxyXG4gICAge30sXHJcbiAgICAvLyB0cFxyXG4gICAge1xyXG4gICAgICAgIHRweDogMTAwLFxyXG4gICAgICAgIHRweTogMTAwXHJcbiAgICB9LFxyXG4gICAgLy8gY29udmV5b3JcclxuICAgIHtcclxuICAgICAgICBjb252ZXlvckZvcmNlOiAwLjMsXHJcbiAgICAgICAgY29udmV5b3JBbmdsZTogOTAsXHJcbiAgICAgICAgY29udmV5b3JBbmdsZVJvdGF0ZVNwZWVkOiAwLFxyXG4gICAgICAgIGNvbnZleW9yRnJpY3Rpb246IDAuOFxyXG4gICAgfSxcclxuICAgIC8vIHBsYXRmb3JtZXJcclxuICAgIHtcclxuICAgICAgICBwbGF0Zm9ybWVyRm9yY2U6IDEsXHJcbiAgICAgICAgcGxhdGZvcm1lckFuZ2xlOiA5MCxcclxuICAgICAgICBwbGF0Zm9ybWVyQW5nbGVSb3RhdGVTcGVlZDogMCxcclxuICAgICAgICBwbGF0Zm9ybWVyRnJpY3Rpb246IDAuODc1LFxyXG4gICAgICAgIG1heEp1bXBDb29sZG93bjogMzAsXHJcbiAgICAgICAganVtcEZvcmNlOiAyMCxcclxuICAgICAgICBqdW1wRGVjYXk6IDAuOTUsXHJcbiAgICAgICAgLy8gbWF4SnVtcHM6IDFcclxuICAgIH0sXHJcbiAgICAvLyByZXN0cmljdEF4aXNcclxuICAgIHtcclxuICAgICAgICBheGlzU3BlZWRNdWx0WDogMCxcclxuICAgICAgICBheGlzU3BlZWRNdWx0WTogMVxyXG4gICAgfSxcclxuICAgIC8vIHNuYXBHcmlkXHJcbiAgICB7XHJcbiAgICAgICAgdG9TbmFwWDogdHJ1ZSxcclxuICAgICAgICB0b1NuYXBZOiB0cnVlLFxyXG4gICAgICAgIHNuYXBEaXN0YW5jZVg6IDEwMCxcclxuICAgICAgICBzbmFwRGlzdGFuY2VZOiAxMDAsXHJcbiAgICAgICAgc25hcENvb2xkb3duOiA0MCxcclxuICAgICAgICBzbmFwQW5nbGU6IDAsXHJcbiAgICAgICAgc25hcEFuZ2xlUm90YXRlU3BlZWQ6IDBcclxuICAgIH0sXHJcbiAgICAvLyB0aW1lVHJhcFxyXG4gICAge1xyXG4gICAgICAgIHRpbWVUcmFwTWF4VGltZTogMzAwLFxyXG4gICAgICAgIHRpbWVUcmFwUmVjb3ZlcnlTcGVlZDogMS41LFxyXG4gICAgICAgIHRpbWVUcmFwVG9LaWxsOiB0cnVlLFxyXG4gICAgICAgIHRpbWVUcmFwVG9TaG93VGVudGg6IGZhbHNlXHJcbiAgICB9LFxyXG4gICAgLy8gY2hhbmdlU2l6ZVxyXG4gICAge1xyXG4gICAgICAgIHNpemVNdWx0OiAxLjUsXHJcbiAgICAgICAgc2l6ZUNoYW5nZVBlcm1hbmVudDogZmFsc2VcclxuICAgIH0sXHJcbiAgICAvLyBjaGFuZ2VTcGVlZFxyXG4gICAge1xyXG4gICAgICAgIHNwZWVkTXVsdDogMi41LFxyXG4gICAgICAgIHNwZWVkQ2hhbmdlUGVybWFuZW50OiBmYWxzZVxyXG4gICAgfSxcclxuICAgIC8vIHNvbGlkQ29sb3JcclxuICAgIHtcclxuICAgICAgICBoZXg6ICcjRkZGRkZGJyxcclxuICAgICAgICBhbHBoYTogMVxyXG4gICAgfSxcclxuICAgIC8vIGRlY29yYXRpb25cclxuICAgIHt9LFxyXG4gICAgLy8gY2hhbmdlTWFwXHJcbiAgICB7bWFwTmFtZTogJ2h1Yid9LFxyXG4gICAgLy8gdG9ybmFkb1xyXG4gICAge3Rvcm5hZG9TdHJlbmd0aDogMX0sXHJcbiAgICAvLyBjaGFuZ2VWaWduZXR0ZVxyXG4gICAge1xyXG4gICAgICAgIGlubmVyUjogMCwgaW5uZXJHOiAwLCBpbm5lckI6IDAsIGlubmVyU2l6ZTogMC4xLCBpbm5lck9wYWNpdHk6IDAsXHJcbiAgICAgICAgb3V0ZXJSOiAwLCBvdXRlckc6IDAsIG91dGVyQjogMCwgb3V0ZXJTaXplOiAwLjUsIG91dGVyT3BhY2l0eTogMVxyXG4gICAgfSxcclxuICAgIC8vIHB1c2hhYmxlXHJcbiAgICB7XHJcbiAgICAgICAgcHVzaEFuZ2xlOiAxODAsXHJcbiAgICAgICAgbWF4UHVzaERpc3RhbmNlOiAxMDAsXHJcbiAgICAgICAgaWRsZVB1c2hCYWNrU3BlZWQ6IDAuMjUsXHJcbiAgICAgICAgcG9zaXRpdmVEaXJlY3Rpb25Pbmx5OiBmYWxzZSxcclxuICAgICAgICBwdXNoQ29udmVyc2lvblJhdGlvOiAwLjhcclxuICAgIH0sXHJcbiAgICAvLyBjaGFuZ2VNdXNpY1xyXG4gICAge211c2ljUGF0aDogJ2h0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9T2lkWEtSVlZWNzAnLCBtdXNpY1N0YXJ0VGltZTogMH0sXHJcbiAgICAvLyBjaGFuZ2VTaGlwXHJcbiAgICB7Y2hhbmdlU2hpcFN0YXRlVG86IHRydWUsIGluaXRpYWxTaGlwQW5nbGU6IDAsIHNoaXBUdXJuU3BlZWQ6IE1hdGguUEkgLyAxMDB9LFxyXG4gICAgLy8gY2hhbmdlR3JhcHBsZVxyXG4gICAge2NoYW5nZUdyYXBwbGVTdGF0ZVRvOiB0cnVlLCBncmFwcGxlUmFuZ2U6IDQ4OCwgZ3JhcHBsZUZvcmNlOiAwLjAxLCBncmFwcGxlRnJpYzogMC40fSxcclxuICAgIC8vIGNoYW5nZURlYXRoVGltZXJcclxuICAgIHtjaGFuZ2VEZWF0aFRpbWVyU3RhdGVUbzogdHJ1ZSwgZHJhaW5BbW91bnRXaGlsZVN0YW5kaW5nT246IDAsIGRlYXRoVGltZTogMTB9LFxyXG5dXHJcblxyXG5jb25zdCByZW5kZXJFZmZlY3RNYXAgPSBbXHJcbiAgICAvKmJvdW5kKi9cclxuICAgIChvKSA9PiB7IFxyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSB3aW5kb3cuY29sb3JzLnRpbGU7XHJcbiAgICB9LFxyXG4gICAgLypraWxsKi9cclxuICAgIChvKSA9PiB7XHJcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IG8uYm91bmRQbGF5ZXIgPT09IHRydWUgPyAnI2M3MDAwMCcgOiAnIzllMDAwMCc7XHJcbiAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gJ2JsYWNrJztcclxuICAgICAgICBjdHgudG9TdHJva2UgPSB0cnVlO1xyXG4gICAgICAgIGN0eC5saW5lV2lkdGggPSA0O1xyXG4gICAgfSxcclxuICAgIC8qYm91bmNlKi9cclxuICAgIChvKSA9PiB7XHJcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICdibHVlJztcclxuICAgIH0sXHJcbiAgICAvKmN1c3RvbSovXHJcbiAgICAobykgPT4ge1xyXG4gICAgICAgIGN0eC50b0ZpbGwgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgY3R4LmNsZWFuVXBGdW5jdGlvbiA9ICgpID0+IHtcclxuICAgICAgICAgICAgY3R4LnNhdmUoKTtcclxuICAgICAgICAgICAgY3R4LmNsaXAoKTtcclxuXHJcbiAgICAgICAgICAgIGN0eC5kcmF3SW1hZ2Uod2luZG93LnN0YXJJbWcsIG8udG9wTGVmdC54LCBvLnRvcExlZnQueSwgby5kaW1lbnNpb25zLngsIG8uZGltZW5zaW9ucy55KTtcclxuXHJcbiAgICAgICAgICAgIGN0eC5yZXN0b3JlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIC8qY3VzdG9tSW1hZ2UqL1xyXG4gICAgKG8pID0+IHtcclxuICAgICAgICBjdHgudG9GaWxsID0gZmFsc2U7XHJcbiAgICAgICAgaWYoby5pbWdMb2FkZWQgPT09IGZhbHNlKSByZXR1cm47XHJcblxyXG4gICAgICAgIGN0eC5jbGVhblVwRnVuY3Rpb24gPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGN0eC5zYXZlKCk7XHJcbiAgICAgICAgICAgIGN0eC5jbGlwKCk7XHJcblxyXG4gICAgICAgICAgICBjdHguZHJhd0ltYWdlKG8uaW1nLCBvLnRvcExlZnQueCwgby50b3BMZWZ0LnksIG8uZGltZW5zaW9ucy54LCBvLmRpbWVuc2lvbnMueSk7XHJcblxyXG4gICAgICAgICAgICBjdHgucmVzdG9yZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICAvKnN0b3BGb3JjZXMqL1xyXG4gICAgKG8pID0+IHtcclxuICAgICAgICBjdHguZmlsbFN0eWxlID0gJ29yYW5nZSc7XHJcbiAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gJ2JsYWNrJztcclxuICAgICAgICBjdHgubGluZVdpZHRoID0gNjtcclxuICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSAwLjE7XHJcbiAgICAgICAgY3R4LnRvU3Ryb2tlID0gdHJ1ZTtcclxuICAgIH0sXHJcbiAgICAvKndpbnBhZCovXHJcbiAgICAobykgPT4ge1xyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSBgaHNsKCR7d2luZG93LmZyYW1lcyoxMDAwLzYwLzEyfSw1MCUsNTAlKWA7XHJcbiAgICAgICAgY3R4LnNoYWRvd0NvbG9yID0gY3R4LmZpbGxTdHlsZTtcclxuICAgICAgICBjdHguc2hhZG93Qmx1ciA9IDE1O1xyXG4gICAgICAgIGN0eC5jbGVhblVwRnVuY3Rpb24gPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGN0eC5zaGFkb3dCbHVyID0gMDtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgLypjb2luKi9cclxuICAgIChvKSA9PiB7XHJcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IG8uY29sb3I7XHJcbiAgICAgICAgaWYoby5jb2xsZWN0ZWQgPT09IHRydWUpe1xyXG4gICAgICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSAwLjI7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY3R4Lmdsb2JhbEFscGhhID0gMC44O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihvLmNvaW5BbW91bnQgIT09IDEpe1xyXG4gICAgICAgICAgICBjdHguY2xlYW5VcEZ1bmN0aW9uID0gKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgbGV0IG1pZGRsZVggPSBvLnRvcExlZnQueCArIG8uZGltZW5zaW9ucy54LzI7XHJcbiAgICAgICAgICAgICAgICBsZXQgbWlkZGxlWSA9IG8udG9wTGVmdC55ICsgby5kaW1lbnNpb25zLnkvMjsgXHJcblxyXG4gICAgICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9IHdpbmRvdy5jb2xvcnMudGlsZTsvLycjMzEzMTMxJztcclxuICAgICAgICAgICAgICAgIGN0eC5mb250ID0gYCR7TWF0aC5taW4oNjAsIG8uZGltZW5zaW9ucy54LzQsIG8uZGltZW5zaW9ucy55LzQpfXB4IEludGVyYDtcclxuICAgICAgICAgICAgICAgIGN0eC50ZXh0QWxpZ24gPSAnY2VudGVyJztcclxuICAgICAgICAgICAgICAgIGN0eC50ZXh0QmFzZWxpbmUgPSAnbWlkZGxlJztcclxuICAgICAgICAgICAgICAgIGN0eC5maWxsVGV4dChcclxuICAgICAgICAgICAgICAgICAgICBNYXRoLm1heCgwLCBvLmNvaW5BbW91bnQpLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pZGRsZVgsXHJcbiAgICAgICAgICAgICAgICAgICAgbWlkZGxlWVxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICAvKmNvaW5kb29yKi9cclxuICAgIChvKSA9PiB7XHJcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IHdpbmRvdy5jb2xvcnMudGlsZTtcclxuICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSBvLmNvaW5zIDw9IDAgPyAwLjUgOiAxO1xyXG4gICAgICAgIGN0eC5jbGVhblVwRnVuY3Rpb24gPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSBvLmNvaW5Eb29yQ29sb3I7XHJcblxyXG4gICAgICAgICAgICBsZXQgbWlkZGxlWCA9IG8udG9wTGVmdC54ICsgby5kaW1lbnNpb25zLngvMjtcclxuICAgICAgICAgICAgbGV0IG1pZGRsZVkgPSBvLnRvcExlZnQueSArIG8uZGltZW5zaW9ucy55LzI7IFxyXG5cclxuICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgICAgICBjdHgucm91bmRSZWN0KG1pZGRsZVgtby5kaW1lbnNpb25zLngvNCwgbWlkZGxlWS1vLmRpbWVuc2lvbnMueS80LCBvLmRpbWVuc2lvbnMueC8yLCBvLmRpbWVuc2lvbnMueS8yLCBNYXRoLm1pbihvLmRpbWVuc2lvbnMueCxvLmRpbWVuc2lvbnMueSkvMjApO1xyXG4gICAgICAgICAgICBjdHguZmlsbCgpO1xyXG4gICAgICAgICAgICBjdHguY2xvc2VQYXRoKCk7XHJcbiAgICBcclxuICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9IHdpbmRvdy5jb2xvcnMudGlsZTsvLycjMzEzMTMxJy8vJyM0ODRhMDAnO1xyXG4gICAgICAgICAgICBjdHguZm9udCA9IGAke01hdGgubWluKDYwLCBvLmRpbWVuc2lvbnMueC80LCBvLmRpbWVuc2lvbnMueS80KX1weCBJbnRlcmA7XHJcbiAgICAgICAgICAgIGN0eC50ZXh0QWxpZ24gPSAnY2VudGVyJztcclxuICAgICAgICAgICAgY3R4LnRleHRCYXNlbGluZSA9ICdtaWRkbGUnO1xyXG4gICAgICAgICAgICBjdHguZmlsbFRleHQoXHJcbiAgICAgICAgICAgICAgICBNYXRoLm1heCgwLCBvLmNvaW5zKSxcclxuICAgICAgICAgICAgICAgIG1pZGRsZVgsXHJcbiAgICAgICAgICAgICAgICBtaWRkbGVZXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIC8qY2hlY2twb2ludCovXHJcbiAgICAobykgPT4ge1xyXG4gICAgICAgIGlmIChvLmNoZWNrcG9pbnRDb2xsZWN0ZWQgPT09IHRydWUpIHtcclxuICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICcjMGZiYTA5JztcclxuICAgICAgICAgICAgY3R4Lmdsb2JhbEFscGhhID0gMC4xNTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gJyMwNTk2MmInO1xyXG4gICAgICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSAwLjg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGN0eC5jbGVhblVwRnVuY3Rpb24gPSAoKSA9PiB7XHJcbiAgICAgICAgLy8gICAgIGN0eC5nbG9iYWxBbHBoYSAvPSA1O1xyXG4gICAgICAgIC8vICAgICBjb25zdCBncmQgPSBjdHguY3JlYXRlUmFkaWFsR3JhZGllbnQoby5wb3MueCwgby5wb3MueSwgMCwgby5wb3MueCwgby5wb3MueSwgKG8uZGltZW5zaW9ucy54ICsgby5kaW1lbnNpb25zLnkpLzMpO1xyXG5cclxuICAgICAgICAvLyAgICAgZ3JkLmFkZENvbG9yU3RvcCgwLCBcInJnYmEoMjU1LDI1NSwyNTUsMSlcIik7XHJcbiAgICAgICAgLy8gICAgIGdyZC5hZGRDb2xvclN0b3AoMSwgXCJyZ2JhKDI1NSwyNTUsMjU1LDApXCIpO1xyXG5cclxuICAgICAgICAvLyAgICAgY3R4LmZpbGxTdHlsZSA9IGdyZDtcclxuICAgICAgICAvLyAgICAgcmVuZGVyRWZmZWN0TWFwWzddKG8pO1xyXG4gICAgICAgIC8vIH1cclxuICAgIH0sXHJcbiAgICAvKmJyZWFrYWJsZSovXHJcbiAgICAobykgPT4ge1xyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSB3aW5kb3cuY29sb3JzLnRpbGU7Ly8gdG8gbWFrZSBpdCBpbnRvIGhleFxyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSBibGVuZENvbG9yKCcjMDAwMDAwJywgY3R4LmZpbGxTdHlsZSwgMC41KTtcclxuICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSBvLnN0cmVuZ3RoIC8gby5tYXhTdHJlbmd0aDtcclxuICAgIH0sXHJcbiAgICAvKnNhZmUqL1xyXG4gICAgKG8pID0+IHtcclxuICAgICAgICAvLyAjOGM4YzhjIGhleCwgLjI1IGdsb2JhbEFscGhhXHJcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICdyZ2JhKDE0MCwxNDAsMTQwLC4yNSknO1xyXG4gICAgICAgIGN0eC5zdHJva2VTdHlsZSA9ICdibGFjayc7XHJcbiAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDQ7XHJcbiAgICAgICAgY3R4LnRvU3Ryb2tlID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgLy8gY3R4LmZpbGxTdHlsZSA9IHdpbmRvdy5zYWZlQ29sb3IgfHwgXCIjOGM4YzhjXCIsXHJcbiAgICAgICAgLy8gY3R4Lmdsb2JhbEFscGhhID0gLjI1LFxyXG4gICAgICAgIC8vIGN0eC5iZWdpblBhdGgoKSxcclxuICAgICAgICAvLyBjdHguYXJjKHBvcy54LCBwb3MueSwgb2JzdGFjbGUuciwgMCwgMiAqIE1hdGguUEkpLFxyXG4gICAgICAgIC8vIGN0eC5maWxsKCksXHJcbiAgICAgICAgLy8gY3R4LnN0cm9rZVN0eWxlID0gXCJibGFja1wiLFxyXG4gICAgICAgIC8vIGN0eC5saW5lV2lkdGggPSBsaW5lV2lkdGgsXHJcbiAgICAgICAgLy8gY3R4Lmdsb2JhbEFscGhhID0gMSxcclxuICAgICAgICAvLyBjdHguc3Ryb2tlKCk7XHJcbiAgICB9LFxyXG4gICAgLyp0cCovXHJcbiAgICAobykgPT4ge1xyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSAnIzM4YWIzMCc7XHJcbiAgICB9LFxyXG4gICAgLypjb252ZXlvciovXHJcbiAgICAobykgPT4ge1xyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSB3aW5kb3cuY29sb3JzLnRpbGU7XHJcbiAgICAgICAgY3R4Lmdsb2JhbEFscGhhID0gMC4xO1xyXG4gICAgICAgIGN0eC5jbGVhblVwRnVuY3Rpb24gPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGN0eC5zYXZlKCk7XHJcbiAgICAgICAgICAgIGN0eC5jbGlwKCk7XHJcblxyXG4gICAgICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSAxO1xyXG4gICAgICAgICAgICBmb3IobGV0IHggPSBvLnRvcExlZnQueCArIDUwOyB4IDw9IG8udG9wTGVmdC54ICsgby5kaW1lbnNpb25zLnggKyA1MDsgeCArPSAxMDApe1xyXG4gICAgICAgICAgICAgICAgZm9yKGxldCB5ID0gby50b3BMZWZ0LnkgKyA1MDsgeSA8PSBvLnRvcExlZnQueSArIG8uZGltZW5zaW9ucy55ICsgNTA7IHkgKz0gMTAwKXtcclxuICAgICAgICAgICAgICAgICAgICBjdHgudHJhbnNsYXRlKHgseSk7XHJcbiAgICAgICAgICAgICAgICAgICAgY3R4LnJvdGF0ZShvLmNvbnZleW9yQW5nbGUrTWF0aC5QSS8yKTtcclxuICAgICAgICAgICAgICAgICAgICBjdHguZHJhd0ltYWdlKHdpbmRvdy5hcnJvd0ltZywgLTUwLCAtNTAsIDEwMCwgMTAwKTtcclxuICAgICAgICAgICAgICAgICAgICBjdHgucm90YXRlKC1vLmNvbnZleW9yQW5nbGUtTWF0aC5QSS8yKTtcclxuICAgICAgICAgICAgICAgICAgICBjdHgudHJhbnNsYXRlKC14LC15KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgY3R4LnJlc3RvcmUoKTtcclxuICAgICAgICAgICAgLy8gY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgICAgICAvLyBjdHguZmlsbFN0eWxlID0gJ3JlZCc7XHJcbiAgICAgICAgICAgIC8vIGN0eC5hcmMoby50b3BMZWZ0LngsIG8udG9wTGVmdC55LCAzMCwgMCwgTWF0aC5QSSAqIDIpO1xyXG4gICAgICAgICAgICAvLyBjdHguZmlsbCgpO1xyXG4gICAgICAgICAgICAvLyBjdHguY2xvc2VQYXRoKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIC8qcGxhdGZvcm1lciovXHJcbiAgICAobykgPT4ge1xyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSB3aW5kb3cuY29sb3JzLnRpbGU7XHJcbiAgICAgICAgY3R4Lmdsb2JhbEFscGhhID0gMC4xO1xyXG4gICAgICAgIGN0eC5jbGVhblVwRnVuY3Rpb24gPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGN0eC5zYXZlKCk7XHJcbiAgICAgICAgICAgIGN0eC5jbGlwKCk7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBvZmZzZXRYID0gKHdpbmRvdy5mcmFtZXMqMTAwMC82MCAqIG8ucGxhdGZvcm1lckZvcmNlICogTWF0aC5jb3Moby5wbGF0Zm9ybWVyQW5nbGUpIC8gMTApICUgMTAwIC0gMTAwO1xyXG4gICAgICAgICAgICBjb25zdCBvZmZzZXRZID0gKHdpbmRvdy5mcmFtZXMqMTAwMC82MCAqIG8ucGxhdGZvcm1lckZvcmNlICogTWF0aC5zaW4oby5wbGF0Zm9ybWVyQW5nbGUpIC8gMTApICUgMTAwIC0gMTAwO1xyXG5cclxuICAgICAgICAgICAgY3R4Lmdsb2JhbEFscGhhID0gMTtcclxuICAgICAgICAgICAgZm9yKGxldCB4ID0gby50b3BMZWZ0LnggKyBvZmZzZXRYICsgNTA7IHggPD0gby50b3BMZWZ0LnggKyBvLmRpbWVuc2lvbnMueCArIDUwOyB4ICs9IDEwMCl7XHJcbiAgICAgICAgICAgICAgICBmb3IobGV0IHkgPSBvLnRvcExlZnQueSArIG9mZnNldFkgKyA1MDsgeSA8PSBvLnRvcExlZnQueSArIG8uZGltZW5zaW9ucy55ICsgNTA7IHkgKz0gMTAwKXtcclxuICAgICAgICAgICAgICAgICAgICBjdHgudHJhbnNsYXRlKHgseSk7XHJcbiAgICAgICAgICAgICAgICAgICAgY3R4LnJvdGF0ZShvLnBsYXRmb3JtZXJBbmdsZStNYXRoLlBJLzIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGN0eC5kcmF3SW1hZ2Uod2luZG93LmFycm93SW1nLCAtNTAsIC01MCwgMTAwLCAxMDApO1xyXG4gICAgICAgICAgICAgICAgICAgIGN0eC5yb3RhdGUoLW8ucGxhdGZvcm1lckFuZ2xlLU1hdGguUEkvMik7XHJcbiAgICAgICAgICAgICAgICAgICAgY3R4LnRyYW5zbGF0ZSgteCwteSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGN0eC5yZXN0b3JlKCk7XHJcblxyXG4gICAgICAgICAgICAvLyByZW5kZXJpbmcg8J+RjSBpZiBwbGF5ZXIgY2FuIGp1bXBcclxuICAgICAgICAgICAgLy8gaWYgdGhlcmUgZXZlciBpcyB0byBiZSBtb3JlIGVtb2ppcyBsaWtlIHRoaXMsIHRoZW4gbWFrZSBhbiBhcnJheSBvZiBlbW9qaXMgdGhhdCBpIGNhbiBwdXNoIHRvIHRoYXQgcmVuZGVyIG9uIHRvcCBvZiBlYWNoIG90aGVyIGV2ZXJ5IGZyYW1lICh3LyBwcmlvcml0eT8gc29ydGVkPylcclxuICAgICAgICAgICAgaWYoby5jYW5KdW1wID09PSB0cnVlICYmIG8udG91Y2hpbmdQbGF0Zm9ybWVyID09PSB0cnVlKXtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHBsYXllciA9IHdpbmRvdy5wbGF5ZXJzW3dpbmRvdy5zZWxmSWRdO1xyXG4gICAgICAgICAgICAgICAgaWYocGxheWVyICE9PSB1bmRlZmluZWQpe1xyXG4gICAgICAgICAgICAgICAgICAgIGN0eC5nbG9iYWxBbHBoYSA9IDE7XHJcbiAgICAgICAgICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICd3aGl0ZSc7XHJcbiAgICAgICAgICAgICAgICAgICAgY3R4LmZvbnQgPSBgNTZweCBJbnRlcmA7XHJcbiAgICAgICAgICAgICAgICAgICAgY3R4LnRleHRBbGlnbiA9ICdjZW50ZXInO1xyXG4gICAgICAgICAgICAgICAgICAgIGN0eC50ZXh0QmFzZWxpbmUgPSAnbWlkZGxlJztcclxuICAgICAgICAgICAgICAgICAgICBjdHguZmlsbFRleHQoJ/CfkY0nLCBwbGF5ZXIucG9zLngsIHBsYXllci5wb3MueSAtIHBsYXllci5zYXQuciAtIDUwKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBvLnRvdWNoaW5nUGxhdGZvcm1lciA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICAvKnJlc3RyaWN0QXhpcyovXHJcbiAgICAobykgPT4ge1xyXG4gICAgICAgIGlmKG8uYXhpc1NwZWVkTXVsdFggPCAwICYmIG8uYXhpc1NwZWVkTXVsdFkgPCAwKXtcclxuICAgICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gJ3JlZCc7XHJcbiAgICAgICAgfSBlbHNlIGlmKG8uYXhpc1NwZWVkTXVsdFggPCAwIHx8IG8uYXhpc1NwZWVkTXVsdFkgPCAwKXtcclxuICAgICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gJyNmZjY5NjknO1xyXG4gICAgICAgIH0gZWxzZSBpZihvLmF4aXNTcGVlZE11bHRZID4gMSB8fCBvLmF4aXNTcGVlZE11bHRZID4gMSl7XHJcbiAgICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9ICcjYzVjNTAwJztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSAnd2hpdGUnO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjdHgubGluZVdpZHRoID0gNDtcclxuICAgICAgICBjdHgudG9GaWxsID0gZmFsc2U7XHJcbiAgICAgICAgY3R4LnRvU3Ryb2tlID0gdHJ1ZTtcclxuICAgICAgICBjdHguY2xlYW5VcEZ1bmN0aW9uID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBjdHgubGluZVdpZHRoID0gMztcclxuICAgICAgICAgICAgY3R4LnNhdmUoKTtcclxuXHJcbiAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoby50b3BMZWZ0LnggKyBvLmRpbWVuc2lvbnMueCAvIDIsIG8udG9wTGVmdC55ICsgby5kaW1lbnNpb25zLnkgLyAyKTtcclxuXHJcbiAgICAgICAgICAgIGN0eC5jbGlwKCk7XHJcblxyXG4gICAgICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSBvLmF4aXNTcGVlZE11bHRYID4gMSA/IDAuOCA6IChNYXRoLm1heCgwLjMsby5heGlzU3BlZWRNdWx0WCA8IDAgPyAtby5heGlzU3BlZWRNdWx0WCA6IDEtby5heGlzU3BlZWRNdWx0WCkpO1xyXG4gICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBvLmF4aXNTcGVlZE11bHRYIDwgMCA/ICdyZWQnIDogKG8uYXhpc1NwZWVkTXVsdFggPiAxID8gJyNjNWM1MDAnIDogJ3doaXRlJyk7XHJcblxyXG4gICAgICAgICAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgICAgIGZvcihsZXQgeCA9IC1vLmRpbWVuc2lvbnMueC8yOyB4IDw9IG8uZGltZW5zaW9ucy54LzI7IHggKz0gNTApe1xyXG4gICAgICAgICAgICAgICAgY3R4Lm1vdmVUbyh4LC1vLmRpbWVuc2lvbnMueS8yKTtcclxuICAgICAgICAgICAgICAgIGN0eC5saW5lVG8oeCxvLmRpbWVuc2lvbnMueS8yKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjdHguc3Ryb2tlKCk7XHJcbiAgICAgICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuXHJcbiAgICAgICAgICAgIGN0eC5nbG9iYWxBbHBoYSA9IG8uYXhpc1NwZWVkTXVsdFkgPiAxID8gMC44IDogKE1hdGgubWF4KDAuMyxvLmF4aXNTcGVlZE11bHRZIDwgMCA/IC1vLmF4aXNTcGVlZE11bHRZIDogMS1vLmF4aXNTcGVlZE11bHRZKSk7XHJcbiAgICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IG8uYXhpc1NwZWVkTXVsdFkgPCAwID8gJ3JlZCcgOiAoby5heGlzU3BlZWRNdWx0WSA+IDEgPyAnI2M1YzUwMCcgOiAnd2hpdGUnKTtcclxuXHJcbiAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICAgICAgZm9yKGxldCB5ID0gLW8uZGltZW5zaW9ucy55LzI7IHkgPD0gby5kaW1lbnNpb25zLnkvMjsgeSArPSA1MCl7XHJcbiAgICAgICAgICAgICAgICBjdHgubW92ZVRvKC1vLmRpbWVuc2lvbnMueC8yLHkpO1xyXG4gICAgICAgICAgICAgICAgY3R4LmxpbmVUbyhvLmRpbWVuc2lvbnMueC8yLHkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGN0eC5zdHJva2UoKTtcclxuICAgICAgICAgICAgY3R4LmNsb3NlUGF0aCgpO1xyXG5cclxuICAgICAgICAgICAgY3R4LnJlc3RvcmUoKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgLypzbmFwR3JpZCovXHJcbiAgICAobykgPT4ge1xyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSAnIzAwMDA4YSc7XHJcbiAgICAgICAgY3R4Lmdsb2JhbEFscGhhID0gMC4xO1xyXG4gICAgICAgIGN0eC50b0NsaXAgPSB0cnVlO1xyXG5cclxuICAgICAgICBjdHguY2xlYW5VcEZ1bmN0aW9uID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBjdHguc2F2ZSgpO1xyXG4gICAgICAgICAgICBjdHguY2xpcCgpO1xyXG5cclxuICAgICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gYmxlbmRDb2xvcignIzBmMDAwMCcsICcjMDAwMDAwJywgTWF0aC5tYXgoMCxvLnNuYXBDb29sZG93bikgLyBvLm1heFNuYXBDb29sZG93bik7XHJcbiAgICAgICAgICAgIGN0eC5saW5lV2lkdGggPSA0O1xyXG4gICAgICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSAwLjE3O1xyXG5cclxuICAgICAgICAgICAgbGV0IG1pZGRsZVggPSBvLnRvcExlZnQueCArIG8uZGltZW5zaW9ucy54LzI7XHJcbiAgICAgICAgICAgIGxldCBtaWRkbGVZID0gby50b3BMZWZ0LnkgKyBvLmRpbWVuc2lvbnMueS8yOyBcclxuICAgICAgICAgICAgY3R4LnRyYW5zbGF0ZShtaWRkbGVYLCBtaWRkbGVZKTtcclxuXHJcbiAgICAgICAgICAgIG8uc25hcFJvdGF0ZU1vdmVtZW50RXhwYW5zaW9uID0ge1xyXG4gICAgICAgICAgICAgICAgYmFzZTogKE1hdGgubWF4KG8uZGltZW5zaW9ucy54LG8uZGltZW5zaW9ucy55KSoqMi9NYXRoLnNxcnQoby5kaW1lbnNpb25zLngqKjIrby5kaW1lbnNpb25zLnkqKjIpKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG8uc25hcFJvdGF0ZU1vdmVtZW50RXhwYW5zaW9uLnggPSBNYXRoLmNlaWwoby5zbmFwUm90YXRlTW92ZW1lbnRFeHBhbnNpb24uYmFzZS9vLnNuYXBEaXN0YW5jZVgrMSkqby5zbmFwRGlzdGFuY2VYO1xyXG4gICAgICAgICAgICBvLnNuYXBSb3RhdGVNb3ZlbWVudEV4cGFuc2lvbi55ID0gTWF0aC5jZWlsKG8uc25hcFJvdGF0ZU1vdmVtZW50RXhwYW5zaW9uLmJhc2Uvby5zbmFwRGlzdGFuY2VZKzEpKm8uc25hcERpc3RhbmNlWTtcclxuXHJcbiAgICAgICAgICAgIGN0eC5yb3RhdGUoby5zbmFwQW5nbGUpO1xyXG5cclxuICAgICAgICAgICAgbGV0IHJlbmRlclBhdGggPSBuZXcgUGF0aDJEKCk7XHJcbiAgICAgICAgICAgIGlmKG8udG9TbmFwWCA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgICAgICBmb3IobGV0IHggPSAtby5zbmFwUm90YXRlTW92ZW1lbnRFeHBhbnNpb24ueDsgeCA8PSBvLnNuYXBSb3RhdGVNb3ZlbWVudEV4cGFuc2lvbi54OyB4ICs9IG8uc25hcERpc3RhbmNlWCl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyUGF0aC5yZWN0KC0xMCArIHgsIC1vLnNuYXBSb3RhdGVNb3ZlbWVudEV4cGFuc2lvbi54IC0gMTAsIDIwLCAyICogby5zbmFwUm90YXRlTW92ZW1lbnRFeHBhbnNpb24ueCArIDIwKTtcclxuICAgICAgICAgICAgICAgICAgICAvLyBjdHgubW92ZVRvKHgsLW8uc25hcFJvdGF0ZU1vdmVtZW50RXhwYW5zaW9uKTtcclxuICAgICAgICAgICAgICAgICAgICAvLyBjdHgubGluZVRvKHgsby5zbmFwUm90YXRlTW92ZW1lbnRFeHBhbnNpb24pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZihvLnRvU25hcFkgPT09IHRydWUpe1xyXG4gICAgICAgICAgICAgICAgZm9yKGxldCB5ID0gLW8uc25hcFJvdGF0ZU1vdmVtZW50RXhwYW5zaW9uLnk7IHkgPD0gby5zbmFwUm90YXRlTW92ZW1lbnRFeHBhbnNpb24ueTsgeSArPSBvLnNuYXBEaXN0YW5jZVkpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlclBhdGgucmVjdCgtby5zbmFwUm90YXRlTW92ZW1lbnRFeHBhbnNpb24ueSAtIDEwLCAtMTAgKyB5LCAyICogby5zbmFwUm90YXRlTW92ZW1lbnRFeHBhbnNpb24ueSArIDIwLCAyMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gY3R4Lm1vdmVUbygtby5zbmFwUm90YXRlTW92ZW1lbnRFeHBhbnNpb24seSk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gY3R4LmxpbmVUbyhvLnNuYXBSb3RhdGVNb3ZlbWVudEV4cGFuc2lvbix5KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjdHguc3Ryb2tlKHJlbmRlclBhdGgpO1xyXG4gICAgICAgICAgICBjdHguY2xvc2VQYXRoKCk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyBkcmF3aW5nIHNuYXBNYWduaXR1ZGUgaW5kaWNhdG9yXHJcbiAgICAgICAgICAgIGNvbnN0IHBsYXllciA9IHdpbmRvdy5wbGF5ZXJzW3dpbmRvdy5zZWxmSWRdO1xyXG4gICAgICAgICAgICBpZihwbGF5ZXIucG9zLnggKyBvLnNuYXBNYWduaXR1ZGUgPCBtaWRkbGVYIC0gby5kaW1lbnNpb25zLngvMiB8fCBwbGF5ZXIucG9zLnggLSBvLnNuYXBNYWduaXR1ZGUgPiBtaWRkbGVYICsgby5kaW1lbnNpb25zLngvMiB8fCBwbGF5ZXIucG9zLnkgKyBvLnNuYXBNYWduaXR1ZGUgPCBtaWRkbGVZIC0gby5kaW1lbnNpb25zLnkvMiB8fCBwbGF5ZXIucG9zLnkgLSBvLnNuYXBNYWduaXR1ZGUgPiBtaWRkbGVZICsgby5kaW1lbnNpb25zLnkvMil7XHJcbiAgICAgICAgICAgICAgICBjdHgucmVzdG9yZSgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9ICdncmV5JztcclxuICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICdibGFjayc7XHJcbiAgICAgICAgICAgIGN0eC5nbG9iYWxBbHBoYSA9IDAuMjtcclxuICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG5cclxuICAgICAgICAgICAgY3R4LmNsaXAocmVuZGVyUGF0aCk7XHJcblxyXG4gICAgICAgICAgICBjdHgucm90YXRlKC1vLnNuYXBBbmdsZSk7XHJcbiAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoLW1pZGRsZVgsLW1pZGRsZVkpO1xyXG5cclxuICAgICAgICAgICAgY3R4LmFyYyhwbGF5ZXIucG9zLngsIHBsYXllci5wb3MueSwgby5zbmFwTWFnbml0dWRlLCAwLCBNYXRoLlBJKjIpO1xyXG4gICAgICAgICAgICBjdHguc3Ryb2tlKCk7XHJcbiAgICAgICAgICAgIGN0eC5maWxsKCk7XHJcbiAgICAgICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuXHJcbiAgICAgICAgICAgIGN0eC5yZXN0b3JlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIC8qdGltZVRyYXAqL1xyXG4gICAgKG8pID0+IHtcclxuICAgICAgICBsZXQgbWlkZGxlWCA9IG8udG9wTGVmdC54ICsgby5kaW1lbnNpb25zLngvMjtcclxuICAgICAgICBsZXQgbWlkZGxlWSA9IG8udG9wTGVmdC55ICsgby5kaW1lbnNpb25zLnkvMjsgXHJcblxyXG4gICAgICAgIGxldCBncmQgPSBjdHguY3JlYXRlUmFkaWFsR3JhZGllbnQobWlkZGxlWCwgbWlkZGxlWSwgMCwgbWlkZGxlWCwgbWlkZGxlWSwgTWF0aC5taW4oMTAwLCAoby5kaW1lbnNpb25zLnggKyBvLmRpbWVuc2lvbnMueSkvMykpO1xyXG5cclxuICAgICAgICBpZihvLnRpbWVUcmFwVG9LaWxsID09PSBmYWxzZSl7XHJcbiAgICAgICAgICAgIGdyZC5hZGRDb2xvclN0b3AoMCwgXCJyZ2JhKDE5OSwxOTksMTk5LDApXCIpO1xyXG4gICAgICAgICAgICBncmQuYWRkQ29sb3JTdG9wKDEsIFwicmdiYSgxOTksMTk5LDE5OSwxKVwiKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBncmQuYWRkQ29sb3JTdG9wKDAsIFwicmdiYSgxOTksMCwwLDApXCIpO1xyXG4gICAgICAgICAgICBncmQuYWRkQ29sb3JTdG9wKDEsIFwicmdiYSgxOTksMCwwLDEpXCIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IGdyZDtcclxuICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSBNYXRoLm1heCgwLjEyLCAwLjUgLSBvLnRpbWVUcmFwVGltZSAvIG8udGltZVRyYXBNYXhUaW1lIC8gMik7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY3R4LmNsZWFuVXBGdW5jdGlvbiA9ICgpID0+IHtcclxuICAgICAgICAgICAgY3R4Lmdsb2JhbEFscGhhID0gTWF0aC5tYXgoMC4zLCBvLnRpbWVUcmFwVGltZSAvIG8udGltZVRyYXBNYXhUaW1lIC8gMyk7XHJcbiAgICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSAnd2hpdGUnO1xyXG4gICAgICAgICAgICBjdHguZm9udCA9IGAke01hdGgubWluKG8uZGltZW5zaW9ucy54LCBvLmRpbWVuc2lvbnMueSkvMn1weCBJbnRlcmA7XHJcbiAgICAgICAgICAgIGN0eC50ZXh0QWxpZ24gPSAnY2VudGVyJztcclxuICAgICAgICAgICAgY3R4LnRleHRCYXNlbGluZSA9ICdtaWRkbGUnO1xyXG5cclxuICAgICAgICAgICAgY3R4LmZpbGxUZXh0KG8udGltZVRyYXBUb1Nob3dUZW50aCA9PT0gdHJ1ZSA/IE1hdGgucm91bmQoby50aW1lVHJhcFRpbWUvNjAgKiAxMCkgLyAxMCA6IE1hdGgucm91bmQoby50aW1lVHJhcFRpbWUvNjApLCBtaWRkbGVYLCBtaWRkbGVZKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgLypjaGFuZ2VTaXplKi9cclxuICAgIChvKSA9PiB7XHJcbiAgICAgICAgaWYoby5zaXplQ2hhbmdlUGVybWFuZW50ID09PSB0cnVlKXtcclxuICAgICAgICAgICAgY3R4LnRvU3Ryb2tlID0gdHJ1ZTtcclxuICAgICAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDEwO1xyXG4gICAgICAgICAgICBjdHgubGluZURhc2hPZmZzZXQgPSAtd2luZG93LmZyYW1lcyoxMDAwLzYwIC8gMTU7XHJcbiAgICAgICAgICAgIGlmIChvLnNpemVNdWx0ID4gMSl7XHJcbiAgICAgICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSAnIzBlMzBhZCc7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSAnIzFjMTg1Mic7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY3R4LnNldExpbmVEYXNoKFszMCwgNDBdKTtcclxuXHJcbiAgICAgICAgICAgIGN0eC5jbGVhblVwRnVuY3Rpb24gPSAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjdHguc2V0TGluZURhc2goW10pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGlmKG8ucGVybWFuZW50U2l6ZUNoYW5nZURvbmUgPT09IHRydWUpIHtcclxuICAgICAgICAgICAgY3R4LnRvRmlsbCA9IGZhbHNlO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGlmIChvLnNpemVNdWx0ID4gMSl7XHJcbiAgICAgICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gJyMwZTMwYWQnO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICcjMWMxODUyJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSAwLjI4O1xyXG4gICAgfSxcclxuICAgIC8qY2hhbmdlU3BlZWQqL1xyXG4gICAgKG8pID0+IHtcclxuICAgICAgICBpZihvLnNwZWVkQ2hhbmdlUGVybWFuZW50ID09PSB0cnVlKXtcclxuICAgICAgICAgICAgY3R4LnRvU3Ryb2tlID0gdHJ1ZTtcclxuICAgICAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDEwO1xyXG4gICAgICAgICAgICBjdHgubGluZURhc2hPZmZzZXQgPSAtd2luZG93LmZyYW1lcyoxMDAwLzYwIC8gMTU7XHJcbiAgICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9ICcjZWJhNTAwJztcclxuICAgICAgICAgICAgY3R4LnNldExpbmVEYXNoKFszMCwgNDBdKTtcclxuXHJcbiAgICAgICAgICAgIGN0eC5jbGVhblVwRnVuY3Rpb24gPSAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjdHguc2V0TGluZURhc2goW10pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZihvLnBlcm1hbmVudFNwZWVkQ2hhbmdlRG9uZSA9PT0gdHJ1ZSkge1xyXG4gICAgICAgICAgICBjdHgudG9GaWxsID0gZmFsc2U7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICcjZWJhNTAwJztcclxuICAgICAgICAgICAgY3R4LnRvU3Ryb2tlID0gdHJ1ZTtcclxuICAgICAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDM7XHJcbiAgICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IGN0eC5maWxsU3R5bGU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGN0eC5nbG9iYWxBbHBoYSA9IDAuMjU7XHJcblxyXG4gICAgICAgIC8vIHBlcm1hbmVudHMgc2hvdWxkIGRpc3NhcGVhciB1cG9uIHVzZSBpIHRoaW5rXHJcbiAgICB9LFxyXG4gICAgLypzb2xpZENvbG9yKi9cclxuICAgIChvKSA9PiB7XHJcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IG8uaGV4O1xyXG4gICAgICAgIGlmKG8uaXNUZXh0ID09PSB0cnVlKWN0eC5nbG9iYWxBbHBoYSA9IDA7XHJcbiAgICAgICAgZWxzZSBjdHguZ2xvYmFsQWxwaGEgPSBvLmFscGhhO1xyXG4gICAgfSxcclxuICAgIC8qZGVjb3JhdGlvbiovXHJcbiAgICAobykgPT4ge1xyXG4gICAgICAgIGN0eC50b0ZpbGwgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgY29uc3QgZGVjb0ltZyA9IGRlY29yYXRpb25JbWdzW28uZGVjb0ZpbGVQYXRoXTtcclxuICAgICAgICBpZihkZWNvSW1nID09PSB1bmRlZmluZWQpe1xyXG4gICAgICAgICAgICBkZWNvcmF0aW9uSW1nc1tvLmRlY29GaWxlUGF0aF0gPSAnbG9hZGluZyc7XHJcbiAgICAgICAgICAgIGxldCBpbWcgPSBuZXcgSW1hZ2UoKTtcclxuICAgICAgICAgICAgaWYoby5kZWNvRmlsZVBhdGguc2xpY2UoMCw0KSA9PT0gJ2h0dHAnKXtcclxuICAgICAgICAgICAgICAgIGltZy5zcmMgPSBvLmRlY29GaWxlUGF0aDtcclxuICAgICAgICAgICAgICAgIGltZy5vbmxvYWQgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGVjb3JhdGlvbkltZ3Nbby5kZWNvRmlsZVBhdGhdID0gaW1nO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYoZW52aXJvbm1lbnQgPT09ICdlZGl0b3InKXtcclxuICAgICAgICAgICAgICAgICAgICBpbXBvcnQoYC4vZ2Z4L2RlY29yYXRpb25zLyR7by5kZWNvRmlsZVBhdGh9YCkudGhlbihkYXRhID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW1nLnNyYyA9IGRhdGEuZGVmYXVsdDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGVjb3JhdGlvbkltZ3Nbby5kZWNvRmlsZVBhdGhdID0gaW1nO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBpbWcuc3JjID0gYC4vZ2Z4L2RlY29yYXRpb25zLyR7by5kZWNvRmlsZVBhdGh9YDtcclxuICAgICAgICAgICAgICAgICAgICBpbWcub25sb2FkID0gKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWNvcmF0aW9uSW1nc1tvLmRlY29GaWxlUGF0aF0gPSBpbWc7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9IGVsc2UgaWYoZGVjb0ltZyA9PT0gJ2xvYWRpbmcnKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBtaWRkbGVYID0gby50b3BMZWZ0LnggKyBvLmRpbWVuc2lvbnMueC8yO1xyXG4gICAgICAgIGxldCBtaWRkbGVZID0gby50b3BMZWZ0LnkgKyBvLmRpbWVuc2lvbnMueS8yOyBcclxuICAgICAgICBjb25zdCBtYXhEaW1lbnNpb24gPSBNYXRoLm1heChvLmRpbWVuc2lvbnMueCwgby5kaW1lbnNpb25zLnkpO1xyXG5cclxuICAgICAgICBjdHgudHJhbnNsYXRlKG1pZGRsZVgsIG1pZGRsZVkpO1xyXG4gICAgICAgIGlmKG8ucm90YXRpb24gIT09IHVuZGVmaW5lZCkgY3R4LnJvdGF0ZShvLnJvdGF0aW9uKTtcclxuICAgICAgICBjdHguZHJhd0ltYWdlKGRlY29JbWcsIC1tYXhEaW1lbnNpb24gLyAyLCAtbWF4RGltZW5zaW9uIC8gMiwgbWF4RGltZW5zaW9uLCBtYXhEaW1lbnNpb24pO1xyXG4gICAgICAgIGlmKG8ucm90YXRpb24gIT09IHVuZGVmaW5lZCkgY3R4LnJvdGF0ZSgtby5yb3RhdGlvbik7XHJcbiAgICAgICAgY3R4LnRyYW5zbGF0ZSgtbWlkZGxlWCwgLW1pZGRsZVkpO1xyXG4gICAgfSxcclxuICAgIC8qY2hhbmdlTWFwKi9cclxuICAgIChvKSA9PiB7XHJcbiAgICAgICAgLy8gY3R4LmZpbGxTdHlsZSA9IGBoc2woJHt3aW5kb3cuZnJhbWVzKjEwMDAvNjAvMTJ9LDUwJSw1MCUpYDtcclxuICAgICAgICAvLyBjdHguc2hhZG93Q29sb3IgPSBjdHguZmlsbFN0eWxlO1xyXG4gICAgICAgIC8vIGN0eC5zaGFkb3dCbHVyID0gMTU7XHJcbiAgICAgICAgLy8gY3R4LmNsZWFuVXBGdW5jdGlvbiA9ICgpID0+IHtcclxuICAgICAgICAvLyAgICAgY3R4LnNoYWRvd0JsdXIgPSAwO1xyXG4gICAgICAgIC8vIH1cclxuXHJcbiAgICAgICAgbGV0IHQgPSAoMStNYXRoLnNpbih3aW5kb3cuZnJhbWVzKjEwMDAvNjAgLyA2MDApKS8yICogKG8uZGlmZmljdWx0eSAlIDEpO1xyXG5cclxuICAgICAgICBjdHguZmlsbFN0eWxlID0gYmxlbmRDb2xvcihkaWZmaWN1bHR5SW1hZ2VDb2xvcnNbTWF0aC5mbG9vcihvLmRpZmZpY3VsdHkpXSxkaWZmaWN1bHR5SW1hZ2VDb2xvcnNbTWF0aC5taW4oOCxNYXRoLmNlaWwoby5kaWZmaWN1bHR5KSldLHQpO1xyXG5cclxuICAgICAgICBjdHguY2xlYW5VcEZ1bmN0aW9uID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBpZihvLmRpbWVuc2lvbnMueCA+IG8uZGltZW5zaW9ucy55KXtcclxuICAgICAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoby5kaW1lbnNpb25zLnggLSBvLmRpbWVuc2lvbnMueSArIG8udG9wTGVmdC54LCBvLnRvcExlZnQueSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjdHgudHJhbnNsYXRlKG8udG9wTGVmdC54LCBvLmRpbWVuc2lvbnMueSAtIG8uZGltZW5zaW9ucy54ICsgby50b3BMZWZ0LnkpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBjdHgubGluZUNhcCA9ICdyb3VuZCc7XHJcbiAgICAgICAgICAgIGN0eC5nbG9iYWxBbHBoYSA9IHQ7XHJcbiAgICAgICAgICAgIGRpZmZpY3VsdHlJbWFnZU1hcFtNYXRoLm1pbig4LE1hdGguY2VpbChvLmRpZmZpY3VsdHkpKV0oTWF0aC5taW4oby5kaW1lbnNpb25zLngsIG8uZGltZW5zaW9ucy55KSk7XHJcblxyXG4gICAgICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSAxIC0gdDtcclxuICAgICAgICAgICAgZGlmZmljdWx0eUltYWdlTWFwW01hdGguZmxvb3Ioby5kaWZmaWN1bHR5KV0oTWF0aC5taW4oby5kaW1lbnNpb25zLngsIG8uZGltZW5zaW9ucy55KSk7XHJcbiAgICAgICAgICAgIGN0eC5saW5lQ2FwID0gJ3NxdWFyZSc7XHJcbiAgICAgICAgICAgIGN0eC5nbG9iYWxBbHBoYSA9IDE7XHJcblxyXG4gICAgICAgICAgICBpZihvLmRpbWVuc2lvbnMueCA+IG8uZGltZW5zaW9ucy55KXtcclxuICAgICAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoLShvLmRpbWVuc2lvbnMueCAtIG8uZGltZW5zaW9ucy55ICsgby50b3BMZWZ0LngpLCAtby50b3BMZWZ0LnkpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY3R4LnRyYW5zbGF0ZSgtby50b3BMZWZ0LngsIC0oby5kaW1lbnNpb25zLnkgLSBvLmRpbWVuc2lvbnMueCArIG8udG9wTGVmdC55KSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGN0eC5mb250ID0gYCR7by5kaW1lbnNpb25zLnggLyAzLjV9cHggSW50ZXJgO1xyXG4gICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gJ3doaXRlJztcclxuICAgICAgICAgICAgY3R4LnRleHRBbGlnbiA9ICdjZW50ZXInO1xyXG4gICAgICAgICAgICBjdHgudGV4dEJhc2VsaW5lID0gJ21pZGRsZSc7XHJcblxyXG4gICAgICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSBNYXRoLm1pbigxLCgod2luZG93LnBsYXllcnNbd2luZG93LnNlbGZJZF0ucG9zLnkgKyBjYW52YXMuaC8yKSAtIChvLnRvcExlZnQueSkpIC8gKG8uZGltZW5zaW9ucy55KSk7XHJcbiAgICAgICAgICAgIGN0eC5maWxsVGV4dChcclxuICAgICAgICAgICAgICAgIG8ubWFwTmFtZS50b1VwcGVyQ2FzZSgpLnJlcGxhY2UoJ08nLCdvJyksXHJcbiAgICAgICAgICAgICAgICBvLnRvcExlZnQueCArIG8uZGltZW5zaW9ucy54IC8gMixcclxuICAgICAgICAgICAgICAgIG8udG9wTGVmdC55IC0gby5kaW1lbnNpb25zLnkgLyA0XHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIGN0eC5nbG9iYWxBbHBoYSA9IDE7XHJcblxyXG4gICAgICAgICAgICAvLyAvLyBsaW5lIG1hcmtpbmcgLSBzY3JhcHBlZFxyXG4gICAgICAgICAgICAvLyBjdHguZmlsbFN0eWxlID0gJ2JsYWNrJztcclxuICAgICAgICAgICAgLy8gY3R4LmZpbGxSZWN0KFxyXG4gICAgICAgICAgICAvLyAgICAgdG9wWCxcclxuICAgICAgICAgICAgLy8gICAgIHRvcFkgKyAoMSAtIG8uZGlmZmljdWx0eSUxKSAqIChvLmRpbWVuc2lvbnMueSowLjk1KSxcclxuICAgICAgICAgICAgLy8gICAgIG8uZGltZW5zaW9ucy54IC8gNSxcclxuICAgICAgICAgICAgLy8gICAgIG8uZGltZW5zaW9ucy55ICogLjA1XHJcbiAgICAgICAgICAgIC8vIClcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgLyp0b3JuYWRvKi9cclxuICAgIChvKSA9PiB7XHJcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICcjYzBiYmM5JztcclxuICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSAwLjI1O1xyXG4gICAgfSxcclxuICAgIC8qY2hhbmdlVmlnbmV0dGUqL1xyXG4gICAgKG8pID0+IHtcclxuICAgICAgICBjdHgudG9GaWxsID0gZmFsc2U7XHJcbiAgICB9LFxyXG4gICAgLypwdXNoYWJsZSovXHJcbiAgICAobykgPT4ge1xyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSB3aW5kb3cuY29sb3JzLnRpbGU7XHJcbiAgICAgICAgY3R4LmNsZWFuVXBGdW5jdGlvbiA9ICgpID0+IHtcclxuICAgICAgICAgICAgY3R4LnNhdmUoKTtcclxuICAgICAgICAgICAgY3R4LmNsaXAoKTtcclxuXHJcbiAgICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9ICd3aGl0ZSc7XHJcbiAgICAgICAgICAgIGN0eC5saW5lV2lkdGggPSAzO1xyXG4gICAgICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSAwLjI1O1xyXG4gICAgICAgICAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgICAgIGN0eC5saW5lVG8oby50b3BMZWZ0LngsIG8udG9wTGVmdC55KTtcclxuICAgICAgICAgICAgY3R4LmxpbmVUbyhvLnRvcExlZnQueCArIG8uZGltZW5zaW9ucy54LCBvLnRvcExlZnQueSArIG8uZGltZW5zaW9ucy55KTtcclxuICAgICAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgICAgICAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgICAgIGN0eC5saW5lVG8oby50b3BMZWZ0LnggKyBvLmRpbWVuc2lvbnMueCwgby50b3BMZWZ0LnkpO1xyXG4gICAgICAgICAgICBjdHgubGluZVRvKG8udG9wTGVmdC54LCBvLnRvcExlZnQueSArIG8uZGltZW5zaW9ucy55KTtcclxuICAgICAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSAxO1xyXG4gICAgICAgICAgICBjdHgubGluZVdpZHRoID0gMztcclxuXHJcbiAgICAgICAgICAgIGN0eC5yZXN0b3JlKCk7XHJcblxyXG4gICAgICAgICAgICAvLyBUT0RPOiB3aGl0ZSBsaW5lcyB3aGVyZSB0aGUgYW5nbGVzIGFyZT8gb25lRGlyZWN0aW9uYWwgcGFyYW1ldGVyP1xyXG4gICAgICAgICAgICAvLyBhbHNvIFRPRE86IFxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICAvKmNoYW5nZU11c2ljKi9cclxuICAgIChvKSA9PiB7XHJcbiAgICAgICAgY3R4LnRvRmlsbCA9IGZhbHNlO1xyXG4gICAgfSxcclxuICAgIC8qY2hhbmdlU2hpcCovXHJcbiAgICAobykgPT4ge1xyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSBvLmNoYW5nZVNoaXBTdGF0ZVRvID09PSB0cnVlID8gJ3JnYmEoMCwwLDI1NSwwLjMpJyA6ICdyZ2JhKDI1NSwyNTUsMCwwLjMpJztcclxuICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBvLmNoYW5nZVNoaXBTdGF0ZVRvID09PSB0cnVlID8gJ2JsdWUnIDogJ3llbGxvdyc7XHJcbiAgICAgICAgY3R4LmxpbmVEYXNoT2Zmc2V0ID0gLXdpbmRvdy5mcmFtZXMqMTAwMC82MCAqIDE1MCAvIDEwMDA7XHJcbiAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDQ7XHJcbiAgICAgICAgY3R4LnNldExpbmVEYXNoKFszMCwgMzBdKTtcclxuICAgICAgICBjdHgudG9TdHJva2UgPSB0cnVlO1xyXG5cclxuICAgICAgICBjdHguY2xlYW5VcEZ1bmN0aW9uID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBjdHguc2V0TGluZURhc2goW10pO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICAvKmNoYW5nZUdyYXBwbGUqL1xyXG4gICAgKG8pID0+IHtcclxuICAgICAgICBsZXQgbWlkZGxlWCA9IG8udG9wTGVmdC54ICsgby5kaW1lbnNpb25zLngvMjtcclxuICAgICAgICBsZXQgbWlkZGxlWSA9IG8udG9wTGVmdC55ICsgby5kaW1lbnNpb25zLnkvMjsgXHJcblxyXG4gICAgICAgIGxldCBncmQgPSBjdHguY3JlYXRlUmFkaWFsR3JhZGllbnQobWlkZGxlWCwgbWlkZGxlWSwgMCwgbWlkZGxlWCwgbWlkZGxlWSwgTWF0aC5zcXJ0KG8uZGltZW5zaW9ucy54KioyICsgby5kaW1lbnNpb25zLnkqKjIpLzIpO1xyXG5cclxuICAgICAgICBsZXQgdDtcclxuICAgICAgICBpZihvLmNoYW5nZUdyYXBwbGVTdGF0ZVRvID09PSB0cnVlKXtcclxuICAgICAgICAgICAgdCA9ICh3aW5kb3cuZnJhbWVzKjEwMDAvNjAgLyAxNjAwKSAlIDAuMzM7XHJcbiAgICAgICAgICAgIGdyZC5hZGRDb2xvclN0b3AoMSwgXCJyZ2JhKDEyNywxMjcsMjU1LDApXCIpO1xyXG4gICAgICAgICAgICBncmQuYWRkQ29sb3JTdG9wKCgwLjY3K3QpLCBcInJnYmEoMTI3LDEyNywyNTUsMSlcIik7XHJcblxyXG4gICAgICAgICAgICBncmQuYWRkQ29sb3JTdG9wKCgwLjY2K3QpLCBcInJnYmEoMTI3LDEyNywyNTUsMClcIik7XHJcbiAgICAgICAgICAgIGdyZC5hZGRDb2xvclN0b3AoKDAuMzQrdCksIFwicmdiYSgxMjcsMTI3LDI1NSwxKVwiKTtcclxuXHJcbiAgICAgICAgICAgIGdyZC5hZGRDb2xvclN0b3AoKDAuMzMrdCksIFwicmdiYSgxMjcsMTI3LDI1NSwwKVwiKTtcclxuICAgICAgICAgICAgZ3JkLmFkZENvbG9yU3RvcCgoMC4wMTAxK3QpLCBcInJnYmEoMTI3LDEyNywyNTUsMSlcIik7XHJcblxyXG4gICAgICAgICAgICBpZigwLjAxK3QgPiAwKWdyZC5hZGRDb2xvclN0b3AoMC4wMSt0LCBcInJnYmEoMTI3LDEyNywyNTUsMClcIik7XHJcbiAgICAgICAgICAgIGdyZC5hZGRDb2xvclN0b3AoMCwgXCJyZ2JhKDEyNywxMjcsMjU1LDEpXCIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHQgPSAwLjMzIC0gKHdpbmRvdy5mcmFtZXMqMTAwMC82MCAvIDE2MDApICUgMC4zMztcclxuICAgICAgICAgICAgZ3JkLmFkZENvbG9yU3RvcCgxLCBcInJnYmEoMjU1LDI1NSwxMjcsMClcIik7XHJcbiAgICAgICAgICAgIGdyZC5hZGRDb2xvclN0b3AoKDAuNjcrdCksIFwicmdiYSgyNTUsMjU1LDEyNywxKVwiKTtcclxuXHJcbiAgICAgICAgICAgIGdyZC5hZGRDb2xvclN0b3AoKDAuNjYrdCksIFwicmdiYSgyNTUsMjU1LDEyNywwKVwiKTtcclxuICAgICAgICAgICAgZ3JkLmFkZENvbG9yU3RvcCgoMC4zNCt0KSwgXCJyZ2JhKDI1NSwyNTUsMTI3LDEpXCIpO1xyXG5cclxuICAgICAgICAgICAgZ3JkLmFkZENvbG9yU3RvcCgoMC4zMyt0KSwgXCJyZ2JhKDI1NSwyNTUsMTI3LDApXCIpO1xyXG4gICAgICAgICAgICBncmQuYWRkQ29sb3JTdG9wKCgwLjAxMDErdCksIFwicmdiYSgyNTUsMjU1LDEyNywxKVwiKTtcclxuXHJcbiAgICAgICAgICAgIGlmKDAuMDErdCA+IDApZ3JkLmFkZENvbG9yU3RvcCgwLjAxK3QsIFwicmdiYSgyNTUsMjU1LDEyNywwKVwiKTtcclxuICAgICAgICAgICAgZ3JkLmFkZENvbG9yU3RvcCgwLCBcInJnYmEoMjU1LDI1NSwxMjcsMSlcIik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjdHguZmlsbFN0eWxlID0gZ3JkO1xyXG4gICAgICAgIC8vIGN0eC5nbG9iYWxBbHBoYSA9IE1hdGguYWJzKE1hdGguc2luKHdpbmRvdy5mcmFtZXMqMTAwMC82MCAvIDc2MCkpO1xyXG4gICAgfSxcclxuICAgIC8qY2hhbmdlRGVhdGhUaW1lciovXHJcbiAgICAobykgPT4ge1xyXG4gICAgICAgIGlmKHdpbmRvdy5za3VsbEltZyA9PT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgICAgd2luZG93LnNrdWxsSW1nID0gbmV3IEltYWdlKCk7XHJcbiAgICAgICAgICAgIHdpbmRvdy5za3VsbEltZy5zcmMgPSAnaHR0cHM6Ly9zdmdzaWxoLmNvbS9zdmcvMTI5NDM1Ny5zdmcnO1xyXG4gICAgICAgICAgICB3aW5kb3cuc2t1bGxJbWcub25sb2FkID0gKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgd2luZG93LnNrdWxsSW1nTG9hZGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjdHguZmlsbFN0eWxlID0gby5jaGFuZ2VEZWF0aFRpbWVyU3RhdGVUbyA9PT0gdHJ1ZSA/ICdyZWQnIDogJ3doaXRlJztcclxuICAgICAgICBjdHguZ2xvYmFsQWxwaGEgPSAwLjQ7XHJcblxyXG4gICAgICAgIGlmKHdpbmRvdy5za3VsbEltZ0xvYWRlZCA9PT0gZmFsc2UpIHJldHVybjtcclxuXHJcbiAgICAgICAgY3R4LmNsZWFuVXBGdW5jdGlvbiA9ICgpID0+IHtcclxuICAgICAgICAgICAgY3R4Lmdsb2JhbEFscGhhID0gMTtcclxuICAgICAgICAgICAgbGV0IG1pZGRsZVggPSBvLnRvcExlZnQueCArIG8uZGltZW5zaW9ucy54LzI7XHJcbiAgICAgICAgICAgIGxldCBtaWRkbGVZID0gby50b3BMZWZ0LnkgKyBvLmRpbWVuc2lvbnMueS8yOyBcclxuXHJcbiAgICAgICAgICAgIGxldCBtaW5EaW1lbnNpb24gPSBNYXRoLm1pbihvLmRpbWVuc2lvbnMueCwgby5kaW1lbnNpb25zLnkpO1xyXG5cclxuICAgICAgICAgICAgY3R4LmRyYXdJbWFnZSh3aW5kb3cuc2t1bGxJbWcsIG1pZGRsZVggLSBtaW5EaW1lbnNpb24vMiwgbWlkZGxlWSAtIG1pbkRpbWVuc2lvbi8yLCBtaW5EaW1lbnNpb24sIG1pbkRpbWVuc2lvbik7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXVxyXG5cclxuY29uc3QgZGlmZmljdWx0eUltYWdlQ29sb3JzID0gd2luZG93LmRpZmZpY3VsdHlJbWFnZUNvbG9ycyA9IFtcclxuICAgIC8qMCAtIFBlYWNlZnVsKi9cclxuICAgIFwiIzZjZDk1YlwiLFxyXG4gICAgLyoxIC0gTW9kZXJhdGUqL1xyXG4gICAgXCIjNThjY2IzXCIsXHJcbiAgICAvKjIgLSBEaWZmaWN1bHQqL1xyXG4gICAgXCIjMGE3N2JmXCIsXHJcbiAgICAvKjMgLSBIYXJkY29yZSovXHJcbiAgICBcIiMzNTI4ZTBcIixcclxuICAgIC8qNCAtIEV4aGF1c3RpbmcqL1xyXG4gICAgXCIjYTE0MmM5XCIsXHJcbiAgICAvKjUgLSBSZWxlbnRsZXNzKi9cclxuICAgIFwiI2UzMmQ4YlwiLFxyXG4gICAgLyo2IC0gQWdvbml6aW5nKi9cclxuICAgIFwiI2ZjNTQzNFwiLFxyXG4gICAgLyo3IC0gVGVycm9yaXppbmcqL1xyXG4gICAgXCIjZmMzYTNhXCIsXHJcbiAgICAvKjggLSBDYXRhY2x5c21pYyovXHJcbiAgICBcIiNjOTVkNWRcIlxyXG5dXHJcblxyXG5jb25zdCBkaWZmaWN1bHR5SW1hZ2VNYXAgPSB3aW5kb3cuZGlmZmljdWx0eUltYWdlTWFwID0gW1xyXG4gICAgLyowIC0gUGVhY2VmdWwqL1xyXG4gICAgKHNpemUpID0+IHtcclxuICAgICAgICBjdHguZ2xvYmFsQWxwaGEgKj0gMC4zO1xyXG4gICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IFwiYmxhY2tcIjtcclxuICAgICAgICBjdHgubGluZVdpZHRoID0gc2l6ZSAqIDMgLyA0MDtcclxuXHJcbiAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgIGN0eC5hcmMoc2l6ZS8yLCBzaXplLzIsIHNpemUgLyA0LCAwLCBNYXRoLlBJICogMik7XHJcbiAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuICAgIH0sXHJcbiAgICAvKjEgLSBNb2RlcmF0ZSovXHJcbiAgICAoc2l6ZSkgPT4ge1xyXG4gICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IFwiIzI4OGE3NVwiO1xyXG4gICAgICAgIGN0eC5saW5lV2lkdGggPSBzaXplICogMyAvIDQwO1xyXG5cclxuICAgICAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgY3R4LmFyYyhzaXplICogNS8xMiwgc2l6ZSAqIDUvMTIsIHNpemUgLyA0LCAwLCBNYXRoLlBJICogMik7XHJcbiAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuXHJcbiAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgIGN0eC5hcmMoc2l6ZSAqIDcvMTIsIHNpemUgKiA3LzEyLCBzaXplIC8gNCwgMCwgTWF0aC5QSSAqIDIpO1xyXG4gICAgICAgIGN0eC5zdHJva2UoKTtcclxuICAgICAgICBjdHguY2xvc2VQYXRoKCk7XHJcbiAgICB9LFxyXG4gICAgLyoyIC0gRGlmZmljdWx0Ki9cclxuICAgIChzaXplKSA9PiB7XHJcbiAgICAgICAgY3R4Lmdsb2JhbEFscGhhICo9IDAuMztcclxuICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBcImJsYWNrXCI7XHJcbiAgICAgICAgY3R4LmxpbmVXaWR0aCA9IHNpemUgKiAzIC8gNDA7XHJcbiAgICAgICAgY3R4LnN0cm9rZVJlY3Qoc2l6ZSAvIDQsIHNpemUgLyA0LCBzaXplIC8gMiwgc2l6ZSAvIDIpO1xyXG4gICAgfSxcclxuICAgIC8qMyAtIEhhcmRjb3JlKi9cclxuICAgIChzaXplKSA9PiB7XHJcbiAgICAgICAgY3R4Lmdsb2JhbEFscGhhICo9IDAuMztcclxuICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBcImJsYWNrXCI7XHJcbiAgICAgICAgY3R4LmxpbmVXaWR0aCA9IHNpemUgKiAzIC8gNDA7XHJcbiAgICAgICAgY3R4LnN0cm9rZVJlY3Qoc2l6ZSAvIDYsIHNpemUgLyA2LCBzaXplICogNSAvIDEyLCBzaXplICogNSAvIDEyKTtcclxuICAgICAgICBjdHguc3Ryb2tlUmVjdChzaXplICogNSAvIDEyLCBzaXplICogNSAvIDEyLCBzaXplICogNSAvIDEyLCBzaXplICogNSAvIDEyKTtcclxuICAgIH0sXHJcbiAgICAvKjQgLSBFeGhhdXN0aW5nKi9cclxuICAgIChzaXplKSA9PiB7XHJcbiAgICAgICAgY3R4Lmdsb2JhbEFscGhhICo9IDAuMztcclxuICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBcImJsYWNrXCI7XHJcbiAgICAgICAgY3R4LmxpbmVXaWR0aCA9IHNpemUgKiAzIC8gNDA7XHJcblxyXG4gICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiA1IC8gMjQsIHNpemUgKiAxMiAvIDI0KTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiAxMiAvIDI0LCBzaXplICogMTkgLyAyNCk7XHJcbiAgICAgICAgY3R4LmxpbmVUbyhzaXplICogMTkgLyAyNCwgc2l6ZSAqIDEyIC8gMjQpO1xyXG4gICAgICAgIGN0eC5saW5lVG8oc2l6ZSAqIDEyIC8gMjQsIHNpemUgKiA1IC8gMjQpO1xyXG4gICAgICAgIGN0eC5saW5lVG8oc2l6ZSAqIDUgLyAyNCwgc2l6ZSAqIDEyIC8gMjQpO1xyXG4gICAgICAgIGN0eC5zdHJva2UoKTtcclxuICAgICAgICBjdHguY2xvc2VQYXRoKCk7XHJcbiAgICB9LFxyXG4gICAgLyo1IC0gUmVsZW50bGVzcyovXHJcbiAgICAoc2l6ZSkgPT4ge1xyXG4gICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IFwiIzk5MWQ1ZFwiO1xyXG4gICAgICAgIGN0eC5saW5lV2lkdGggPSBzaXplICogMyAvIDQwO1xyXG4gICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiAxIC8gNiwgc2l6ZSAqIDMgLyA2KTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiAzIC8gNiwgc2l6ZSAqIDUgLyA2KTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiA1IC8gNiwgc2l6ZSAqIDMgLyA2KTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiAzIC8gNiwgc2l6ZSAqIDEgLyA2KTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiAxIC8gNiwgc2l6ZSAqIDMgLyA2KTtcclxuICAgICAgICBjdHguc3Ryb2tlKCk7XHJcbiAgICAgICAgY3R4LmNsb3NlUGF0aCgpO1xyXG5cclxuICAgICAgICBjdHguc3Ryb2tlUmVjdChzaXplICogNSAvIDI0LCBzaXplICogNSAvIDI0LCBzaXplICogMTQgLyAyNCwgc2l6ZSAqIDE0IC8gMjQpO1xyXG4gICAgfSxcclxuICAgIC8qNiAtIEFnb25pemluZyovXHJcbiAgICAoc2l6ZSkgPT4ge1xyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSBcIiNkOTRhMmVcIjtcclxuICAgICAgICBjdHguZmlsbFJlY3QoMCwgc2l6ZSAqIDgwIC8gMTIwLCBzaXplICogMTIwIC8gMTIwLCBzaXplICogNDAgLyAxMjApO1xyXG4gICAgICAgIGN0eC5maWxsUmVjdChzaXplICogNDAgLyAxMjAsIHNpemUgKiA2MCAvIDEyMCwgc2l6ZSAqIDQwIC8gMTIwLCBzaXplICogMjAgLyAxMjApO1xyXG4gICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICBjdHgubGluZVRvKDAsIHNpemUgKiA4MCAvIDEyMCk7XHJcbiAgICAgICAgY3R4LmxpbmVUbyhzaXplICogMjAgLyAxMjAsIHNpemUgKiA0MCAvIDEyMCk7XHJcbiAgICAgICAgY3R4LmxpbmVUbyhzaXplICogNDAgLyAxMjAsIHNpemUgKiA4MCAvIDEyMCk7XHJcbiAgICAgICAgY3R4LmZpbGwoKTtcclxuICAgICAgICBjdHguY2xvc2VQYXRoKCk7XHJcblxyXG4gICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiA0MCAvIDEyMCwgc2l6ZSAqIDYwIC8gMTIwKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiA2MCAvIDEyMCwgc2l6ZSAqIDIwIC8gMTIwKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiA4MCAvIDEyMCwgc2l6ZSAqIDYwIC8gMTIwKTtcclxuICAgICAgICBjdHguZmlsbCgpO1xyXG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuXHJcbiAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgIGN0eC5saW5lVG8oc2l6ZSAqIDgwIC8gMTIwLCBzaXplICogODAgLyAxMjApO1xyXG4gICAgICAgIGN0eC5saW5lVG8oc2l6ZSAqIDEwMCAvIDEyMCwgc2l6ZSAqIDQwIC8gMTIwKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiAxMjAgLyAxMjAsIHNpemUgKiA4MCAvIDEyMCk7XHJcbiAgICAgICAgY3R4LmZpbGwoKTtcclxuICAgICAgICBjdHguY2xvc2VQYXRoKCk7XHJcbiAgICB9LFxyXG4gICAgLyo3IC0gVGVycm9yaXppbmcqL1xyXG4gICAgKHNpemUpID0+IHtcclxuICAgICAgICBjdHguZmlsbFN0eWxlID0gXCIjZDYzMTMxXCI7XHJcblxyXG4gICAgICAgIGN0eC5maWxsUmVjdChzaXplICogNDAgLyAxMjAsIDAsIHNpemUgKiA0MCAvIDEyMCwgc2l6ZSAqIDIwIC8gMTIwKTtcclxuICAgICAgICBjdHguZmlsbFJlY3Qoc2l6ZSAqIDQwIC8gMTIwLCBzaXplICogMTAwIC8gMTIwLCBzaXplICogNDAgLyAxMjAsIHNpemUgKiAyMCAvIDEyMCk7XHJcblxyXG4gICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICBjdHgubGluZVRvKDAsIHNpemUgKiAxMjAgLyAxMjApO1xyXG4gICAgICAgIGN0eC5saW5lVG8oc2l6ZSAqIDIwIC8gMTIwLCBzaXplICogODAgLyAxMjApO1xyXG4gICAgICAgIGN0eC5saW5lVG8oc2l6ZSAqIDQwIC8gMTIwLCBzaXplICogMTIwIC8gMTIwKTtcclxuICAgICAgICBjdHguZmlsbCgpO1xyXG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuXHJcbiAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgIGN0eC5saW5lVG8oc2l6ZSAqIDQwIC8gMTIwLCBzaXplICogMTAwIC8gMTIwKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiA2MCAvIDEyMCwgc2l6ZSAqIDYwIC8gMTIwKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiA4MCAvIDEyMCwgc2l6ZSAqIDEwMCAvIDEyMCk7XHJcbiAgICAgICAgY3R4LmZpbGwoKTtcclxuICAgICAgICBjdHguY2xvc2VQYXRoKCk7XHJcblxyXG4gICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiA4MCAvIDEyMCwgc2l6ZSAqIDEyMCAvIDEyMCk7XHJcbiAgICAgICAgY3R4LmxpbmVUbyhzaXplICogMTAwIC8gMTIwLCBzaXplICogODAgLyAxMjApO1xyXG4gICAgICAgIGN0eC5saW5lVG8oc2l6ZSAqIDEyMCAvIDEyMCwgc2l6ZSAqIDEyMCAvIDEyMCk7XHJcbiAgICAgICAgY3R4LmZpbGwoKTtcclxuICAgICAgICBjdHguY2xvc2VQYXRoKCk7XHJcbiAgICBcclxuICAgICAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgY3R4LmxpbmVUbygwLCAwKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiAyMCAvIDEyMCwgc2l6ZSAqIDQwIC8gMTIwKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiA0MCAvIDEyMCwgMCk7XHJcbiAgICAgICAgY3R4LmZpbGwoKTtcclxuICAgICAgICBjdHguY2xvc2VQYXRoKCk7XHJcblxyXG4gICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiA0MCAvIDEyMCwgc2l6ZSAqIDIwIC8gMTIwKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiA2MCAvIDEyMCwgc2l6ZSAqIDYwIC8gMTIwKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiA4MCAvIDEyMCwgc2l6ZSAqIDIwIC8gMTIwKTtcclxuICAgICAgICBjdHguZmlsbCgpO1xyXG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuXHJcbiAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgIGN0eC5saW5lVG8oc2l6ZSAqIDgwIC8gMTIwLCAwKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiAxMDAgLyAxMjAsIHNpemUgKiA0MCAvIDEyMCk7XHJcbiAgICAgICAgY3R4LmxpbmVUbyhzaXplICogMTIwIC8gMTIwLCAwKTtcclxuICAgICAgICBjdHguZmlsbCgpO1xyXG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuICAgIH0sXHJcbiAgICAvKjggLSBDYXRhY2x5c21pYyovXHJcbiAgICAoc2l6ZSkgPT4ge1xyXG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSBcIiM4YzQxNDFcIjtcclxuXHJcbiAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgIGN0eC5saW5lVG8oMCwgMCk7XHJcbiAgICAgICAgY3R4LmxpbmVUbyhzaXplICogNDAgLyAxMjAsIDApO1xyXG4gICAgICAgIGN0eC5saW5lVG8oMCwgc2l6ZSAqIDQwIC8gMTIwKTtcclxuICAgICAgICBjdHguZmlsbCgpO1xyXG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuXHJcbiAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgIGN0eC5saW5lVG8oc2l6ZSAqIDQwIC8gMTIwLCAwKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiA2MCAvIDEyMCwgc2l6ZSAqIDIwIC8gMTIwKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiA4MCAvIDEyMCwgMCk7XHJcbiAgICAgICAgY3R4LmZpbGwoKTtcclxuICAgICAgICBjdHguY2xvc2VQYXRoKCk7XHJcblxyXG4gICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiAxMjAgLyAxMjAsIDApO1xyXG4gICAgICAgIGN0eC5saW5lVG8oc2l6ZSAqIDgwIC8gMTIwLCAwKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiAxMjAgLyAxMjAsIHNpemUgKiA0MCAvIDEyMCk7XHJcbiAgICAgICAgY3R4LmZpbGwoKTtcclxuICAgICAgICBjdHguY2xvc2VQYXRoKCk7XHJcblxyXG4gICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiAxMjAgLyAxMjAsIHNpemUgKiA0MCAvIDEyMCk7XHJcbiAgICAgICAgY3R4LmxpbmVUbyhzaXplICogMTAwIC8gMTIwLCBzaXplICogNjAgLyAxMjApO1xyXG4gICAgICAgIGN0eC5saW5lVG8oc2l6ZSAqIDEyMCAvIDEyMCwgc2l6ZSAqIDgwIC8gMTIwKTtcclxuICAgICAgICBjdHguZmlsbCgpO1xyXG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuXHJcbiAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgIGN0eC5saW5lVG8oc2l6ZSAqIDEyMCAvIDEyMCwgc2l6ZSAqIDEyMCAvIDEyMCk7XHJcbiAgICAgICAgY3R4LmxpbmVUbyhzaXplICogODAgLyAxMjAsIHNpemUgKiAxMjAgLyAxMjApO1xyXG4gICAgICAgIGN0eC5saW5lVG8oc2l6ZSAqIDEyMCAvIDEyMCwgc2l6ZSAqIDgwIC8gMTIwKTtcclxuICAgICAgICBjdHguZmlsbCgpO1xyXG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuXHJcbiAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgIGN0eC5saW5lVG8oc2l6ZSAqIDQwIC8gMTIwLCBzaXplICogMTIwIC8gMTIwKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiA2MCAvIDEyMCwgc2l6ZSAqIDEwMCAvIDEyMCk7XHJcbiAgICAgICAgY3R4LmxpbmVUbyhzaXplICogODAgLyAxMjAsIHNpemUgKiAxMjAgLyAxMjApO1xyXG4gICAgICAgIGN0eC5maWxsKCk7XHJcbiAgICAgICAgY3R4LmNsb3NlUGF0aCgpO1xyXG5cclxuICAgICAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgY3R4LmxpbmVUbygwLCBzaXplICogMTIwIC8gMTIwKTtcclxuICAgICAgICBjdHgubGluZVRvKHNpemUgKiA0MCAvIDEyMCwgc2l6ZSAqIDEyMCAvIDEyMCk7XHJcbiAgICAgICAgY3R4LmxpbmVUbygwLCBzaXplICogODAgLyAxMjApO1xyXG4gICAgICAgIGN0eC5maWxsKCk7XHJcbiAgICAgICAgY3R4LmNsb3NlUGF0aCgpO1xyXG5cclxuICAgICAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgY3R4LmxpbmVUbygwLCBzaXplICogODAgLyAxMjApO1xyXG4gICAgICAgIGN0eC5saW5lVG8oc2l6ZSAqIDIwIC8gMTIwLCBzaXplICogNjAgLyAxMjApO1xyXG4gICAgICAgIGN0eC5saW5lVG8oMCwgc2l6ZSAqIDQwIC8gMTIwKTtcclxuICAgICAgICBjdHguZmlsbCgpO1xyXG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuICAgIH0sXHJcbl07XHJcblxyXG4vLyBhbiBvYnN0YWNsZSBpcyBhbiBFQ1NcclxuY29uc3Qgb2JzdGFjbGVzID0gd2luZG93Lm9ic3RhY2xlcyA9IFtdO1xyXG5cclxud2luZG93LnNwYXduUG9zaXRpb24gPSB7eDogMTAwLCB5OiAxNTAwfTtcclxuLy8gYSBwbGF5ZXIgaXMgYWxzbyBhbiBlY3Ncclxud2luZG93LmNyZWF0ZVBsYXllciA9ICgpID0+IHtcclxuICAgIGNyZWF0ZSgwLypjaXJjbGUqLywgW10sIFtdLCAvKm5vIHNpbXVsYXRlLyBlZmZlY3RzKi8ge3g6IHdpbmRvdy5zcGF3blBvc2l0aW9uLngsIHk6IHdpbmRvdy5zcGF3blBvc2l0aW9uLnksIHI6IC8qMjQuNSovNDkuNX0pXHJcbiAgICBjb25zdCBwbGF5ZXIgPSBvYnN0YWNsZXMucG9wKCk7XHJcbiAgICBwbGF5ZXIuYXhpc1NwZWVkTXVsdFggPSBwbGF5ZXIuYXhpc1NwZWVkTXVsdFkgPSAxO1xyXG4gICAgcGxheWVyLnRvdWNoaW5nTm9ybWFsSW5kZXhlcyA9IFtdO1xyXG4gICAgcGxheWVyLmxhc3RUb3VjaGluZ05vcm1hbEluZGV4ZXMgPSBbXTtcclxuICAgIHBsYXllci5yZW5kZXJSYWRpdXMgPSBwbGF5ZXIubGFzdEFsaXZlUmFkaXVzID0gcGxheWVyLnNhdC5yO1xyXG4gICAgcGxheWVyLnh2ID0gcGxheWVyLnl2ID0gcGxheWVyLnhhID0gcGxheWVyLnlhID0gMDtcclxuICAgIHBsYXllci5zcGVlZCA9IHBsYXllci5iYXNlU3BlZWQgPSA3LjE2NztcclxuICAgIHBsYXllci5kZWFkID0gZmFsc2U7XHJcbiAgICBwbGF5ZXIub25TYWZlID0gZmFsc2U7XHJcbiAgICBwbGF5ZXIudG91Y2hpbmdXYWxsID0gZmFsc2U7XHJcbiAgICBwbGF5ZXIuc3RvcEZvcmNlcyA9IGZhbHNlO1xyXG4gICAgcGxheWVyLmZvcmNlcyA9IFtdO1xyXG4gICAgcGxheWVyLmlkID0gdW5kZWZpbmVkO1xyXG4gICAgcGxheWVyLmRldiA9IHRydWU7IC8qZGV2IG9ubHkgZm9yIHBsYXllcnNbc2VsZklkXSovIHBsYXllci5nb2QgPSBmYWxzZTtcclxuICAgIHBsYXllci5mcmljdGlvbiA9IDAuNDtcclxuICAgIHBsYXllci5zaGlwID0gZmFsc2U7IHBsYXllci5zaGlwQW5nbGUgPSAwOyBwbGF5ZXIuc2hpcFR1cm5TcGVlZCA9IE1hdGguUEkgLyAxMDA7XHJcbiAgICBwbGF5ZXIuZGVhdGhUaW1lID0gMDsgcGxheWVyLmRlYXRoVGltZXIgPSBmYWxzZTtcclxuICAgIHBsYXllci5ncmFwcGxlWCA9IC0xOyBwbGF5ZXIuZ3JhcHBsZVkgPSAtMTsgcGxheWVyLmdyYXBwbGUgPSBmYWxzZTtcclxuICAgIHBsYXllci5ncmFwcGxlUmFuZ2UgPSA0ODg7IHBsYXllci5ncmFwcGxlRm9yY2UgPSAwLjAxOyBwbGF5ZXIuZ3JhcHBsZUZyaWMgPSAwLjQxNDtcclxuICAgIHBsYXllci50aW1lVHJhcE92ZXJyaWRlU2FmZSA9IGZhbHNlO1xyXG4gICAgcmV0dXJuIHBsYXllcjtcclxufVxyXG5cclxud2luZG93LnBsYXllcnMgPSBbXTtcclxuXHJcbmlmKHdpbmRvdy5pc0V4Q2xpZW50ICE9PSB0cnVlKSB7d2luZG93LnBsYXllcnMucHVzaCh3aW5kb3cuY3JlYXRlUGxheWVyKCkpOyB3aW5kb3cuc2VsZklkID0gMDsgd2luZG93Lm1hcERpbWVuc2lvbnMgPSBlbnZpcm9ubWVudCA9PT0gJ3NlcnZlcicgPyB7eDoyMDAwLHk6MjAwMH0gOiB7eDo5MDAseToxNjAwfX1cclxuaWYod2luZG93LmlzRXhDbGllbnQgPT09IHRydWUgfHwgZW52aXJvbm1lbnQgPT09ICdzZXJ2ZXInKSB3aW5kb3cubWFwRGltZW5zaW9ucyA9IHt4OiAyMDAwLCB5OiAyMDAwfTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHNpbXVsYXRlOyIsIndpbmRvdy5tb3VzZSA9IHtcclxuICAgIHNjcmVlbjoge1xyXG4gICAgICAgIHg6IC0xLFxyXG4gICAgICAgIHk6IC0xXHJcbiAgICB9LFxyXG4gICAgd29ybGQ6IHtcclxuICAgICAgICB4OiAtMSxcclxuICAgICAgICB5OiAtMVxyXG4gICAgfVxyXG59XHJcblxyXG53aW5kb3cubW91c2VYID0gLTE7XHJcbndpbmRvdy5tb3VzZVkgPSAtMTtcclxud2luZG93LnNjcm9sbExvY2tlZCA9IGZhbHNlO1xyXG53aW5kb3cubW91c2VEb3duRnVuY3Rpb25zID0gW107XHJcbndpbmRvdy5tb3VzZU1vdmVGdW5jdGlvbnMgPSBbXTtcclxud2luZG93Lm1vdXNlVXBGdW5jdGlvbnMgPSBbXTtcclxud2luZG93Lm1vdXNlT3V0ID0gZmFsc2U7XHJcbndpbmRvdy5wYWdlWCA9IC0xO1xyXG53aW5kb3cucGFnZVkgPSAtMTtcclxuXHJcbndpbmRvdy5kcmFnZ2luZyA9IGZhbHNlO1xyXG5cclxud2luZG93Lm9ubW91c2Vkb3duID0gKGUpID0+IHt9XHJcblxyXG53aW5kb3cub25tb3VzZW1vdmUgPSAoZSkgPT4ge31cclxuXHJcbndpbmRvdy5vbm1vdXNldXAgPSAoKSA9PiB7fVxyXG5cclxud2luZG93Lm9uY29udGV4dG1lbnUgPSAoZSkgPT4geyByZXR1cm4gZS5wcmV2ZW50RGVmYXVsdCgpOyB9O1xyXG5cclxuY29uc3QgQ29udHJvbHMgPSB7XHJcbiAgICBLZXlXOiAndXAnLFxyXG4gICAgS2V5UzogJ2Rvd24nLFxyXG4gICAgS2V5QTogJ2xlZnQnLFxyXG4gICAgS2V5RDogJ3JpZ2h0JyxcclxuICAgIEFycm93VXA6ICd1cCcsXHJcbiAgICBBcnJvd0Rvd246ICdkb3duJyxcclxuICAgIEFycm93TGVmdDogJ2xlZnQnLFxyXG4gICAgQXJyb3dSaWdodDogJ3JpZ2h0JyxcclxuICAgIFNoaWZ0TGVmdDogJ3NoaWZ0JyxcclxuICAgIFNoaWZ0UmlnaHQ6ICdzaGlmdCcsXHJcbiAgICBLZXlDOiAnYWN0aW9uMScsXHJcbiAgICBLZXlKOiAnYWN0aW9uMScsXHJcbiAgICBLZXlZOiAnYWN0aW9uMSdcclxufTtcclxuXHJcbndpbmRvdy5pbnB1dCA9IHtcclxuICAgIHVwOiBmYWxzZSxcclxuICAgIGRvd246IGZhbHNlLFxyXG4gICAgbGVmdDogZmFsc2UsXHJcbiAgICByaWdodDogZmFsc2UsXHJcbiAgICBzaGlmdDogZmFsc2UsXHJcbiAgICBhY3Rpb24xOiBmYWxzZSwvLyBncmFwcGxlXHJcbn07XHJcblxyXG5sZXQgY2hhdE9wZW4gPSBmYWxzZSwgemVuTW9kZSA9IGZhbHNlO1xyXG53aW5kb3cub25rZXlkb3duID0gaGFuZGxlS2V5O1xyXG53aW5kb3cub25rZXl1cCA9IGhhbmRsZUtleTtcclxuXHJcbmltcG9ydCBVdGlscyBmcm9tICcuLi9jbGllbnQvdXRpbHMuanMnO1xyXG5jb25zdCB7ZW5jb2RlQXRQb3NpdGlvbn0gPSBVdGlscztcclxuXHJcbmNvbnN0IGNoYXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2hhdCcpO1xyXG5jb25zdCBjaGF0RGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNoYXREaXYnKTtcclxuY29uc3QgdmlzQ2hhdERpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jaGF0LWRpdicpO1xyXG5cclxuZnVuY3Rpb24gaGFuZGxlS2V5KGUpe1xyXG4gICAgaWYoY2hhdE9wZW4gPT09IHRydWUpe1xyXG4gICAgICAgIGlmKGUudHlwZSA9PT0gJ2tleWRvd24nICYmIGUuY29kZSA9PT0gJ0VudGVyJyl7XHJcbiAgICAgICAgICAgIGxldCBtc2cgPSBjaGF0LnZhbHVlLnRyaW0oKTtcclxuICAgICAgICAgICAgaWYobXNnID09PSAnL3Jlc2V0Jyl7XHJcbiAgICAgICAgICAgICAgICB3aW5kb3cuY2hhbmdlTWFwKCcvbWFwcy9odWInKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmKG1zZy5zbGljZSgwLDYpID09PSAnL3RwbWFwJyl7XHJcbiAgICAgICAgICAgICAgICB3aW5kb3cuY2hhbmdlTWFwKGAvbWFwcy9gICsgbXNnLnNsaWNlKDcpLnRvTG93ZXJDYXNlKCkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYobXNnLnNsaWNlKDAsNikgPT09ICcvc2NhbGUnKXtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG51bSA9IHBhcnNlRmxvYXQobXNnLnNsaWNlKDcpKTtcclxuICAgICAgICAgICAgICAgIGNoYW5nZUNhbWVyYVNjYWxlKG51bSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZihtc2cuc2xpY2UoMCw0KSA9PT0gJy9tYXAnKXtcclxuICAgICAgICAgICAgICAgIHdpbmRvdy5pbml0SW1wb3J0TWFwKG1zZy5zbGljZSg1KSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gVEVNUCBQTEVBU0UgUkVNT1ZFXHJcbiAgICAgICAgICAgIGVsc2UgaWYod2luZG93LnpvbmVzICE9PSB1bmRlZmluZWQgJiYgbXNnLnNsaWNlKDAsNykudG9Mb3dlckNhc2UoKSA9PT0gJy90cHpvbmUnKXtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG51bSA9IHBhcnNlSW50KG1zZy5zbGljZSg4KSk7XHJcbiAgICAgICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgd2luZG93LnpvbmVzLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgICAgICAgICBpZih3aW5kb3cuem9uZXNbaV0uem9uZSA9PT0gbnVtKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LnBsYXllcnNbd2luZG93LnNlbGZJZF0ucG9zLnggPSB3aW5kb3cuem9uZXNbaV0ueDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LnBsYXllcnNbd2luZG93LnNlbGZJZF0ucG9zLnkgPSB3aW5kb3cuem9uZXNbaV0ueTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYobXNnLmxlbmd0aCAhPT0gMCl7XHJcbiAgICAgICAgICAgICAgICBtc2cgPSB3aW5kb3cudXNlcm5hbWUgKyAnOiAnICsgbXNnO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgYnVmID0gbmV3IFVpbnQ4QXJyYXkobXNnLmxlbmd0aCArIDIpO1xyXG4gICAgICAgICAgICAgICAgYnVmWzBdID0gNzsvLyB0eXBlIDAgLSBzZXQgdXNlcm5hbWUgYW5kIGpvaW4gZ2FtZVxyXG4gICAgICAgICAgICAgICAgLy8gWydub3JtYWwnLCAnc3lzdGVtJywgJ2RldicsICdndWVzdCddXHJcbiAgICAgICAgICAgICAgICBpZih3aW5kb3cucGxheWVyc1t3aW5kb3cuc2VsZklkXS5kZXYgPT09IHRydWUpIGJ1ZlsxXSA9IDI7XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmKHdpbmRvdy5wbGF5ZXJzW3dpbmRvdy5zZWxmSWRdLmd1ZXN0ID09PSB0cnVlKSBidWZbMV0gPSAzOyBcclxuICAgICAgICAgICAgICAgIGVuY29kZUF0UG9zaXRpb24obXNnLCBidWYsIDIpO1xyXG4gICAgICAgICAgICAgICAgc2VuZChidWYpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNoYXQudmFsdWUgPSAnJztcclxuICAgICAgICAgICAgY2hhdC5ibHVyKCk7XHJcbiAgICAgICAgICAgIGNoYXREaXYuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgIGNoYXRPcGVuID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIFRPRE9cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaWYgKGUucmVwZWF0KSByZXR1cm4gZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgICAgICBpZihlLnR5cGUgPT09ICdrZXlkb3duJyl7XHJcbiAgICAgICAgICAgIGlmKGUuY29kZSA9PT0gJ0tleU8nICYmIHdpbmRvdy5wbGF5ZXJzW3dpbmRvdy5zZWxmSWRdLmRldiA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgICAgICB3aW5kb3cucGxheWVyc1t3aW5kb3cuc2VsZklkXS5nb2QgPSAhd2luZG93LnBsYXllcnNbd2luZG93LnNlbGZJZF0uZ29kO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgYnVmID0gbmV3IFVpbnQ4QXJyYXkoMik7XHJcbiAgICAgICAgICAgICAgICBidWZbMF0gPSA4O1xyXG4gICAgICAgICAgICAgICAgYnVmWzFdID0gd2luZG93LnBsYXllcnNbd2luZG93LnNlbGZJZF0uZ29kO1xyXG4gICAgICAgICAgICAgICAgc2VuZChidWYpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmKGUuY29kZSA9PT0gJ0tleVInICYmIHdpbmRvdy5wbGF5ZXJzW3dpbmRvdy5zZWxmSWRdLmRlYWQgPT09IHRydWUpe1xyXG4gICAgICAgICAgICAgICAgd2luZG93LnJlc3Bhd25QbGF5ZXIoKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmKGUuY29kZSA9PT0gJ0VudGVyJyl7XHJcbiAgICAgICAgICAgICAgICBjaGF0T3BlbiA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBjaGF0RGl2LmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICAgICAgY2hhdC5mb2N1cygpO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGUuY29kZSA9PT0gJ0tleVonKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXplbk1vZGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBjaGF0LmJsdXIoKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIXZpc0NoYXREaXYuY2xhc3NMaXN0LmNvbnRhaW5zKCdoaWRkZW4nKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2aXNDaGF0RGl2LmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAvLyBpZiAoIXJlZi5sYi5jbGFzc0xpc3QuY29udGFpbnMoJ2hpZGUnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICByZWYubGIuY2xhc3NMaXN0LmFkZCgnaGlkZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZpc0NoYXREaXYuY2xhc3NMaXN0LmNvbnRhaW5zKCdoaWRkZW4nKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2aXNDaGF0RGl2LmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2aXNDaGF0RGl2LnNjcm9sbFRvcCA9IHZpc0NoYXREaXYuc2Nyb2xsSGVpZ2h0O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAvLyBpZiAocmVmLmxiLmNsYXNzTGlzdC5jb250YWlucygnaGlkZScpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIHJlZi5sYi5jbGFzc0xpc3QucmVtb3ZlKCdoaWRlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgemVuTW9kZSA9ICF6ZW5Nb2RlO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGUuY29kZSA9PT0gJ0tleVUnKXtcclxuICAgICAgICAgICAgICAgIHdpbmRvdy5yZW5kZXJEZWJ1ZyA9ICF3aW5kb3cucmVuZGVyRGVidWc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChDb250cm9sc1tlLmNvZGVdICE9IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICB3aW5kb3cuaW5wdXRbQ29udHJvbHNbZS5jb2RlXV0gPSBlLnR5cGUgPT09ICdrZXlkb3duJztcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxubGV0IGltcG9ydE1hcEZuO1xyXG53aW5kb3cuaW5pdEltcG9ydE1hcCA9IGFzeW5jIChzdHIpID0+IHtcclxuICAgIGlmKGltcG9ydE1hcEZuID09PSB1bmRlZmluZWQpIGltcG9ydE1hcEZuID0gKGF3YWl0IGltcG9ydCgnLi9leHRyYXMvaW1wb3J0TWFwLmpzJykpLmRlZmF1bHQ7XHJcbiAgICBpbXBvcnRNYXBGbihzdHIpO1xyXG59IiwiaW1wb3J0IFV0aWxzIGZyb20gJy4vdXRpbHMuanMnO1xyXG5jb25zdCB7IHVudGlsIH0gPSBVdGlscztcclxuXHJcbndpbmRvdy5oYXNMb2FkZWROZXdNdXNpYyA9IGZhbHNlO1xyXG5sZXQgbGFzdExvYWRlZExpbms7XHJcbmxldCBhdWRpb0lmcmFtZTtcclxubGV0IGxhc3RQbGF5VGltZSA9IDA7XHJcblxyXG4vLyBUT0RPOiBvcHRpbWl6ZT8gXCJzdWJcIiB0aW1lIHRha2VzIGFib3V0IDFtcywgc28gd2UgY291bGQgb3B0aW1pemUgYnkgc3RhdGljYWxseSBjcmVhdGluZyBhbiBlbGVtZW50XHJcbndpbmRvdy5zdG9wTXVzaWMgPSBhc3luYyAodG9Bd2FpdD1mYWxzZSkgPT4ge1xyXG4gICAgaWYodG9Bd2FpdCA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgbGV0IHJldHVybkJpZyA9IGZhbHNlO1xyXG4gICAgICAgIGxldCBjYWxsVGltZSA9IERhdGUubm93KCk7XHJcbiAgICAgICAgYXdhaXQgdW50aWwoKCkgPT4ge1xyXG4gICAgICAgICAgICBpZihhdWRpb0lmcmFtZSA9PT0gdW5kZWZpbmVkKSByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIC8vIHdlIG9ubHkgd2FudCB0byBzdG9wIG11c2ljIGlmIHdlIHBsYXllZCBpdCBiZWZvcmUgdGhpcyBmbiBpcyBjYWxsZWRcclxuICAgICAgICAgICAgaWYobGFzdFBsYXlUaW1lID4gY2FsbFRpbWUpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuQmlnID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBpZihyZXR1cm5CaWcgPT09IHRydWUpIHJldHVybjsgXHJcbiAgICB9IGVsc2UgaWYoYXVkaW9JZnJhbWUgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBhdWRpb0lmcmFtZS5yZW1vdmUoKTtcclxuICAgIGF1ZGlvSWZyYW1lID0gdW5kZWZpbmVkO1xyXG4gICAgbGFzdExvYWRlZExpbmsgPSB1bmRlZmluZWQ7XHJcbn1cclxuXHJcbndpbmRvdy5wbGF5TXVzaWMgPSBhc3luYyAobGluaywgc3RhcnRUaW1lPTApID0+IHtcclxuICAgIHdpbmRvdy5oYXNMb2FkZWROZXdNdXNpYyA9IHRydWU7XHJcblxyXG4gICAgYXdhaXQgdW50aWwoKCkgPT4ge3JldHVybiBuYXZpZ2F0b3IudXNlckFjdGl2YXRpb24uaGFzQmVlbkFjdGl2ZSA9PT0gdHJ1ZX0pO1xyXG4gICAgaWYobGluayA9PT0gbGFzdExvYWRlZExpbmspIHJldHVybjtcclxuXHJcbiAgICBzdG9wTXVzaWMoKTtcclxuICAgIGxhc3RMb2FkZWRMaW5rID0gbGluaztcclxuXHJcbiAgICBcclxuICAgIGF1ZGlvSWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XHJcbiAgICBhdWRpb0lmcmFtZS5mcmFtZWJvcmRlciA9IFwiMFwiO1xyXG4gICAgYXVkaW9JZnJhbWUuc2V0QXR0cmlidXRlKFwiZnJhbWVCb3JkZXJcIiwgXCIwXCIpO1xyXG4gICAgYXVkaW9JZnJhbWUud2lkdGggPSAwO1xyXG4gICAgYXVkaW9JZnJhbWUuaGVpZ2h0ID0gMDtcclxuICAgIFxyXG4gICAgY29uc3QgdmlkZW9JZCA9IGxpbmsuc3BsaXQoJz92PScpWzFdO1xyXG4gICAgYXVkaW9JZnJhbWUuc3JjID0gYGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkLyR7dmlkZW9JZH0/YXV0b3BsYXk9MSZsb29wPTEmcGxheWxpc3Q9JHt2aWRlb0lkfSZlbmFibGVqc2FwaT0xJHtzdGFydFRpbWUgPT09IDAgPyAnJyA6IFwiJnN0YXJ0PVwiICsgc3RhcnRUaW1lfWA7XHJcbiAgICBcclxuICAgIGF1ZGlvSWZyYW1lLmFsbG93ID0gXCJhdXRvcGxheVwiO1xyXG4gICAgYXVkaW9JZnJhbWUuc2VjdXJpdHkgPSBcInJlc3RyaWN0ZWRcIjtcclxuXHJcbiAgICBhdWRpb0lmcmFtZS5zdHlsZS5wb3NpdGlvbiA9IFwiZml4ZWRcIjtcclxuICAgIGF1ZGlvSWZyYW1lLmNsYXNzTGlzdC5hZGQoJ3l0Jyk7XHJcbiAgICBhdWRpb0lmcmFtZS5pZCA9IHZpZGVvSWQ7XHJcblxyXG4gICAgLy8gdGhpcyBpcyBhYm91dCAxbXMuLi5cclxuICAgIC8vIGNvbnNvbGUudGltZShcInN1YlwiKTtcclxuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYXVkaW9JZnJhbWUpO1xyXG4gICAgLy8gY29uc29sZS50aW1lRW5kKFwic3ViXCIpO1xyXG5cclxuICAgIGxhc3RQbGF5VGltZSA9IERhdGUubm93KCk7XHJcbn1cclxuXHJcbndpbmRvdy5wbGF5TXVzaWNJbmRlZmluaXRlbHkgPSBhc3luYyAobGluaykgPT4ge1xyXG4gICAgbGFzdExvYWRlZExpbmsgPSB1bmRlZmluZWQ7XHJcbiAgICBhd2FpdCB3aW5kb3cucGxheU11c2ljKGxpbmspO1xyXG4gICAgYXVkaW9JZnJhbWUgPSB1bmRlZmluZWQ7XHJcbn1cclxuXHJcbndpbmRvdy5yZWxvYWRNdXNpYyA9ICgpID0+IHtcclxuICAgIGxldCBsaW5rVG9QbGF5ID0gbGFzdExvYWRlZExpbms7XHJcbiAgICBsYXN0TG9hZGVkTGluayA9IHVuZGVmaW5lZDtcclxuICAgIHdpbmRvdy5wbGF5TXVzaWMobGlua1RvUGxheSk7XHJcbn0iLCJ3aW5kb3cuaXNFeENsaWVudCA9IHRydWU7XHJcbmltcG9ydCAnLi9zdHlsZS5jc3MnO1xyXG5cclxuLy8gaW5pdCByZW5kZXJpbmdcclxuaW1wb3J0ICcuL3JlbmRlci5qcyc7XHJcblxyXG4vLyBoYW5kbGUgY2xpZW50LXNlcnZlciBjb21tdW5pY2F0aW9uXHJcbmltcG9ydCAnLi9uZXR3b3JraW5nLmpzJztcclxuXHJcbi8vIGdhbWUgc3R1ZmZcclxuaW1wb3J0IHNpbXVsYXRlIGZyb20gJy4uL2NsaWVudC9jb21wb25lbnRzLmpzJztcclxuXHJcbi8vIGtleWJvYXJkIGlucHV0XHJcbmltcG9ydCAnLi9pbnB1dC5qcyc7XHJcblxyXG4vLyBiYWNrZ3JvdW5kIG11c2ljXHJcbmltcG9ydCAnLi4vY2xpZW50L3NvdW5kLmpzJztcclxuXHJcbi8vIG1hcE5hbWUgdG8gZGlmZmljdWx0eSBkaWN0XHJcbmltcG9ydCAnLi4vZVhzZXJ2ZXIvbWFwcy9fbWV0YWRhdGEuanMnO1xyXG5cclxuLy8gam9pbmluZyBnYW1lXHJcbmNvbnN0IGd1aSA9IHdpbmRvdy5ndWkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZ3VpJyk7XHJcbndpbmRvdy51c2VybmFtZSA9ICcnO1xyXG53aW5kb3cuYXV0aElkID0gLTE7XHJcblxyXG53aW5kb3cuc3RhcnRHYW1lID0gKCkgPT4ge1xyXG4gICAgZ3VpLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xyXG4gICAgbGFzdFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKTtcclxuICAgIHdpbmRvdy5yZXNwYXduUGxheWVyKCk7XHJcbiAgICBydW4oKTtcclxuICAgIGNvbnNvbGUubG9nKCdnYW1lIHN0YXJ0aW5nJyk7XHJcbn1cclxuXHJcbi8vIGdhbWVsb29wXHJcbmxldCBsYXN0VGltZSwgYWNjdW0sIG5vdztcclxubGFzdFRpbWUgPSBhY2N1bSA9IG5vdyA9IDA7XHJcbndpbmRvdy5mcmFtZXMgPSAwO1xyXG5jb25zdCBGUkFNRV9USU1FID0gMTAwMCAvIDYwO1xyXG5mdW5jdGlvbiBydW4oKXtcclxuICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShydW4pO1xyXG5cclxuICAgIG5vdyA9IHBlcmZvcm1hbmNlLm5vdygpO1xyXG4gICAgYWNjdW0gKz0gbm93IC0gbGFzdFRpbWU7XHJcbiAgICBsYXN0VGltZSA9IG5vdztcclxuXHJcbiAgICAvLyBUT0RPOiBHZXQgdGhlIG1hcCBmcm9tIGFub3RoZXIgcGxheWVyXHJcbiAgICBpZihhY2N1bSA+IDIwMDApIGFjY3VtID0gMDtcclxuXHJcbiAgICB3aGlsZShhY2N1bSA+PSAwKXtcclxuICAgICAgICBhY2N1bSAtPSBGUkFNRV9USU1FO1xyXG4gICAgICAgIHNpbXVsYXRlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgc2VuZFVwZGF0ZVBhY2soKTtcclxuICAgIHdpbmRvdy5yZW5kZXIoKTtcclxufVxyXG5cclxuY29uc3QgdTEyID0gbmV3IFVpbnQ4QXJyYXkoMTIpO1xyXG51MTJbMF0gPSA0Oy8vIHR5cGUgNCAtIHBsYXllciB4IGFuZCB5XHJcbmNvbnN0IGYxMiA9IG5ldyBGbG9hdDMyQXJyYXkodTEyLmJ1ZmZlcik7XHJcblxyXG5jb25zdCB1OCA9IG5ldyBVaW50OEFycmF5KDgpO1xyXG5jb25zdCBmOCA9IG5ldyBGbG9hdDMyQXJyYXkodTguYnVmZmVyKTtcclxuXHJcbndpbmRvdy51NCA9IG5ldyBVaW50OEFycmF5KDQpO1xyXG5cclxubGV0IGxhc3RTaGlwQW5nbGUgPSBJbmZpbml0eTtcclxubGV0IGxhc3REZWFkID0gZmFsc2U7XHJcbmZ1bmN0aW9uIHNlbmRVcGRhdGVQYWNrKCl7XHJcbiAgICBjb25zdCBwbGF5ZXIgPSB3aW5kb3cucGxheWVyc1t3aW5kb3cuc2VsZklkXTtcclxuICAgIGYxMlsxXSA9IHBsYXllci5wb3MueDtcclxuICAgIGYxMlsyXSA9IHBsYXllci5wb3MueTtcclxuICAgIHNlbmQodTEyKTtcclxuXHJcbiAgICBpZihwbGF5ZXIuZ3JhcHBsZSA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgdTEyWzBdID0gMTE7XHJcbiAgICAgICAgZjEyWzFdID0gcGxheWVyLmdyYXBwbGVYO1xyXG4gICAgICAgIGYxMlsyXSA9IHBsYXllci5ncmFwcGxlWTtcclxuICAgICAgICBzZW5kKHUxMik7XHJcbiAgICAgICAgdTEyWzBdID0gNDtcclxuICAgIH1cclxuXHJcbiAgICBpZihwbGF5ZXIuc2hpcCA9PT0gdHJ1ZSAmJiBsYXN0U2hpcEFuZ2xlICE9PSBwbGF5ZXIuc2hpcEFuZ2xlKXtcclxuICAgICAgICBsYXN0U2hpcEFuZ2xlID0gcGxheWVyLnNoaXBBbmdsZTtcclxuICAgICAgICB1OFswXSA9IDk7XHJcbiAgICAgICAgZjhbMV0gPSBwbGF5ZXIuc2hpcEFuZ2xlO1xyXG4gICAgICAgIHNlbmQodTgpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmKHBsYXllci5kZWF0aFRpbWVyID09PSB0cnVlKXtcclxuICAgICAgICB1OFswXSA9IDEzO1xyXG4gICAgICAgIGY4WzFdID0gcGxheWVyLmRlYXRoVGltZTtcclxuICAgICAgICBzZW5kKHU4KTtcclxuICAgIH1cclxuXHJcbiAgICBpZihwbGF5ZXIuZGVhZCAhPT0gbGFzdERlYWQpe1xyXG4gICAgICAgIGxhc3REZWFkID0gcGxheWVyLmRlYWQ7XHJcbiAgICAgICAgd2luZG93LnU0WzBdID0gMTU7XHJcbiAgICAgICAgd2luZG93LnU0WzFdID0gcGxheWVyLmRlYWQgPT09IHRydWUgPyAxIDogMDtcclxuICAgICAgICBzZW5kKHdpbmRvdy51NCk7XHJcbiAgICB9XHJcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///888\n")}},__webpack_module_cache__={},leafPrototypes,getProto,inProgress,dataWebpackPrefix;function __webpack_require__(g){var I=__webpack_module_cache__[g];if(void 0!==I)return I.exports;var n=__webpack_module_cache__[g]={id:g,exports:{}};return __webpack_modules__[g](n,n.exports,__webpack_require__),n.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.n=g=>{var I=g&&g.__esModule?()=>g.default:()=>g;return __webpack_require__.d(I,{a:I}),I},getProto=Object.getPrototypeOf?g=>Object.getPrototypeOf(g):g=>g.__proto__,__webpack_require__.t=function(g,I){if(1&I&&(g=this(g)),8&I)return g;if("object"==typeof g&&g){if(4&I&&g.__esModule)return g;if(16&I&&"function"==typeof g.then)return g}var n=Object.create(null);__webpack_require__.r(n);var c={};leafPrototypes=leafPrototypes||[null,getProto({}),getProto([]),getProto(getProto)];for(var e=2&I&&g;"object"==typeof e&&!~leafPrototypes.indexOf(e);e=getProto(e))Object.getOwnPropertyNames(e).forEach((I=>c[I]=()=>g[I]));return c.default=()=>g,__webpack_require__.d(n,c),n},__webpack_require__.d=(g,I)=>{for(var n in I)__webpack_require__.o(I,n)&&!__webpack_require__.o(g,n)&&Object.defineProperty(g,n,{enumerable:!0,get:I[n]})},__webpack_require__.f={},__webpack_require__.e=g=>Promise.all(Object.keys(__webpack_require__.f).reduce(((I,n)=>(__webpack_require__.f[n](g,I),I)),[])),__webpack_require__.u=g=>g+".bundle.js",__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(g){if("object"==typeof window)return window}}(),__webpack_require__.o=(g,I)=>Object.prototype.hasOwnProperty.call(g,I),inProgress={},dataWebpackPrefix="omniserver:",__webpack_require__.l=(g,I,n,c)=>{if(inProgress[g])inProgress[g].push(I);else{var e,l;if(void 0!==n)for(var C=document.getElementsByTagName("script"),t=0;t<C.length;t++){var A=C[t];if(A.getAttribute("src")==g||A.getAttribute("data-webpack")==dataWebpackPrefix+n){e=A;break}}e||(l=!0,(e=document.createElement("script")).charset="utf-8",e.timeout=120,__webpack_require__.nc&&e.setAttribute("nonce",__webpack_require__.nc),e.setAttribute("data-webpack",dataWebpackPrefix+n),e.src=g),inProgress[g]=[I];var r=(I,n)=>{e.onerror=e.onload=null,clearTimeout(i);var c=inProgress[g];if(delete inProgress[g],e.parentNode&&e.parentNode.removeChild(e),c&&c.forEach((g=>g(n))),I)return I(n)},i=setTimeout(r.bind(null,void 0,{type:"timeout",target:e}),12e4);e.onerror=r.bind(null,e.onerror),e.onload=r.bind(null,e.onload),l&&document.head.appendChild(e)}},__webpack_require__.r=g=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(g,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(g,"__esModule",{value:!0})},(()=>{var g;__webpack_require__.g.importScripts&&(g=__webpack_require__.g.location+"");var I=__webpack_require__.g.document;if(!g&&I&&(I.currentScript&&"SCRIPT"===I.currentScript.tagName.toUpperCase()&&(g=I.currentScript.src),!g)){var n=I.getElementsByTagName("script");if(n.length)for(var c=n.length-1;c>-1&&(!g||!/^http(s?):/.test(g));)g=n[c--].src}if(!g)throw new Error("Automatic publicPath is not supported in this browser");g=g.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=g})(),(()=>{var g={792:0};__webpack_require__.f.j=(I,n)=>{var c=__webpack_require__.o(g,I)?g[I]:void 0;if(0!==c)if(c)n.push(c[2]);else{var e=new Promise(((n,e)=>c=g[I]=[n,e]));n.push(c[2]=e);var l=__webpack_require__.p+__webpack_require__.u(I),C=new Error;__webpack_require__.l(l,(n=>{if(__webpack_require__.o(g,I)&&(0!==(c=g[I])&&(g[I]=void 0),c)){var e=n&&("load"===n.type?"missing":n.type),l=n&&n.target&&n.target.src;C.message="Loading chunk "+I+" failed.\n("+e+": "+l+")",C.name="ChunkLoadError",C.type=e,C.request=l,c[1](C)}}),"chunk-"+I,I)}};var I=(I,n)=>{var c,e,[l,C,t]=n,A=0;if(l.some((I=>0!==g[I]))){for(c in C)__webpack_require__.o(C,c)&&(__webpack_require__.m[c]=C[c]);t&&t(__webpack_require__)}for(I&&I(n);A<l.length;A++)e=l[A],__webpack_require__.o(g,e)&&g[e]&&g[e][0](),g[e]=0},n=self.webpackChunkomniserver=self.webpackChunkomniserver||[];n.forEach(I.bind(null,0)),n.push=I.bind(null,n.push.bind(n))})(),__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__(888)})();