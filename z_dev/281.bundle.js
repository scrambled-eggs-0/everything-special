"use strict";(self.webpackChunkomniserver=self.webpackChunkomniserver||[]).push([[281],{281:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(763);\n// takes in a series of points and computes the minimum convex hull\r\n// which is what we need for SAT polygons. \r\n\r\n_shared_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A.fixPolygon = (points) => {\r\n    return new GrahamScan(points).hull;\r\n}\r\n\r\nconst X = 0;\r\nconst Y = 1;\r\nconst REMOVED = -1;\r\nclass GrahamScan {\r\n    constructor(points=[[0,1],[1,1]]){\r\n        this.points = points;\r\n        this.hull = this.getHull();\r\n    }\r\n    getHull() {\r\n        const pivot = this.preparePivotPoint();\r\n\r\n        let indexes = Array.from(this.points, (point, i) => i);\r\n        const angles = Array.from(this.points, (point) => this.getAngle(pivot, point));\r\n        const distances = Array.from(this.points, (point) => this.euclideanDistanceSquared(pivot, point));\r\n\r\n        // sort by angle and distance\r\n        indexes.sort((i, j) => {\r\n            const angleA = angles[i];\r\n            const angleB = angles[j];\r\n            if (angleA === angleB) {\r\n                const distanceA = distances[i];\r\n                const distanceB = distances[j];\r\n                return distanceA - distanceB;\r\n            }\r\n            return angleA - angleB;\r\n        });\r\n\r\n        // remove points with repeated angle (but never the pivot, so start from i=1)\r\n        for (let i = 1; i < indexes.length - 1; i++) {\r\n            if (angles[indexes[i]] === angles[indexes[i + 1]]) {  // next one has same angle and is farther\r\n                indexes[i] = REMOVED;  // remove it logically to avoid O(n) operation to physically remove it\r\n            }\r\n        }\r\n\r\n        const hull = [];\r\n        for (let i = 0; i < indexes.length; i++) {\r\n            const index = indexes[i];\r\n            const point = this.points[index];\r\n\r\n            if (index !== REMOVED) {\r\n                if (hull.length < 3) {\r\n                    hull.push(point);\r\n                } else {\r\n                    while (this.checkOrientation(hull[hull.length - 2], hull[hull.length - 1], point) > 0) {\r\n                        hull.pop();\r\n                    }\r\n                    hull.push(point);\r\n                }\r\n            }\r\n        }\r\n\r\n        return hull.length < 3 ? [] : hull;\r\n    }\r\n    checkOrientation(p1, p2, p3) {\r\n        return (p2[Y] - p1[Y]) * (p3[X] - p2[X]) - (p3[Y] - p2[Y]) * (p2[X] - p1[X]);\r\n    }\r\n    getAngle(a, b) {\r\n        return Math.atan2(b[Y] - a[Y], b[X] - a[X]);\r\n    }\r\n    euclideanDistanceSquared(p1, p2) {\r\n        const a = p2[X] - p1[X];\r\n        const b = p2[Y] - p1[Y];\r\n        return a * a + b * b;\r\n    }\r\n    preparePivotPoint() {\r\n        let pivot = this.points[0];\r\n        for (let i = 1; i < this.points.length; i++) {\r\n            const point = this.points[i];\r\n            if (point[Y] < pivot[Y] || point[Y] === pivot[Y] && point[X] < pivot[X]) {\r\n                pivot = point;\r\n            }\r\n        }\r\n        return pivot;\r\n    }\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjgxLmpzIiwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbW5pc2VydmVyLy4vc2hhcmVkL2ZpeFBvbHlnb24uanM/MDRmMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0YWtlcyBpbiBhIHNlcmllcyBvZiBwb2ludHMgYW5kIGNvbXB1dGVzIHRoZSBtaW5pbXVtIGNvbnZleCBodWxsXHJcbi8vIHdoaWNoIGlzIHdoYXQgd2UgbmVlZCBmb3IgU0FUIHBvbHlnb25zLiBcclxuaW1wb3J0IHNoYXJlZCBmcm9tICcuL3NoYXJlZC5qcyc7XHJcbnNoYXJlZC5maXhQb2x5Z29uID0gKHBvaW50cykgPT4ge1xyXG4gICAgcmV0dXJuIG5ldyBHcmFoYW1TY2FuKHBvaW50cykuaHVsbDtcclxufVxyXG5cclxuY29uc3QgWCA9IDA7XHJcbmNvbnN0IFkgPSAxO1xyXG5jb25zdCBSRU1PVkVEID0gLTE7XHJcbmNsYXNzIEdyYWhhbVNjYW4ge1xyXG4gICAgY29uc3RydWN0b3IocG9pbnRzPVtbMCwxXSxbMSwxXV0pe1xyXG4gICAgICAgIHRoaXMucG9pbnRzID0gcG9pbnRzO1xyXG4gICAgICAgIHRoaXMuaHVsbCA9IHRoaXMuZ2V0SHVsbCgpO1xyXG4gICAgfVxyXG4gICAgZ2V0SHVsbCgpIHtcclxuICAgICAgICBjb25zdCBwaXZvdCA9IHRoaXMucHJlcGFyZVBpdm90UG9pbnQoKTtcclxuXHJcbiAgICAgICAgbGV0IGluZGV4ZXMgPSBBcnJheS5mcm9tKHRoaXMucG9pbnRzLCAocG9pbnQsIGkpID0+IGkpO1xyXG4gICAgICAgIGNvbnN0IGFuZ2xlcyA9IEFycmF5LmZyb20odGhpcy5wb2ludHMsIChwb2ludCkgPT4gdGhpcy5nZXRBbmdsZShwaXZvdCwgcG9pbnQpKTtcclxuICAgICAgICBjb25zdCBkaXN0YW5jZXMgPSBBcnJheS5mcm9tKHRoaXMucG9pbnRzLCAocG9pbnQpID0+IHRoaXMuZXVjbGlkZWFuRGlzdGFuY2VTcXVhcmVkKHBpdm90LCBwb2ludCkpO1xyXG5cclxuICAgICAgICAvLyBzb3J0IGJ5IGFuZ2xlIGFuZCBkaXN0YW5jZVxyXG4gICAgICAgIGluZGV4ZXMuc29ydCgoaSwgaikgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBhbmdsZUEgPSBhbmdsZXNbaV07XHJcbiAgICAgICAgICAgIGNvbnN0IGFuZ2xlQiA9IGFuZ2xlc1tqXTtcclxuICAgICAgICAgICAgaWYgKGFuZ2xlQSA9PT0gYW5nbGVCKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBkaXN0YW5jZUEgPSBkaXN0YW5jZXNbaV07XHJcbiAgICAgICAgICAgICAgICBjb25zdCBkaXN0YW5jZUIgPSBkaXN0YW5jZXNbal07XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZGlzdGFuY2VBIC0gZGlzdGFuY2VCO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBhbmdsZUEgLSBhbmdsZUI7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vIHJlbW92ZSBwb2ludHMgd2l0aCByZXBlYXRlZCBhbmdsZSAoYnV0IG5ldmVyIHRoZSBwaXZvdCwgc28gc3RhcnQgZnJvbSBpPTEpXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPCBpbmRleGVzLmxlbmd0aCAtIDE7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAoYW5nbGVzW2luZGV4ZXNbaV1dID09PSBhbmdsZXNbaW5kZXhlc1tpICsgMV1dKSB7ICAvLyBuZXh0IG9uZSBoYXMgc2FtZSBhbmdsZSBhbmQgaXMgZmFydGhlclxyXG4gICAgICAgICAgICAgICAgaW5kZXhlc1tpXSA9IFJFTU9WRUQ7ICAvLyByZW1vdmUgaXQgbG9naWNhbGx5IHRvIGF2b2lkIE8obikgb3BlcmF0aW9uIHRvIHBoeXNpY2FsbHkgcmVtb3ZlIGl0XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IGh1bGwgPSBbXTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGluZGV4ZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgaW5kZXggPSBpbmRleGVzW2ldO1xyXG4gICAgICAgICAgICBjb25zdCBwb2ludCA9IHRoaXMucG9pbnRzW2luZGV4XTtcclxuXHJcbiAgICAgICAgICAgIGlmIChpbmRleCAhPT0gUkVNT1ZFRCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGh1bGwubGVuZ3RoIDwgMykge1xyXG4gICAgICAgICAgICAgICAgICAgIGh1bGwucHVzaChwb2ludCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHdoaWxlICh0aGlzLmNoZWNrT3JpZW50YXRpb24oaHVsbFtodWxsLmxlbmd0aCAtIDJdLCBodWxsW2h1bGwubGVuZ3RoIC0gMV0sIHBvaW50KSA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaHVsbC5wb3AoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgaHVsbC5wdXNoKHBvaW50KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGh1bGwubGVuZ3RoIDwgMyA/IFtdIDogaHVsbDtcclxuICAgIH1cclxuICAgIGNoZWNrT3JpZW50YXRpb24ocDEsIHAyLCBwMykge1xyXG4gICAgICAgIHJldHVybiAocDJbWV0gLSBwMVtZXSkgKiAocDNbWF0gLSBwMltYXSkgLSAocDNbWV0gLSBwMltZXSkgKiAocDJbWF0gLSBwMVtYXSk7XHJcbiAgICB9XHJcbiAgICBnZXRBbmdsZShhLCBiKSB7XHJcbiAgICAgICAgcmV0dXJuIE1hdGguYXRhbjIoYltZXSAtIGFbWV0sIGJbWF0gLSBhW1hdKTtcclxuICAgIH1cclxuICAgIGV1Y2xpZGVhbkRpc3RhbmNlU3F1YXJlZChwMSwgcDIpIHtcclxuICAgICAgICBjb25zdCBhID0gcDJbWF0gLSBwMVtYXTtcclxuICAgICAgICBjb25zdCBiID0gcDJbWV0gLSBwMVtZXTtcclxuICAgICAgICByZXR1cm4gYSAqIGEgKyBiICogYjtcclxuICAgIH1cclxuICAgIHByZXBhcmVQaXZvdFBvaW50KCkge1xyXG4gICAgICAgIGxldCBwaXZvdCA9IHRoaXMucG9pbnRzWzBdO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDwgdGhpcy5wb2ludHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgcG9pbnQgPSB0aGlzLnBvaW50c1tpXTtcclxuICAgICAgICAgICAgaWYgKHBvaW50W1ldIDwgcGl2b3RbWV0gfHwgcG9pbnRbWV0gPT09IHBpdm90W1ldICYmIHBvaW50W1hdIDwgcGl2b3RbWF0pIHtcclxuICAgICAgICAgICAgICAgIHBpdm90ID0gcG9pbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHBpdm90O1xyXG4gICAgfVxyXG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///281\n')}}]);